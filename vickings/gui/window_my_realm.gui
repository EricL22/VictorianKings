######################################################
##################### MY REALM #######################
######################################################

window = {
	name = "my_realm_window"
	datacontext = "[GetVariableSystem]"
	datacontext = "[GetPlayer]"
	parentanchor = top|right
	allow_outside = yes
	movable = no
	layer = windows_layer

	using = Window_Size_MainTab

	state = {
		name = _show
		using = Animation_FadeIn_Quick
		using = Sound_WindowShow_Standard
		using = Window_Position_MainTab
		on_start = "[GetVariableSystem.Clear('showing_reforms')]"
		on_start = "[GetVariableSystem.Clear('showing_vassals')]"
		on_start = "[GetVariableSystem.Clear('showing_succession')]"
		on_start = "[GetVariableSystem.Clear('showing_legislature')]"
		on_start = "[GetVariableSystem.Set('showing_domain', 'true')]"
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
		using = Sound_WindowHide_Standard
		using = Window_Position_MainTab_Hide
	}

	state = {
		name = dismiss
		next = _hide

		trigger_when = "[GetVariableSystem.Exists( 'hide_right_windows' )]"
	}

	margin_widget = {
		size = { 100% 100% }
		margin = { 0 26 }
		margin_right = 20

		widget = {
			size = { 100% 100% }

			### WINDOW CONTENT
			vbox = {
				using = Window_Margins

				##### HEADER NO LIEGE TEXT #####
				header_with_picture = {
					layoutpolicy_horizontal = expanding
					minimumsize = { 0 180 }

					blockoverride "header_text" {
						text = "[GetPlayer.GetPrimaryTitle.GetNameNoTooltip|U]"
					}

					blockoverride "size" {
						size = { 100% 200 }
					}

					blockoverride "illustration_texture" {
						texture = "gfx/interface/illustrations/window_headers/header_my_realm.dds"
					}

					blockoverride "button_close"
					{
						onclick = "[MyRealmWindow.Close]"
					}

					vbox = {
						margin_top = 42
						margin_bottom = 5
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						hbox = {
							spacing = 20

							text_single = {
								name = "realm_type"
								text = "MY_REALM_WINDOW_TYPE"
							}

							text_single = {
								text = "REALM_WINDOW_SIZE"
								tooltip = "REALM_WINDOW_SIZE_TT"
							}
						}

						spacer = {
							visible = "[GetPlayer.HasLiege]"
							layoutpolicy_vertical = expanding
						}

						hbox = {
							layoutpolicy_horizontal = expanding
							margin_top = 10

							expand = {
								visible = "[GetPlayer.HasLiege]"
								size = { 90 5 }
							}

							hbox = {
								name = "crown_authority"
								datamodel = "[MyRealmWindow.GetRealmLaws]"
								ignoreinvisible = yes
								margin_left = 10

								item = {
									vbox = {
										layoutpolicy_vertical = expanding
										datacontext = "[GuiLawGroup.GetLawGroup]"
										visible = "[And( GuiLawGroup.GetLawGroup.HasFlag( 'realm_law' ), GuiLawGroup.IsAvailable )]"
										ignoreinvisible = yes
										spacing = 3

										text_label_center = {
											visible = "[Not(GetPlayer.HasLiege)]"
											text = "[LawGroup.GetName]"
										}

										hbox = {
											margin_left = 5
											layoutpolicy_horizontal = expanding

											text_label_left = {
												visible = "[GetPlayer.HasLiege]"
												layoutpolicy_horizontal = expanding
												text = "[LawGroup.GetName]"
												margin_left = 10
											}
										}

										# spacer = {
										# 	visible = "[GetPlayer.HasLiege]"
										# 	size = { 5 8 }
										# }

										hbox = {
											datamodel = "[GuiLawGroup.GetLaws]"
											visible = "[Not(GetPlayer.HasLiege)]"

											background = {
												texture = "gfx/lines/line_lifestyles_unavailable.dds"
												margin = { -8 -12 }
												tintcolor = { 0.7 0.5 0.25 1 }
											}

											item = {
												icon_button_decorative = {
													datacontext = "[GuiLaw.GetLaw]"
													size = { 60 60 }
													enabled = "[Or(GuiLaw.CanEnact, GuiLaw.IsEnacted)]"
													down = "[GuiLaw.IsEnacted]"
													alwaystransparent = "[GuiLaw.IsEnacted]"
													onclick = "[GuiLaw.Enact]"
													tooltipwidget = { pass_law_tooltip = {} }
													using = tooltip_below

													icon_button_decorative = {
														size = { 54 54 }
														parentanchor = center
														alwaystransparent = yes
													}

													button_icon = {
														visible = "[Not(GuiLaw.IsEnacted)]"
														texture = "[Law.GetIcon]"
														parentanchor = center
														size = { 42 42 }
														alwaystransparent = yes
													}

													icon = {
														visible = "[And( GuiLaw.IsEnacted , Not( GuiLaw.CanEnact ) )]"
														texture = "[Law.GetIcon]"
														parentanchor = center
														size = { 42 42 }
														alwaystransparent = yes

														using = Master_Button_Modify_Texture

														blockoverride "master_color_frame" {
															frame = 2
														}
													}
												}
											}
										}

										hbox = {
											datamodel = "[GuiLawGroup.GetLaws]"
											visible = "[GetPlayer.HasLiege]"
											margin_left = 10

											background = {
												texture = "gfx/lines/line_lifestyles_unavailable.dds"
												margin = { -16 -12 }
												tintcolor = { 0.7 0.5 0.25 1 }
											}

											item = {
												icon_button_decorative = {
													datacontext = "[GuiLaw.GetLaw]"
													size = { 50 50 }
													enabled = "[Or(GuiLaw.CanEnact, GuiLaw.IsEnacted)]"
													down = "[GuiLaw.IsEnacted]"
													alwaystransparent = "[GuiLaw.IsEnacted]"
													onclick = "[GuiLaw.Enact]"
													tooltipwidget = { pass_law_tooltip = {} }
													using = tooltip_below

													icon_button_decorative = {
														size = { 44 44 }
														parentanchor = center
														alwaystransparent = yes
													}

													button_icon = {
														visible = "[Not(GuiLaw.IsEnacted)]"
														texture = "[Law.GetIcon]"
														parentanchor = center
														size = { 32 32 }
														alwaystransparent = yes
													}

													icon = {
														visible = "[And( GuiLaw.IsEnacted , Not( GuiLaw.CanEnact ) )]"
														texture = "[Law.GetIcon]"
														parentanchor = center
														size = { 42 42 }
														alwaystransparent = yes

														using = Master_Button_Modify_Texture

														blockoverride "master_color_frame" {
															frame = 2
														}
													}
												}
											}
										}

										expand = {
											visible = "[GetPlayer.HasLiege]"
											layoutpolicy_horizontal = expanding
										}
									}
								}
							}

							spacer = {
								visible = "[GetPlayer.HasLiege]"
								size = { 15 5 }
							}

							## LIEGE INFO
							vbox = {
								name = "liege"
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding
								margin_right = 10
								datacontext = "[MyRealmWindow.GetCharacter.GetLiege]"
								visible = "[GetPlayer.HasLiege]"

								text_label_left = {
									text = "MY_REALM_WINDOW_MY_LIEGE"
									layoutpolicy_horizontal = expanding
									margin_left = 2
								}

								expand = {}

								vbox = {
									layoutpolicy_horizontal = expanding

									text_single = {
										layoutpolicy_horizontal = expanding
										text = "[Character.GetUIName]"
										autoresize = no
										align = left
										max_width = 330
									}

									hbox = {
										layoutpolicy_horizontal = expanding

										widget = {
											size = { 30 25 }

											button_icon_highlight = {
												datacontext = "[Character.GetActiveLawInGroupWithFlag( 'realm_law' )]"
												size = { 35 35 }
												parentanchor = center
												texture = "[Law.GetIcon]"
												tooltipwidget = { general_law_tooltip = {} }
												using = tooltip_ws
											}
										}

										text_single = {
											text = "[Character.GetGovernment.GetName]"
										}

										expand = {}
									}
								}

								expand = {}
							}
						}
					}

					widget = {
						visible = "[GetPlayer.HasLiege]"
						allow_outside = yes
						size = { 55 80	}

						coa_realm_small_crown = {
							parentanchor = top|hcenter
							position = { 10 5 }
						}
					}

					widget = {
						visible = "[Not(GetPlayer.HasLiege)]"
						allow_outside = yes
						size = { 89 98 }

						coa_realm_big_crown = {
							parentanchor = top|hcenter
							position = { 5 5 }
						}
					}
				}

				hbox = {
					name = "vassals_succession_tabs"
					layoutpolicy_horizontal = expanding

					button_tab = {
						name = "tutorial_highlight_domain_tab"
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						#onclick = "[MyRealmWindow.ShowDomain]"
						onclick = "[GetVariableSystem.Clear('showing_reforms')]"
						onclick = "[GetVariableSystem.Clear('showing_vassals')]"
						onclick = "[GetVariableSystem.Clear('showing_succession')]"
						onclick = "[GetVariableSystem.Clear('showing_legislature')]"
						onclick = "[GetVariableSystem.Set('showing_domain', 'true')]"
						down = "[GetVariableSystem.Exists('showing_domain')]"			#"[MyRealmWindow.IsShowingDomain]"

						text = "MY_REALM_WINDOW_DOMAIN_TAB"
					}

					button_tab = {
						name = "tutorial_highlight_vassals_tab"
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						#onclick = "[MyRealmWindow.ShowVassals]"
						onclick = "[GetVariableSystem.Clear('showing_reforms')]"
						onclick = "[GetVariableSystem.Clear('showing_succession')]"
						onclick = "[GetVariableSystem.Clear('showing_domain')]"
						onclick = "[GetVariableSystem.Clear('showing_legislature')]"
						onclick = "[GetVariableSystem.Set('showing_vassals', 'true')]"
						down = "[GetVariableSystem.Exists('showing_vassals')]"			#"[MyRealmWindow.IsShowingVassals]"

						text = "MY_REALM_WINDOW_VASSALS_TAB"
					}

					button_tab = {
						name = "tutorial_highlight_succession_tab"
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						#onclick = "[MyRealmWindow.ShowSuccession]"
						onclick = "[GetVariableSystem.Clear('showing_reforms')]"
						onclick = "[GetVariableSystem.Clear('showing_vassals')]"
						onclick = "[GetVariableSystem.Clear('showing_domain')]"
						onclick = "[GetVariableSystem.Clear('showing_legislature')]"
						onclick = "[GetVariableSystem.Set('showing_succession', 'true')]"
						down = "[GetVariableSystem.Exists('showing_succession')]"		#"[MyRealmWindow.IsShowingSuccession]"

						text = "MY_REALM_WINDOW_SUCCESSION_TAB"
					}

					button_tab = {
						name = "tutorial_highlight_reform_tab"
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						onclick = "[GetVariableSystem.Set('showing_reforms', 'true')]"
						onclick = "[GetVariableSystem.Clear('showing_domain')]"
						onclick = "[GetVariableSystem.Clear('showing_vassals')]"
						onclick = "[GetVariableSystem.Clear('showing_succession')]"
						onclick = "[GetVariableSystem.Clear('showing_legislature')]"
						down = "[GetVariableSystem.Exists('showing_reforms')]"

						text = "MY_REALM_WINDOW_REFORM_TAB"
					}

					button_tab = {
						name = "tutorial_highlight_legislature_tab"
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						visible = "[GetScriptedGui('realm_uses_legislature_tab').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
						onclick = "[GetVariableSystem.Set('showing_legislature', 'true')]"
						onclick = "[GetVariableSystem.Clear('showing_domain')]"
						onclick = "[GetVariableSystem.Clear('showing_vassals')]"
						onclick = "[GetVariableSystem.Clear('showing_succession')]"
						onclick = "[GetVariableSystem.Clear('showing_reforms')]"
						down = "[GetVariableSystem.Exists('showing_legislature')]"

						text = "MY_REALM_WINDOW_LEGISLATURE_TAB"
					}
				}

				### DOMAIN TAB
				vbox = {
					name = "tab_domain"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					visible = "[GetVariableSystem.Exists('showing_domain')]"			#"[MyRealmWindow.IsShowingDomain]"

					using = Animation_Tab_Switch

					scrollbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						blockoverride "scrollbox_content" {
							vbox = {
								datamodel = "[MyRealmWindow.GetDomainItems]"
								layoutpolicy_horizontal = expanding
								spacing = 20

								item = {
									vbox = {
										layoutpolicy_horizontal = expanding
										name = "duchy_group"

										hbox = {
											layoutpolicy_horizontal = expanding

											hbox = {
												spacing = 5

												coa_title_tiny_crown = {
													datacontext = "[DuchyGroup.GetDuchy]"
													using = tooltip_ws
												}

												text_label_center = {
													text = "[DuchyGroup.GetDuchy.GetNameNoTooltip]"
													using = Font_Size_Medium
													default_format = "#low"
												}
											}
										}

										hbox = {
											layoutpolicy_horizontal = expanding
											margin = { 10 0 }

											divider_light = {
												layoutpolicy_horizontal = expanding
												alpha = 0.6
											}
										}

										vbox = {
											name = "county_group"
											datamodel = "[DuchyGroup.GetCounties]"
											layoutpolicy_horizontal = expanding
											spacing = 20

											item = {
												vbox = {
													layoutpolicy_horizontal = expanding
													datacontext = "[CountyGroup.GetCounty]"
													datacontext = "[CountyGroup.GetCapitalProvince.GetCounty]"

													hbox = {
														layoutpolicy_horizontal = expanding
														margin_left = 5
														margin_right = 10
														spacing = 7

														coa_title_tiny = {}

														text_single = {
															layoutpolicy_horizontal = expanding
															text = "[Title.GetNameNoTooltip]"
														}

														text_single = {
															name = "development"
															text = "MY_REALM_WINDOW_DEVELOPMENT"
															tooltip = "COUNTY_DEVELOPMENT_TOOLTIP"
														}

														text_single = {
															name = "tutorial_highlight_control"
															text = "[CountyGroup.GetCountyControlColored]"
															tooltip = "MY_REALM_WINDOW_CONTROL_TOOLTIP"
														}
													}

													vbox = {
														datamodel = "[CountyGroup.GetHoldings]"
														layoutpolicy_horizontal = expanding
														margin_left = 10
														margin_right = 10
														margin_bottom = 5
														spacing = 3

														item = {
															vbox = {
																layoutpolicy_horizontal = expanding
																datacontext = "[HoldingItem.GetHolding]"

																background = {
																	fittype = centercrop
																	alpha = 0.7
																	texture = "[HoldingItem.GetHolding.GetIllustration]"

																	modify_texture = {
																		texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
																		blend_mode = alphamultiply
																	}

																	modify_texture = {
																		texture = "gfx/interface/component_overlay/overlay_effect.dds"
																		blend_mode = overlay
																	}
																}

																button_standard_clean = {
																	layoutpolicy_horizontal = expanding
																	size = { 0 80 }

																	onclick = "[HoldingItem.OnClick]"

																	tooltipwidget = { holding_tooltip_click = {} }

																	background = {
																		using = Background_Button_Illustration
																		visible = "[Holding.IsSelected]"
																	}

																	using = Background_Vignette_Button
																	using = Holding_Mouse_Entry

																	vbox = {
																		margin = { 10 2 }

																		hbox = {
																			name = "holding_header"
																			layoutpolicy_horizontal = expanding
																			spacing = 6

																			hbox = {
																				spacing = 6

																				background = {
																					margin_left = 15
																					margin_right = 25
																					margin_top = 0
																					margin_bottom = 5

																					texture = "gfx/interface/component_tiles/tile_title_bg_01.dds"
																					spriteType = Corneredtiled
																					spriteborder = { 40 8 }
																					texture_density = 2

																					modify_texture = {
																						name = "mask"
																						texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
																						blend_mode = alphamultiply
																						mirror = horizontal
																					}
																				}

																				icon = {
																					name = "realm_capital_icon"
																					size = { 25 25 }
																					framesize = { 63 63 }
																					texture = "gfx/interface/icons/icon_capital.dds"
																					visible = "[HoldingItem.IsRealmCapital]"
																					frame = 2
																					tooltip = "REALM_CAPITAL_TOOLTIP"
																				}

																				text_single = {
																					text = "MY_REALM_WINDOW_HOLDING_NAME"
																				}
																			}

																			expand = {}

																			text_single = {
																				alwaystransparent = yes
																				default_format = "#high"
																				minimumsize = { 60 0}

																				text = "MY_REALM_WINDOW_HOLDING_TAX"
																				tooltip = "[Holding.GetTaxTooltip]"
																			}

																			text_single = {
																				alwaystransparent = yes
																				margin_left = 4
																				minimumsize = { 70 0}
																				text = "MY_REALM_WINDOW_HOLDING_LEVY"
																				default_format = "#high"
																				tooltip = "[Holding.GetLeviesTooltip]"
																			}
																		}

																		hbox = {
																			layoutpolicy_horizontal = expanding
																			name = "holding_buildings"

																			minimumsize = { 0 40 }

																			vbox = {
																				tooltip = "MY_REALM_WINDOW_BUILDING_CONSTRUCTION_TT"
																				using = tooltip_ne


																				text_single = {
																					text = "[HoldingItem.GetStatusText]"
																					align = nobaseline
																				}

																				hbox = {
																					layoutpolicy_horizontal = expanding

																					progressbar_standard = {
																						name = "building_progressbar"
																						visible = "[HoldingItem.GetHolding.IsConstructionInProgress]"
																						alwaystransparent = yes

																						layoutpolicy_horizontal = expanding
																						maximumsize = { -1 15 }
																						value = "[HoldingItem.GetHolding.GetConstructionProgress]"
																						direction = horizontal
																					}

																					expand = {}
																				}
																			}

																			text_single = {
																				layoutpolicy_horizontal = expanding
																				visible = "[HoldingItem.GetHolding.CanConstructAnyBuilding(GetPlayer)]"
																				text = "MY_REALM_WINDOW_CONSTRUCT_BUILDING"
																				default_format = "#P"
																			}

																			expand = {}

																		}
																	}
																}
															}
														}
													}

													vbox = {
														layoutpolicy_horizontal = expanding
														visible = "[DataModelHasItems(CountyGroup.GetEmptyHoldings)]"
														spacing = 5
														margin_left = 10
														margin_right = 10

														button_group = {
															onclick = "[CountyGroup.ToggleExpanded]"
															layoutpolicy_horizontal = expanding

															flowcontainer = {
																spacing = 5

																widget = {
																	size = { 18 22 }

																	button_expand = {
																		frame = "[Select_int32( CountyGroup.IsExpanded, '(int32)2', '(int32)1' )]"
																		parentanchor = center
																	}
																}

																text_single = {
																	text = "ME_REALM_WINDOW_EMPTY_HOLDINGS"
																	default_format = "#low"
																	align = nobaseline
																}
															}
														}

														expand = {}

														vbox = {
															datamodel = "[CountyGroup.GetEmptyHoldings]"
															visible = "[CountyGroup.IsExpanded]"
															layoutpolicy_horizontal = expanding
															margin_left = 23
															margin_bottom = 5
															spacing = 4

															item = {
																vbox = {
																	layoutpolicy_horizontal = expanding
																	datacontext = "[HoldingItem.GetHolding]"

																	button_standard = {
																		layoutpolicy_horizontal = expanding
																		layoutpolicy_vertical = expanding
																		minimumsize = { 0 45 }

																		datacontext = "[HoldingItem.GetHolding]"
																		onclick = "[HoldingItem.OnClick]"
																		down = "[Holding.IsSelected]"

																		using = Holding_Mouse_Entry
																		using = Background_Vignette_Button

																		tooltipwidget = {
																			holding_tooltip_click = {}
																		}
																		using = tooltip_ne

																		widget = {
																			scissor = yes
																			size = { 350 43 }
																			parentanchor = right|top

																			icon = {
																				name = "illustration"
																				parentanchor = right|top
																				size = { 180 90 }
																				texture = "[HoldingItem.GetHolding.GetProvince.GetTerrain.GetIllustration]"
																				alpha = 0.4
																				mirror = horizontal
																				using = Mask_Rough_Edges

																				modify_texture = {
																					texture = "gfx/interface/component_masks/mask_fade_horizontal_extended.dds"
																					blend_mode = alphamultiply
																				}
																			}
																		}

																		hbox = {
																			margin = { 10 0 }

																			vbox = {
																				layoutpolicy_vertical = expanding
																				margin_top = 2

																				text_single = {
																					text = "[HoldingItem.GetBarony.GetNameNoTierNoTooltip]"
																				}

																				expand = {}
																			}

																			expand = {}

																			vbox = {
																				layoutpolicy_vertical = expanding
																				visible = "[HoldingItem.GetHolding.IsConstructionInProgress]"
																				margin = { 0 4 }

																				text_single = {
																					layoutpolicy_horizontal = expanding
																					text = "[HoldingItem.GetStatusText]"

																					align = nobaseline
																				}

																				expand = {}

																				hbox = {
																					layoutpolicy_horizontal = expanding
																					margin_bottom = 3

																					progressbar_standard = {
																						name = "building_progressbar"
																						alwaystransparent = yes
																						size = { 180 12 }
																						value = "[HoldingItem.GetHolding.GetConstructionProgress]"
																						direction = horizontal
																					}
																				}
																			}

																			vbox = {
																				layoutpolicy_vertical = expanding
																				margin_top = 2

																				text_label_right = {
																					visible = "[HoldingItem.GetHolding.CanConstructAnyBuilding(GetPlayer)]"
																					layoutpolicy_vertical = fixed
																					text = "MY_REALM_WINDOW_CONSTRUCT_HOLDING"
																					default_format = "#P"
																				}

																				expand = {}
																			}
																		}
																	}
																}
															}
														}
													}

													expand = {}
												}
											}
										}
									}
								}
							}
						}
					}
				}

				### VASSALS TAB
				vbox = {
					name = "tab_vassals"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					visible = "[GetVariableSystem.Exists('showing_vassals')]"			#"[MyRealmWindow.IsShowingVassals]"

					state = {
						name = _show
						using = Animation_FadeIn_Quick
					}

					state = {
						name = _hide
						alpha = 0
					}

					hbox = {
						name = "government_filters_container"
						margin = { 0 7 }

						hbox = {
							name = "government_filters"
							datamodel = "[MyRealmWindow.GetGovernmentTypeHeaders]"
							visible = "[LessThan_int32(GetDataModelSize(MyRealmWindow.GetGovernmentTypeHeaders), '(int32)3')]"
							spacing = 5
							layoutpolicy_horizontal = expanding

							button_standard_clean = {
								name = "all_governments"
								size = { 60 33 }
								default_format = "#low"

								text = "MRW_GOVERNMENT_FILTER_ALL"
								tooltip = "MRW_GOVERNMENT_FILTER_ALL_TT"
								using = tooltip_above
								down = "[Not(MyRealmWindow.HasGovernmentTypeFilter)]"
								onclick = "[MyRealmWindow.ResetGovernmentTypeFilter]"
							}

							item = {
								button_standard_clean = {
									name = "government_filter"
									datacontext = "[GovernmentTypeHeader.GetGovernmentType]"

									text = "MRW_GOVERNMENT_FILTER"
									default_format = "#low"

									tooltip = "MRW_GOVERNMENT_FILTER_TT"
									using = tooltip_above
									down = "[GovernmentTypeHeader.IsSelected]"
									onclick = "[GovernmentTypeHeader.OnClick]"
								}
							}
						}

						hbox = {
							name = "small_government_filters"
							datamodel = "[MyRealmWindow.GetGovernmentTypeHeaders]"
							visible = "[GreaterThanOrEqualTo_int32(GetDataModelSize(MyRealmWindow.GetGovernmentTypeHeaders), '(int32)3')]"
							spacing = 5
							layoutpolicy_horizontal = expanding

							button_standard_clean = {
								name = "all_governments"
								size = { 56 33 }
								default_format = "#low"

								text = "MRW_GOVERNMENT_FILTER_ALL"
								tooltip = "MRW_GOVERNMENT_FILTER_ALL_TT"
								using = tooltip_above
								down = "[Not(MyRealmWindow.HasGovernmentTypeFilter)]"
								onclick = "[MyRealmWindow.ResetGovernmentTypeFilter]"
							}

							item = {
								button_standard_clean = {
									name = "small_government_filter"
									datacontext = "[GovernmentTypeHeader.GetGovernmentType]"
									size = { 96 33 }

									text = "[GovernmentType.GetNameNoTooltip]"
									default_format = "#low"

									tooltip = "MRW_GOVERNMENT_FILTER_TT"
									using = tooltip_above
									down = "[GovernmentTypeHeader.IsSelected]"
									onclick = "[GovernmentTypeHeader.OnClick]"
								}
							}
						}
					}

					text_single = {
						visible = "[MyRealmWindow.HasGovernmentTypeFilter]"
						margin_top = 5
						margin_bottom = 10

						text = "[MyRealmWindow.GetGovernmentTypeFilter.GetVassalsLabel]"
					}

					scrollbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						blockoverride "scrollbox_margins" {
							margin = { 5 5 }
						}

						blockoverride "scrollbox_content"
						{
							visible = "[GreaterThan_int32( MyRealmWindow.GetVassalCount, '(int32)0' )]"

							fixedgridbox = {
								layoutpolicy_horizontal = expanding
								datacontext = "[MyRealmWindow.GetPowerfulVassals]"
								datamodel = "[CharacterSelectionList.GetList]"
								visible = "[Not(CharacterSelectionList.IsBuildingList)]"
								addcolumn = 545
								addrow = 185
								setitemsizefromcell = yes

								item = {
									widget_vassal_list_item = {
										datacontext = "[CharacterListItem.GetCharacter]"
										datacontext = "[MyRealmWindow.GetVassalInfo( Character.Self )]"
										datacontext = "[MyRealmWindowVassalItem.GetContract]"

										blockoverride "vassal_portrait"
										{
											portrait_shoulders = {}
										}
									}
								}
							}

							fixedgridbox = {
								layoutpolicy_horizontal = expanding
								datacontext = "[MyRealmWindow.GetRegularVassals]"
								datamodel = "[CharacterSelectionList.GetList]"
								visible = "[Not(CharacterSelectionList.IsBuildingList)]"
								addcolumn = 545
								addrow = 185
								setitemsizefromcell = yes

								item = {
									widget_vassal_list_item = {
										datacontext = "[CharacterListItem.GetCharacter]"
										datacontext = "[MyRealmWindow.GetVassalInfo( Character.Self )]"
										datacontext = "[MyRealmWindowVassalItem.GetContract]"
									}
								}
							}
							expand = {}
						}

						vbox = {
							visible = "[EqualTo_int32( MyRealmWindow.GetVassalCount, '(int32)0' )]"
							text_single = {
								text = "NO_VASSALS_TO_DISPLAY"
								default_format = "#weak"
							}
						}
					}

					vbox = {
						layoutpolicy_horizontal = expanding
						margin = { 15 0 }
						margin_top = 15
						margin_bottom = 15

						vbox = {
							layoutpolicy_horizontal = expanding
							margin = { 0 5 }

							background = {
								using = Background_Area
								margin = { -20 0 }
								margin_bottom = 10
								margin_top = 3
							}

							hbox = {
								spacing = 20

								text_single = {
									default_format = "#high"
									text = "MY_REALM_WINDOW_VASSAL_OPINION"
									tooltip = "MY_REALM_WINDOW_VASSAL_OPINION_TT"
								}

								hbox = {

									tooltip = "[GetPlayer.GetDreadBreakdown]"

									icon = {
										name = "dread_icon"
										size = { 30 30 }
										texture = "gfx/interface/icons/icon_dread.dds"
									}

									text_single = {
										name = "dread_name"
										text = "[dread|E]: [GetPlayer.GetDread|0]"
										default_format = "#high"
									}
								}

								hbox = {
									spacing = 2
									tooltip = "[Character.GetVassalLimitTooltip]"
									name = "tutorial_highlight_vassal_limit"

									background = {
										visible = "[GreaterThan_int32( Character.GetNumVassalsTowardsLimit, Character.GetVassalLimit )]"
										using = Status_Bad
									}

									icon = {
										size = { 30 30 }
										texture = "gfx/interface/icons/icon_vassal.dds"
									}

									text_single = {
										text = "MY_REALM_WINDOW_VASSAL_LIMIT"
									}

									text_single = {
										text = "MY_REALM_WINDOW_VASSAL_LIMIT_VALUE"
									}
								}



							}
						}
					}
				}

				### SUCCESSION TAB
				vbox = {
					name = "tab_succession"
					visible = "[GetVariableSystem.Exists('showing_succession')]"			#"[MyRealmWindow.IsShowingSuccession]"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					state = {
						name = _show
						using = Animation_FadeIn_Quick
					}

					state = {
						name = _hide
						alpha = 0
					}

					vbox = {
						margin = { 20 15 }
						margin_bottom = 10
						spacing = 4
						layoutpolicy_horizontal = expanding

						text_label_center = {
							text = "MY_REALM_WINDOW_CURRENT_SUCCESSION"
						}

						vbox = {
							datamodel = "[MyRealmWindow.GetRealmLaws]"
							spacing = 10
							margin_bottom = 5
							ignoreinvisible = yes
							layoutpolicy_horizontal = expanding

							item = {
								hbox = {
									visible = "[And( Not( GuiLawGroup.GetLawGroup.HasFlag( 'realm_law' ) ), GuiLawGroup.IsAvailable )]"
									layoutpolicy_horizontal = growing

									vbox = {
										layoutpolicy_horizontal = growing

										text_single = {
											layoutpolicy_horizontal = growing
											max_width = 350
											raw_text = "[GuiLawGroup.GetLawGroup.GetNameSingular]:"
										}

										text_single = {
											layoutpolicy_horizontal = growing
											max_width = 350
											text = "[GuiLawGroup.GetCurrentLevel.GetLaw.GetName]"
											default_format = "#high"
										}

										text_single = {
											layoutpolicy_horizontal = growing
											max_width = 350
											visible = "[GuiLawGroup.GetCurrentLevel.GetLaw.HasSubName]"
											text = "[GuiLawGroup.GetCurrentLevel.GetLaw.GetSubName]"
											default_format = "#F"
										}
									}
									expand = {
										layoutpolicy_horizontal = growing
									}

									button_standard = {
										datacontext = "[GuiLawGroup]"
										size = { 150 32 }
										onclick = "[OpenSuccessionLawChangeWindow(GuiLawGroup.Self)]"
										text = "MRW_CHANGE_LAW"
										tooltip = "MRW_CHANGE_LAW_TT"
									}
								}
							}
						}

						divider_light = {
							layoutpolicy_horizontal = growing
						}

						hbox = {
							layoutpolicy_horizontal = growing

							vbox = {
								layoutpolicy_horizontal = growing


								text_single = {
									layoutpolicy_horizontal = growing
									max_width = 350
									text = "MRW_DESIGNATED_HEIR_LABEL"
								}

								text_single = {
									visible = "[MyRealmWindow.GetCharacter.GetDesignatedHeir.IsValid]"
									layoutpolicy_horizontal = growing
									text = "MRW_DESIGNATED_HEIR"
									max_width = 350
								}

								text_single = {
									visible = "[Not(MyRealmWindow.GetCharacter.GetDesignatedHeir.IsValid)]"
									layoutpolicy_horizontal = growing
									text = "MRW_NO_DESIGNATED_HEIR"
									max_width = 350
								}
							}

							button_standard = {
								text = "MY_REALM_WINDOW_DESIGNATE_HEIR"
								size = { 150 32 }
								tooltip = "MRW_DESIGNATE_HEIR_TT"
								enabled = "[MyRealmWindow.CanDesignateHeir]"
								onclick = "[OpenDesignateHeirWindow]"
							}
						}

						spacer = {
							visible = "[GetScriptedGui('has_republic_government').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							size = { 0 4 }
						}

						divider_light = {
							layoutpolicy_horizontal = growing
							visible = "[GetScriptedGui('has_republic_government').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
						}

						spacer = {
							visible = "[GetScriptedGui('has_republic_government').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							size = { 0 4 }
						}

						hbox = {
							visible = "[GetScriptedGui('has_republic_government').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							layoutpolicy_horizontal = growing
							spacing = 20
							vbox = {
								layoutpolicy_horizontal = growing
								text_single = {
									layoutpolicy_horizontal = growing
									max_width = 350
									text = "REPUBLIC_TERM_LIMITS"
								}
							}

							button_standard = {
								size = { 60 60 }
                   						tooltip = "[GetScriptedGui('can_pass_four_year_limit').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
                  						enabled = "[GetScriptedGui('can_pass_four_year_limit').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
								onclick = "[GetScriptedGui('can_pass_four_year_limit').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

								text_multi = {
									text = "term_limit_4"
									size = { 100% 100% }
									align = center
									margin = { 8 5 }
									default_format = "#high"
								}

								icon = {
									name = "victory_glow"
									visible = "[GetScriptedGui('has_four_year_term_limit').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									size = { 100% 100% }
									texture = "gfx/interface/component_masks/mask_fade_circle.dds"
									using = Color_Orange
									alpha = 0.8
								}
							}
							button_standard = {
								size = { 60 60 }
                   						tooltip = "[GetScriptedGui('can_pass_five_year_limit').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
                  						enabled = "[GetScriptedGui('can_pass_five_year_limit').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
								onclick = "[GetScriptedGui('can_pass_five_year_limit').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

								text_multi = {
									text = "term_limit_5"
									size = { 100% 100% }
									align = center
									margin = { 8 5 }
									default_format = "#high"
								}

								icon = {
									name = "victory_glow"
									visible = "[GetScriptedGui('has_five_year_term_limit').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									size = { 100% 100% }
									texture = "gfx/interface/component_masks/mask_fade_circle.dds"
									using = Color_Orange
									alpha = 0.8
								}
							}
							button_standard = {
								size = { 60 60 }
                   						tooltip = "[GetScriptedGui('can_pass_six_year_limit').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
                  						enabled = "[GetScriptedGui('can_pass_six_year_limit').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
								onclick = "[GetScriptedGui('can_pass_six_year_limit').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

								text_multi = {
									text = "term_limit_6"
									size = { 100% 100% }
									align = center
									margin = { 8 5 }
									default_format = "#high"
								}

								icon = {
									name = "victory_glow"
									visible = "[GetScriptedGui('has_six_year_term_limit').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									size = { 100% 100% }
									texture = "gfx/interface/component_masks/mask_fade_circle.dds"
									using = Color_Orange
									alpha = 0.8
								}
							}
							button_standard = {
								size = { 60 60 }
                   						tooltip = "[GetScriptedGui('can_pass_seven_year_limit').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
                  						enabled = "[GetScriptedGui('can_pass_seven_year_limit').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
								onclick = "[GetScriptedGui('can_pass_seven_year_limit').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

								text_multi = {
									text = "term_limit_7"
									size = { 100% 100% }
									align = center
									margin = { 8 5 }
									default_format = "#high"
								}

								icon = {
									name = "victory_glow"
									visible = "[GetScriptedGui('has_seven_year_term_limit').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									size = { 100% 100% }
									texture = "gfx/interface/component_masks/mask_fade_circle.dds"
									using = Color_Orange
									alpha = 0.8
								}
							}
							button_standard = {
								size = { 60 60 }
                   						tooltip = "[GetScriptedGui('can_pass_limit_off').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
                  						enabled = "[GetScriptedGui('can_pass_limit_off').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
								onclick = "[GetScriptedGui('can_pass_limit_off').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

								text_multi = {
									text = "term_limit_off"
									size = { 100% 100% }
									align = center
									margin = { 8 5 }
									default_format = "#high"
								}

								icon = {
									name = "victory_glow"
									visible = "[GetScriptedGui('has_term_limit_off').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									size = { 100% 100% }
									texture = "gfx/interface/component_masks/mask_fade_circle.dds"
									using = Color_Orange
									alpha = 0.8
								}
							}
						}
					}

					scrollbox = {
						name = "succession_scrollbox"
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						minimumsize = { 0 350 }

						blockoverride "scrollbox_content"
						{
							margin = { 20 10 }
							spacing = 10

							hbox = {
								name = "current_heir"
								layoutpolicy_horizontal = expanding

								background = {
									using =  Background_Area_Dark
									alpha = 0.8

									modify_texture = {
										texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
										blend_mode = alphamultiply
										mirror = horizontal
									}
								}

								portrait_head = {
									datacontext = "[MyRealmWindow.GetCharacter.GetPlayerHeir]"
									blockoverride "glow_visible"
									{
										visible = no
									}
								}

								vbox = {
									layoutpolicy_vertical = expanding
									layoutpolicy_horizontal = expanding
									margin = { 5 0 }
									margin_top = 5

									vbox = {
										layoutpolicy_horizontal = expanding

										text_single = {
											visible = "[MyRealmWindow.HasHeir]"
											layoutpolicy_horizontal = expanding
											autoresize = no
											using = Font_Size_Medium
											fontsize_min = 14

											text = "[MyRealmWindow.GetCharacter.GetPlayerHeir.GetUINameNoTooltip]"
											default_format = "#low"
										}

										text_single = {
											visible = "[MyRealmWindow.HasHeir]"
											layoutpolicy_horizontal = expanding
											layoutpolicy_vertical = expanding
											autoresize = no

											text = "MRW_YOUR_PLAYER_HEIR"
											default_format = "#weak"
										}
									}

									vbox = {
										layoutpolicy_horizontal = expanding

										text_single = {
											name = "no_heir_warning"
											visible = "[Not( MyRealmWindow.HasHeir )]"
											layoutpolicy_horizontal = expanding
											text = "MY_REALM_WINDOW_NO_HEIR_FLAVOR"
										}

										text_single = {
											name = "not_primary_heir"
											visible = "[And( MyRealmWindow.HasHeir, Not( ObjectsEqual( MyRealmWindow.GetCharacter.GetPlayerHeir, MyRealmWindow.GetCharacter.GetPrimaryTitle.GetHeir.Self ) ) )]"
											layoutpolicy_horizontal = expanding
											text = "MY_REALM_WINDOW_NOT_PRIMARY_HEIR"
										}
									}

									expand = {}
								}
							}

							##### FROM REALM'S PARTITION #####
							vbox = {
								layoutpolicy_horizontal = expanding

								vbox = {
									name = "their_partition_share"
									visible = "[And(MyRealmWindow.HasPartition, DataModelHasItems(MyRealmWindow.GetMyPartitionShare))]"
									layoutpolicy_horizontal = expanding
									margin_left = 5

									hbox = {
										layoutpolicy_horizontal = expanding

										text_label_left = {
											layoutpolicy_horizontal = expanding
											text = "MY_REALM_WINDOW_PARTITION_SHARE"
										}

										expand = {}
									}

									overlappingitembox = {
										name = "partition_share_box"
										datamodel = "[MyRealmWindow.GetMyPartitionShare]"
										layoutpolicy_horizontal = expanding
										size = { 460 55 }
										spacing = 10

										item = {
											coa_title_tiny_crown = {
												datacontext = "[TitleItem.GetTitle]"
												using = tooltip_ne
											}
										}
									}
								}

								spacer = {
									size = { 5 5 }
								}

								hbox = {
									layoutpolicy_horizontal = expanding
									visible = "[DataModelHasItems(MyRealmWindow.GetTitleSuccession)]"
									margin = { 5 0 }

									button_group = {
										onclick = "[GetVariableSystem.Toggle( 'expand_partition' )]"

										flowcontainer = {
											ignoreinvisible = yes
											spacing = 5

											widget = {
												size = { 18 22 }

												button_expand = {
													visible = "[Not(GetVariableSystem.Exists( 'expand_partition' ))]"
													parentanchor = center
													frame = 1
												}

												button_expand = {
													visible = "[GetVariableSystem.Exists( 'expand_partition' )]"
													parentanchor = center
													frame = 2
												}
											}

											text_single = {
												text = "MY_REALM_WINDOW_TITLES_LOST_ON_SUCCESSION"
												align = nobaseline
											}
										}
									}

									expand = {}
								}

								spacer = {
									visible = "[GetVariableSystem.Exists( 'expand_partition' )]"
									size = { 5 5 }
								}

								dynamicgridbox = {
									name = "title_succession"
									datamodel = "[MyRealmWindow.GetTitleSuccession]"
									visible = "[GetVariableSystem.Exists( 'expand_partition' )]"
									layoutpolicy_horizontal = expanding

									item = {
										hbox = {
											maximumsize = { -1 100 }
											margin_left = 10
											margin_bottom = 5
											datacontext = "[TitleSuccessionItem.GetHeir]"

											background = {
												using = Background_Area_With_Header
											}

											vbox = {
												layoutpolicy_horizontal = expanding
												layoutpolicy_vertical = growing
												margin_bottom = 5

												text_single = {
													name = "heir_name"
													text = "[Character.GetUINameNoTooltip]"
													layoutpolicy_horizontal = expanding
													using = Font_Size_Medium
													max_width = 400
													fontsize_min = 14
												}

												spacer = {
													size = { 10 5 }
												}

												text_single = {
													name = "heir_not_your_dynasty"
													layoutpolicy_horizontal = expanding

													text = "MY_REALM_WINDOW_HEIR_NOT_MY_DYNASTY"
													visible = "[Not(ObjectsEqual(Character.GetHouse.GetDynasty.Self, GetPlayer.GetHouse.GetDynasty.Self))]"
													using = Font_Size_Small
												}

												text_single = {
													name = "heir_share"
													datacontext = "[GetPlayer]"
													visible = "[DataModelHasItems(TitleSuccessionItem.GetPartitionTitles)]"
													layoutpolicy_horizontal = expanding

													text = "MY_REALM_WINDOW_PARTITION_SHARE"
												}

												overlappingitembox = {
													name = "titles_box"
													datamodel = "[TitleSuccessionItem.GetPartitionTitles]"
													visible = "[DataModelHasItems(TitleSuccessionItem.GetPartitionTitles)]"
													minimumsize = { 350 50 }
													spacing = 10

													item = {
														container = {

															coa_title_tiny_crown = {
																datacontext = "[TitleItem.GetTitle]"
																using = tooltip_ne
															}

															icon = {
																name = "has_laws"
																visible = "[TitleItem.GetTitle.HasLaws]"
																parentanchor = bottom|right
																size = { 25 25 }
																position = { 5 0 }
																texture = "gfx/interface/icons/title_status/icon_title_law.dds"
															}
														}
													}
												}

												text_single = {
													name = "exception_label"
													visible = "[DataModelHasItems(TitleSuccessionItem.GetExceptionTitles)]"
													layoutpolicy_horizontal = expanding

													text = "MY_REALM_WINDOW_EXCEPTIONS"
												}

												overlappingitembox = {
													name = "exception_box"
													datamodel = "[TitleSuccessionItem.GetExceptionTitles]"
													visible = "[DataModelHasItems(TitleSuccessionItem.GetExceptionTitles)]"
													minimumsize = { 350 50 }
													spacing = 10

													item = {
														container = {

															coa_title_tiny_crown = {
																datacontext = "[TitleItem.GetTitle]"
																using = tooltip_ne

																icon = {
																	name = "has_laws"
																	visible = "[TitleItem.GetTitle.HasLaws]"
																	parentanchor = bottom|right
																	size = { 25 25 }
																	position = { 5 0 }
																	texture = "gfx/interface/icons/title_status/icon_title_law.dds"
																}
															}
														}
													}
												}
											}

											vbox = {
												portrait_head = {
													name = "primary_spouse_portrait"
													blockoverride "portrait_button" {
														using = tooltip_ws
													}
												}

												expand = {}
											}
										}
									}
								}
							}

							vbox = {
								name = "exceptions"
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = growing
								margin_left = 5

								visible = "[DataModelHasItems(MyRealmWindow.GetSuccessionExceptions)]"

								hbox = {
									layoutpolicy_horizontal = expanding

									text_label_left = {
										layoutpolicy_horizontal = expanding
										text = "MY_REALM_WINDOW_EXCEPTIONS"
									}

									expand = {}
								}

								overlappingitembox = {
									name = "exceptions_box"
									layoutpolicy_horizontal = expanding
									size = { 460 55 }
									spacing = 10

									datamodel = "[MyRealmWindow.GetSuccessionExceptions]"

									item = {
										container = {
											coa_title_tiny_crown = {
												datacontext = "[TitleItem.GetTitle]"
												using = tooltip_ne
											}
										}
									}
								}
							}

							vbox = {
								name = "line_of_succession"
								visible = "[MyRealmWindow.HasSingleHeir]"
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = growing
								spacing = 10

								hbox = {
									layoutpolicy_horizontal = expanding

									text_label_left = {
										name = "line_of_succession_label"
										layoutpolicy_horizontal = expanding
										text = "MY_REALM_WINDOW_LINE_OF_SUCCESSION"
									}

									expand = {}
								}

								flowcontainer = {
									name = "line_of_succession_box"
									layoutpolicy_horizontal = expanding
									spacing = 0
									margin_right = 10

									datamodel = "[MyRealmWindow.GetLineOfSuccession]"

									item = {
										portrait_head = {
											name = "heir_portrait"
										}
									}
								}
							}

							#### ELECTIONS ####
							vbox = {
								layoutpolicy_horizontal = expanding
								visible = "[MyRealmWindow.CanVote]"
								margin_left = 5

								hbox = {
									layoutpolicy_horizontal = expanding

									text_label_left = {
										layoutpolicy_horizontal = expanding
										text = "MY_REALM_WINDOW_ELECTIONS"
									}

									expand = {}
								}

								flowcontainer = {
									name = "elections"
									direction = vertical

									fixedgridbox = {
										name = "exceptions_box"
										addcolumn = 510
										addrow = 90
										datamodel = "[MyRealmWindow.GetTitlesCanVote]"

										item = {
											widget = {
												name = "election_title"
												size = { 510 90 }
												datacontext = "[TitleItem.GetTitle]"

												hbox = {
													spacing = 10

													coa_title_small_crown = {
														datacontext = "[Title]"
														using = tooltip_ne
													}

													vbox = {
														spacing = 7

														text_single = {
															layoutpolicy_horizontal = expanding
															text = "[Title.GetNameNoTooltip]"
														}

														hbox = {
															layoutpolicy_horizontal = expanding

															button_standard_select_arrow = {
																name = "go_to_vote"
																onclick = "[OpenSuccessionElectionWindowForTitle(Title.Self)]"

																blockoverride "button_text"{
																	text = "MY_REALM_WINDOW_VOTE"
																}

																tooltip = "MY_REALM_WINDOW_VOTE_TOOLTIP"
															}

															expand = {}
														}
													}

													expand = {}
												}
											}
										}
									}
								}
							}

							expand = {
								layoutpolicy_vertical = expanding
							}
						}
					}
				}

				vbox = {
					visible = "[Or( GetVariableSystem.Exists('showing_domain'), GetVariableSystem.Exists('showing_vassals'))]"		#"[Or( MyRealmWindow.IsShowingDomain, MyRealmWindow.IsShowingVassals)]"
					layoutpolicy_horizontal = expanding
					margin = { 15 5 }
					margin_bottom = 15
					spacing = 8

					hbox = {
						visible = "[GetVariableSystem.Exists('showing_domain')]"							#"[MyRealmWindow.IsShowingDomain]"
						tooltip = "[GetPlayer.GetDomainLimitTooltip]"
						spacing = 2

						text_single = {
							text = "[SelectLocalization(MyRealmWindow.IsOverDomainLimit, 'MY_REALM_WINDOW_DOMAIN_LIMIT_WARNING', 'MY_REALM_WINDOW_DOMAIN_LIMIT')]"
						}

						icon = {
							size = { 35 35 }
							texture = "gfx/interface/icons/icon_domain.dds"
						}

						text_single = {
							text = "[SelectLocalization(MyRealmWindow.IsOverDomainLimit, 'MY_REALM_WINDOW_DOMAIN_LIMIT_VALUE_WARNING', 'MY_REALM_WINDOW_DOMAIN_LIMIT_VALUE')]"
						}
					}

					vbox = {
						layoutpolicy_horizontal = expanding
						margin = { 80 0 }

						background = {
							using = Background_Area
							margin = { -65 0 }
							margin_bottom = 8
							margin_top = 3
						}

						hbox = {
							margin_bottom = 5
							layoutpolicy_horizontal = expanding

							expand = {
								minimumsize = { 150 0 }
							}

							text_single = {
								text = "MY_REALM_WINDOW_TAXES"
								min_width = 100
								max_width = 100
								align = right
							}

							text_single = {
								text = "MY_REALM_WINDOW_LEVIES"
								minimumsize = { 100 0 }
								maximumsize = { 100 40 }
								align = right
							}
						}

						divider_light = {
							layoutpolicy_horizontal = expanding
						}

						hbox = {
							name = "domain_income_row"
							layoutpolicy_horizontal = expanding

							background = {
								visible = "[GetVariableSystem.Exists('showing_domain')]"					#"[MyRealmWindow.IsShowingDomain]"
								using = Status_Highlight
							}

							flowcontainer = {
								spacing = 5

								text_single = {
									layoutpolicy_horizontal = expanding
									text = "MY_REALM_WINDOW_FROM_HOLDINGS"
									align = bottom
								}

								warning_icon = {
									visible = "[MyRealmWindow.IsOverDomainLimit]"
									size = { 25 25 }
									tooltip = "[Character.GetDomainLimitTooltip]"
								}
							}

							expand = {}

							text_single = {
								datacontext = "[MyRealmWindow.GetDomainIncome]"
								text = "[ValueBreakdown.GetValue]"
								min_width = 100
								max_width = 100
								align = right

								tooltipwidget = {
									widget_gold_breakdown_tooltip = {
										blockoverride "income"
										{
											visible = no
										}
									}
								}
							}

							text_single = {
								datacontext = "[MyRealmWindow.GetDomainLevy]"
								text = "[ValueBreakdown.GetValue]"
								minimumsize = { 100 0 }
								align = right
								tooltipwidget = {
									widget_gold_breakdown_tooltip = {
										blockoverride "income"
										{
											visible = no
										}
									}
								}
							}
						}

						hbox = {
							name = "vassals_income_row"
							layoutpolicy_horizontal = expanding

							background = {
								visible = "[GetVariableSystem.Exists('showing_vassals')]"					#"[MyRealmWindow.IsShowingVassals]"
								using = Status_Highlight
							}

							flowcontainer = {
								spacing = 5

								text_single = {
									layoutpolicy_horizontal = expanding
									text = "MY_REALM_WINDOW_FROM_VASSALS"
									align = bottom
								}

								warning_icon = {
									visible = "[GreaterThan_int32( Character.GetNumVassalsTowardsLimit, Character.GetVassalLimit )]"
									size = { 25 25 }
									tooltip = "[Character.GetVassalLimitTooltip]"
								}
							}

							expand = {}

							text_single = {
								datacontext = "[MyRealmWindow.GetVassalsIncome]"
								text = "[ValueBreakdown.GetValue]"
								min_width = 100
								max_width = 100
								align = right

								tooltipwidget = {
									widget_gold_breakdown_tooltip = {
										blockoverride "income"
										{
											visible = no
										}
									}
								}
							}

							text_single = {
								datacontext = "[MyRealmWindow.GetVassalsLevy]"
								text = "[ValueBreakdown.GetValue]"
								min_width = 100
								max_width = 100
								align = right

								tooltipwidget = {
									widget_gold_breakdown_tooltip = {
										blockoverride "income"
										{
											visible = no
										}
									}
								}
							}
						}

						hbox = {
							layoutpolicy_horizontal = expanding
							visible = "[GetPlayer.HasLiege]"

							text_single = {
								layoutpolicy_horizontal = expanding
								text = "MY_REALM_WINDOW_FROM_TO_LIEGE"
							}

							text_single = {
								datacontext = "[MyRealmWindow.GetIncomeTax]"
								text = "[ValueBreakdown.GetValue]"
								min_width = 100
								max_width = 100
								align = right

								tooltipwidget = {
									my_realm_window_contribution_tooltip = {
										datacontext = "[MyRealmWindow.GetCharacter]"
										blockoverride "contribution_tooltip_header"
										{
											text = "MRW_TT_TAXES_TO_MY_LIEGE"
										}
										blockoverride "contribution_tooltip_content_suffix" {}
									}
								}
							}

							text_single = {
								datacontext = "[MyRealmWindow.GetLevyTax]"
								text = "[ValueBreakdown.GetValue]"
								min_width = 100
								max_width = 100
								align = right

								tooltipwidget = {
									my_realm_window_contribution_tooltip = {
										datacontext = "[MyRealmWindow.GetCharacter]"
										blockoverride "contribution_tooltip_header"
										{
											text = "MRW_TT_LEVIES_TO_MY_LIEGE"
										}
										blockoverride "contribution_tooltip_content_suffix" {}
									}
								}
							}
						}

						hbox = {
							name = "vassal_contract"
							datacontext = "[MyRealmWindow.GetCharacter.GetLiege]"
							datacontext = "[MyRealmWindow.GetCharacter.GetVassalContract]"
							visible = "[Character.IsPlayerInteractionShown('vassal_modify_vassal_contract_interaction')]"
							margin_left = 3
							spacing = 10

							button_replace = {
								enabled = "[Character.IsPlayerInteractionValid('vassal_modify_vassal_contract_interaction')]"
								onclick = "[Character.OpenPlayerInteraction('vassal_modify_vassal_contract_interaction')]"
								tooltip = "[Character.GetPlayerInteractionTooltip('vassal_modify_vassal_contract_interaction')]"
							}

							text_single = {
								visible = "[VassalContract.UsesObligationLevels]"
								layoutpolicy_horizontal = expanding
								align = center
								text = "MY_REALM_WINDOW_MY_OBLIGATIONS"
							}

							vassal_contract_not_default_icon = {}
						}
					}
				}

				### REFORM TAB
				vbox = {
					name = "tab_reform"
					visible = "[GetVariableSystem.Exists('showing_reforms')]"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					state = {
						name = _show
						using = Animation_FadeIn_Quick
					}

					state = {
						name = _hide
						alpha = 0
					}

					scrollbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						blockoverride "scrollbox_content" {
							vbox = {
								margin = { 20 15 }
								spacing = 18
								layoutpolicy_horizontal = expanding

								text_label_center = {
									text = "MY_REALM_WINDOW_POLITICAL_REFORM"
								}

								hbox = {
									layoutpolicy_horizontal = growing
									spacing = 20
									vbox = {
										layoutpolicy_horizontal = growing
										text_single = {
											layoutpolicy_horizontal = growing
											max_width = 350
											text = "MY_REALM_WINDOW_ADMINISTRATIVE_REFORM"
										}
									}

									button_standard = {
										size = { 100 60 }
										tooltip = "[GetScriptedGui('can_pass_admin_feudal').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										enabled = "[GetScriptedGui('can_pass_admin_feudal').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										onclick = "[GetScriptedGui('can_pass_admin_feudal').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

										text_multi = {
											text = "administration_feudal"
											size = { 100% 100% }
											align = center
											margin = { 8 5 }
											default_format = "#high"
										}

										icon = {
											name = "victory_glow"
											visible = "[GetScriptedGui('has_admin_feudal').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
											size = { 100% 100% }
											texture = "gfx/interface/component_masks/mask_fade_circle.dds"
											using = Color_Orange
											alpha = 0.8
										}
									}
									button_standard = {
										size = { 100 60 }
										tooltip = "[GetScriptedGui('can_pass_admin_centralized').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										enabled = "[GetScriptedGui('can_pass_admin_centralized').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										onclick = "[GetScriptedGui('can_pass_admin_centralized').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

										text_multi = {
											text = "administration_centralized"
											size = { 100% 100% }
											align = center
											margin = { 8 5 }
											default_format = "#high"
										}

										icon = {
											name = "victory_glow"
											visible = "[GetScriptedGui('has_admin_centralized').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
											size = { 100% 100% }
											texture = "gfx/interface/component_masks/mask_fade_circle.dds"
											using = Color_Orange
											alpha = 0.8
										}
									}
								}

								hbox = {
									visible = "[GetScriptedGui('can_pass_sovereign_power_laws').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									layoutpolicy_horizontal = growing
									spacing = 20
									vbox = {
										layoutpolicy_horizontal = growing
										text_single = {
											layoutpolicy_horizontal = growing
											max_width = 350
											text = "MY_REALM_WINDOW_SOVEREIGN_POWER"
										}
									}

									button_standard = {
										size = { 100 60 }
										tooltip = "[GetScriptedGui('can_pass_sovereign_absolute').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										enabled = "[GetScriptedGui('can_pass_sovereign_absolute').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										onclick = "[GetScriptedGui('can_pass_sovereign_absolute').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

										text_multi = {
											text = "sovereign_absolute"
											size = { 100% 100% }
											align = center
											margin = { 8 5 }
											default_format = "#high"
										}

										icon = {
											name = "victory_glow"
											visible = "[GetScriptedGui('has_sovereign_absolute').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
											size = { 100% 100% }
											texture = "gfx/interface/component_masks/mask_fade_circle.dds"
											using = Color_Orange
											alpha = 0.8
										}
									}
									button_standard = {
										size = { 100 60 }
										tooltip = "[GetScriptedGui('can_pass_sovereign_semi_constitutional').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										enabled = "[GetScriptedGui('can_pass_sovereign_semi_constitutional').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										onclick = "[GetScriptedGui('can_pass_sovereign_semi_constitutional').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

										text_multi = {
											text = "sovereign_semi_constitutional"
											size = { 100% 100% }
											align = center
											margin = { 8 5 }
											default_format = "#high"
										}

										icon = {
											name = "victory_glow"
											visible = "[GetScriptedGui('has_sovereign_semi_constitutional').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
											size = { 100% 100% }
											texture = "gfx/interface/component_masks/mask_fade_circle.dds"
											using = Color_Orange
											alpha = 0.8
										}
									}
									button_standard = {
										size = { 100 60 }
										tooltip = "[GetScriptedGui('can_pass_sovereign_constitutional').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										enabled = "[GetScriptedGui('can_pass_sovereign_constitutional').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										onclick = "[GetScriptedGui('can_pass_sovereign_constitutional').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

										text_multi = {
											text = "sovereign_constitutional"
											fontsize = 13
											size = { 100% 100% }
											align = center
											margin = { 8 5 }
											default_format = "#high"
										}

										icon = {
											name = "victory_glow"
											visible = "[GetScriptedGui('has_sovereign_constitutional').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
											size = { 100% 100% }
											texture = "gfx/interface/component_masks/mask_fade_circle.dds"
											using = Color_Orange
											alpha = 0.8
										}
									}
								}

								hbox = {
									visible = "[Not(GetScriptedGui('can_pass_sovereign_power_laws').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End))]"
									layoutpolicy_horizontal = growing
									spacing = 20
									vbox = {
										layoutpolicy_horizontal = growing
										text_single = {
											layoutpolicy_horizontal = growing
											max_width = 350
											text = "MY_REALM_WINDOW_ELIGIBILITY"
										}
									}

									button_standard = {
										size = { 100 60 }
										tooltip = "[GetScriptedGui('can_pass_eligibility_default').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										enabled = "[GetScriptedGui('can_pass_eligibility_default').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										onclick = "[GetScriptedGui('can_pass_eligibility_default').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

										text_multi = {
											text = "eligibility_default"
											size = { 100% 100% }
											align = center
											margin = { 8 5 }
											default_format = "#high"
										}

										icon = {
											name = "victory_glow"
											visible = "[GetScriptedGui('has_eligibility_default').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
											size = { 100% 100% }
											texture = "gfx/interface/component_masks/mask_fade_circle.dds"
											using = Color_Orange
											alpha = 0.8
										}
									}
									button_standard = {
										size = { 100 60 }
										tooltip = "[GetScriptedGui('can_pass_eligibility_one_party').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										enabled = "[GetScriptedGui('can_pass_eligibility_one_party').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										onclick = "[GetScriptedGui('can_pass_eligibility_one_party').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

										text_multi = {
											text = "eligibility_one_party"
											size = { 100% 100% }
											align = center
											margin = { 8 5 }
											default_format = "#high"
										}

										icon = {
											name = "victory_glow"
											visible = "[GetScriptedGui('has_eligibility_one_party').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
											size = { 100% 100% }
											texture = "gfx/interface/component_masks/mask_fade_circle.dds"
											using = Color_Orange
											alpha = 0.8
										}
									}
								}

								hbox = {
									visible = "[GetScriptedGui('realm_uses_legislature_tab').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									layoutpolicy_horizontal = growing
									spacing = 20
									vbox = {
										layoutpolicy_horizontal = growing
										text_single = {
											layoutpolicy_horizontal = growing
											max_width = 350
											text = "MY_REALM_WINDOW_VELIGIBILITY"
										}
									}

									button_standard = {
										size = { 100 60 }
										tooltip = "[GetScriptedGui('can_pass_eligibility_state').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										enabled = "[GetScriptedGui('can_pass_eligibility_state').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										onclick = "[GetScriptedGui('can_pass_eligibility_state').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

										text_multi = {
											text = "eligibility_state"
											size = { 100% 100% }
											align = center
											margin = { 8 5 }
											default_format = "#high"
										}

										icon = {
											name = "victory_glow"
											visible = "[GetScriptedGui('has_eligibility_state').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
											size = { 100% 100% }
											texture = "gfx/interface/component_masks/mask_fade_circle.dds"
											using = Color_Orange
											alpha = 0.8
										}
									}
									button_standard = {
										size = { 100 60 }
										tooltip = "[GetScriptedGui('can_pass_eligibility_de_jure').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										enabled = "[GetScriptedGui('can_pass_eligibility_de_jure').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										onclick = "[GetScriptedGui('can_pass_eligibility_de_jure').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

										text_multi = {
											text = "eligibility_de_jure"
											size = { 100% 100% }
											align = center
											margin = { 8 5 }
											default_format = "#high"
										}

										icon = {
											name = "victory_glow"
											visible = "[GetScriptedGui('has_eligibility_de_jure').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
											size = { 100% 100% }
											texture = "gfx/interface/component_masks/mask_fade_circle.dds"
											using = Color_Orange
											alpha = 0.8
										}
									}
									button_standard = {
										size = { 100 60 }
										tooltip = "[GetScriptedGui('can_pass_eligibility_de_facto').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										enabled = "[GetScriptedGui('can_pass_eligibility_de_facto').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										onclick = "[GetScriptedGui('can_pass_eligibility_de_facto').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

										text_multi = {
											text = "eligibility_de_facto"
											size = { 100% 100% }
											align = center
											margin = { 8 5 }
											default_format = "#high"
										}

										icon = {
											name = "victory_glow"
											visible = "[GetScriptedGui('has_eligibility_de_facto').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
											size = { 100% 100% }
											texture = "gfx/interface/component_masks/mask_fade_circle.dds"
											using = Color_Orange
											alpha = 0.8
										}
									}
								}

								hbox = {
									visible = "[GetScriptedGui('realm_uses_legislature_tab').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									layoutpolicy_horizontal = growing
									spacing = 10
									vbox = {
										layoutpolicy_horizontal = growing
										text_single = {
											layoutpolicy_horizontal = growing
											max_width = 350
											text = "MY_REALM_WINDOW_APPORTIONMENT"
										}
									}

									button_standard = {
										visible = "[GetScriptedGui('can_pass_sovereign_power_laws').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										size = { 100 60 }
										tooltip = "[GetScriptedGui('can_pass_apportionment_landed').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										enabled = "[GetScriptedGui('can_pass_apportionment_landed').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										onclick = "[GetScriptedGui('can_pass_apportionment_landed').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

										text_multi = {
											text = "apportionment_landed"
											size = { 100% 100% }
											align = center
											margin = { 8 5 }
											default_format = "#high"
										}

										icon = {
											name = "victory_glow"
											visible = "[GetScriptedGui('has_apportionment_landed').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
											size = { 100% 100% }
											texture = "gfx/interface/component_masks/mask_fade_circle.dds"
											using = Color_Orange
											alpha = 0.8
										}
									}
									button_standard = {
										visible = "[Not(GetScriptedGui('can_pass_sovereign_power_laws').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End))]"
										size = { 90 60 }
										tooltip = "[GetScriptedGui('can_pass_apportionment_equal').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										enabled = "[GetScriptedGui('can_pass_apportionment_equal').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										onclick = "[GetScriptedGui('can_pass_apportionment_equal').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

										text_multi = {
											text = "apportionment_equal"
											size = { 100% 100% }
											align = center
											margin = { 8 5 }
											default_format = "#high"
										}

										icon = {
											name = "victory_glow"
											visible = "[GetScriptedGui('has_apportionment_equal').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
											size = { 100% 100% }
											texture = "gfx/interface/component_masks/mask_fade_circle.dds"
											using = Color_Orange
											alpha = 0.8
										}
									}
									button_standard = {
										size = { 90 60 }
										tooltip = "[GetScriptedGui('can_pass_apportionment_mixed').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										enabled = "[GetScriptedGui('can_pass_apportionment_mixed').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										onclick = "[GetScriptedGui('can_pass_apportionment_mixed').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

										text_multi = {
											text = "apportionment_mixed"
											size = { 100% 100% }
											align = center
											margin = { 8 5 }
											default_format = "#high"
										}

										icon = {
											name = "victory_glow"
											visible = "[GetScriptedGui('has_apportionment_mixed').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
											size = { 100% 100% }
											texture = "gfx/interface/component_masks/mask_fade_circle.dds"
											using = Color_Orange
											alpha = 0.8
										}
									}
									button_standard = {
										size = { 90 60 }
										tooltip = "[GetScriptedGui('can_pass_apportionment_population').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										enabled = "[GetScriptedGui('can_pass_apportionment_population').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										onclick = "[GetScriptedGui('can_pass_apportionment_population').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

										text_multi = {
											text = "apportionment_population"
											size = { 100% 100% }
											align = center
											margin = { 8 5 }
											default_format = "#high"
										}

										icon = {
											name = "victory_glow"
											visible = "[GetScriptedGui('has_apportionment_population').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
											size = { 100% 100% }
											texture = "gfx/interface/component_masks/mask_fade_circle.dds"
											using = Color_Orange
											alpha = 0.8
										}
									}
								}

								hbox = {
									visible = "[GetScriptedGui('realm_uses_legislature_tab').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									layoutpolicy_horizontal = growing
									spacing = 10
									vbox = {
										layoutpolicy_horizontal = growing
										text_single = {
											layoutpolicy_horizontal = growing
											max_width = 350
											text = "MY_REALM_WINDOW_VOTING_FRANCHISE"
										}
									}

									button_standard = {
										size = { 70 60 }
										tooltip = "[GetScriptedGui('can_pass_vote_franchise_landed').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										enabled = "[GetScriptedGui('can_pass_vote_franchise_landed').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										onclick = "[GetScriptedGui('can_pass_vote_franchise_landed').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

										text_multi = {
											text = "vote_franchise_landed"
											size = { 100% 100% }
											align = center
											margin = { 8 5 }
											default_format = "#high"
										}

										icon = {
											name = "victory_glow"
											visible = "[GetScriptedGui('has_vote_franchise_landed').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
											size = { 100% 100% }
											texture = "gfx/interface/component_masks/mask_fade_circle.dds"
											using = Color_Orange
											alpha = 0.8
										}
									}
									button_standard = {
										size = { 70 60 }
										tooltip = "[GetScriptedGui('can_pass_vote_franchise_wealth').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										enabled = "[GetScriptedGui('can_pass_vote_franchise_wealth').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										onclick = "[GetScriptedGui('can_pass_vote_franchise_wealth').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

										text_multi = {
											text = "vote_franchise_wealth"
											size = { 100% 100% }
											align = center
											margin = { 8 5 }
											default_format = "#high"
										}

										icon = {
											name = "victory_glow"
											visible = "[GetScriptedGui('has_vote_franchise_wealth').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
											size = { 100% 100% }
											texture = "gfx/interface/component_masks/mask_fade_circle.dds"
											using = Color_Orange
											alpha = 0.8
										}
									}
									button_standard = {
										size = { 80 60 }
										tooltip = "[GetScriptedGui('can_pass_vote_franchise_universal_manhood').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										enabled = "[GetScriptedGui('can_pass_vote_franchise_universal_manhood').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										onclick = "[GetScriptedGui('can_pass_vote_franchise_universal_manhood').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

										text_multi = {
											text = "vote_franchise_universal_manhood"
											size = { 100% 100% }
											align = center
											margin = { 8 5 }
											default_format = "#high"
										}

										icon = {
											name = "victory_glow"
											visible = "[GetScriptedGui('has_vote_franchise_universal_manhood').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
											size = { 100% 100% }
											texture = "gfx/interface/component_masks/mask_fade_circle.dds"
											using = Color_Orange
											alpha = 0.8
										}
									}
									button_standard = {
										size = { 80 60 }
										tooltip = "[GetScriptedGui('can_pass_vote_franchise_universal').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										enabled = "[GetScriptedGui('can_pass_vote_franchise_universal').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										onclick = "[GetScriptedGui('can_pass_vote_franchise_universal').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

										text_multi = {
											text = "vote_franchise_universal"
											size = { 100% 100% }
											align = center
											margin = { 8 5 }
											default_format = "#high"
										}

										icon = {
											name = "victory_glow"
											visible = "[GetScriptedGui('has_vote_franchise_universal').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
											size = { 100% 100% }
											texture = "gfx/interface/component_masks/mask_fade_circle.dds"
											using = Color_Orange
											alpha = 0.8
										}
									}
								}

								hbox = {
									visible = "[GetScriptedGui('realm_uses_legislature_tab').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									layoutpolicy_horizontal = growing
									spacing = 20
									vbox = {
										layoutpolicy_horizontal = growing
										text_single = {
											layoutpolicy_horizontal = growing
											max_width = 350
											text = "MY_REALM_WINDOW_VOTING_SYSTEM"
										}
									}

									button_standard = {
										size = { 100 60 }
										tooltip = "[GetScriptedGui('can_pass_vote_system_two_party').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										enabled = "[GetScriptedGui('can_pass_vote_system_two_party').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										onclick = "[GetScriptedGui('can_pass_vote_system_two_party').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

										text_multi = {
											text = "vote_system_two_party"
											size = { 100% 100% }
											align = center
											margin = { 8 5 }
											default_format = "#high"
										}

										icon = {
											name = "victory_glow"
											visible = "[GetScriptedGui('has_vote_system_two_party').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
											size = { 100% 100% }
											texture = "gfx/interface/component_masks/mask_fade_circle.dds"
											using = Color_Orange
											alpha = 0.8
										}
									}
									button_standard = {
										size = { 100 60 }
										tooltip = "[GetScriptedGui('can_pass_vote_system_jefferson').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										enabled = "[GetScriptedGui('can_pass_vote_system_jefferson').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										onclick = "[GetScriptedGui('can_pass_vote_system_jefferson').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

										text_multi = {
											text = "vote_system_jefferson"
											size = { 100% 100% }
											align = center
											margin = { 8 5 }
											default_format = "#high"
										}

										icon = {
											name = "victory_glow"
											visible = "[GetScriptedGui('has_vote_system_jefferson').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
											size = { 100% 100% }
											texture = "gfx/interface/component_masks/mask_fade_circle.dds"
											using = Color_Orange
											alpha = 0.8
										}
									}
									button_standard = {
										size = { 100 60 }
										tooltip = "[GetScriptedGui('can_pass_vote_system_proportional').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										enabled = "[GetScriptedGui('can_pass_vote_system_proportional').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										onclick = "[GetScriptedGui('can_pass_vote_system_proportional').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

										text_multi = {
											text = "vote_system_proportional"
											size = { 100% 100% }
											align = center
											margin = { 8 5 }
											default_format = "#high"
										}

										icon = {
											name = "victory_glow"
											visible = "[GetScriptedGui('has_vote_system_proportional').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
											size = { 100% 100% }
											texture = "gfx/interface/component_masks/mask_fade_circle.dds"
											using = Color_Orange
											alpha = 0.8
										}
									}
								}
							}

							vbox = {
								margin = { 30 15 }
								spacing = 18
								layoutpolicy_horizontal = expanding

								text_label_center = {
									text = "MY_REALM_WINDOW_SOCIAL_REFORM"
								}

								hbox = {
									tooltip = "your_ideology_tooltip"
									visible = "[GetScriptedGui('root_is_liberal').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									spacing = 5

									icon = {
										name = "party_icon"
										size = { 90 90 }
										texture = "gfx/interface/victorian/liberal.dds"
									}

									text_single = {
										name = "political_party"
										text = "ideology.1.a"
										default_format = "#high"
									}
								}
								hbox = {
									tooltip = "your_ideology_tooltip"
									visible = "[GetScriptedGui('root_is_socialist').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									spacing = 5

									icon = {
										name = "party_icon"
										size = { 90 90 }
										texture = "gfx/interface/victorian/socialist.dds"
									}

									text_single = {
										name = "political_party"
										text = "ideology.1.b"
										default_format = "#high"
									}
								}
								hbox = {
									tooltip = "your_ideology_tooltip"
									visible = "[GetScriptedGui('root_is_reactionary').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									spacing = 5

									icon = {
										name = "party_icon"
										size = { 90 90 }
										texture = "gfx/interface/victorian/reactionary.dds"
									}

									text_single = {
										name = "political_party"
										text = "ideology.1.c"
										default_format = "#high"
									}
								}
								hbox = {
									tooltip = "your_ideology_tooltip"
									visible = "[GetScriptedGui('root_is_fascist').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									spacing = 5

									icon = {
										name = "party_icon"
										size = { 90 90 }
										texture = "gfx/interface/victorian/fascist.dds"
									}

									text_single = {
										name = "political_party"
										text = "ideology.1.d"
										default_format = "#high"
									}
								}
								hbox = {
									tooltip = "your_ideology_tooltip"
									visible = "[GetScriptedGui('root_is_conservative').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									spacing = 5

									icon = {
										name = "party_icon"
										size = { 90 90 }
										texture = "gfx/interface/victorian/conservatism.dds"
									}

									text_single = {
										name = "political_party"
										text = "ideology.1.e"
										default_format = "#high"
									}
								}
								hbox = {
									tooltip = "your_ideology_tooltip"
									visible = "[GetScriptedGui('root_is_communist').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									spacing = 5

									icon = {
										name = "party_icon"
										size = { 90 90 }
										texture = "gfx/interface/victorian/communist.dds"
									}

									text_single = {
										name = "political_party"
										text = "ideology.1.f"
										default_format = "#high"
									}
								}
								hbox = {
									tooltip = "your_ideology_tooltip"
									visible = "[GetScriptedGui('root_is_anarchist').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									spacing = 5

									icon = {
										name = "party_icon"
										size = { 90 90 }
										texture = "gfx/interface/victorian/anarcho_liberal.dds"
									}

									text_single = {
										name = "political_party"
										text = "ideology.1.g"
										default_format = "#high"
									}
								}
								hbox = {
									tooltip = "your_ideology_none_tooltip"
									visible = "[GetScriptedGui('root_no_political_party').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									spacing = 5

									icon = {
										name = "party_icon"
										size = { 90 90 }
										texture = "gfx/interface/victorian/_none.dds"
									}

									text_single = {
										name = "political_party"
										text = "term_limit_off"
										default_format = "#high"
									}
								}
							}
						}
					}
				}

				### LEGISLATURE TAB
				vbox = {
					name = "tab_legislature"
					visible = "[GetVariableSystem.Exists('showing_legislature')]"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					state = {
						name = _show
						using = Animation_FadeIn_Quick
					}

					state = {
						name = _hide
						alpha = 0
					}
					vbox = {
						margin = { 30 15 }
						spacing = 18
						layoutpolicy_horizontal = expanding

						text_label_center = {
							text = "MY_REALM_WINDOW_TOP_LEGISLATURE"

							using = Font_Type_Flavor
							using = Font_Size_Big
						}
					}

					scrollbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						blockoverride "scrollbox_content" {
							vbox = {
								visible = "[Or(GetScriptedGui('leg_currently_debating_domestic').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End), GetScriptedGui('leg_currently_debating_foreign').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End))]"
								spacing = 5
								layoutpolicy_horizontal = expanding
								margin_bottom = 20

								text_single = {
									text = "MY_REALM_WINDOW_CURRENTLY_DEBATING"
									fontsize = 20
								}

								vbox = {
									visible = "[GetScriptedGui('leg_currently_debating_domestic').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									layoutpolicy_horizontal = growing
									spacing = 5
									text_single = {
										text = "MY_REALM_WINDOW_DOMESTIC_DEBATE"
										fontsize = 15
									}

									hbox = {
										layoutpolicy_horizontal = fixed
										spacing = 20
										margin_left = 275
										text_single = {
											text = "debate_favor"
											fontsize = 13
										}
										text_single = {
											text = "debate_opposed"
											fontsize = 13
										}
									}

									hbox = {
										visible = "[GetScriptedGui('leg_has_liberal').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										layoutpolicy_horizontal = fixed
										spacing = 235

										text_single = {
											name = "political_party"
											text = "ideology.1.a"
											fontsize = 13
											margin_bottom = 2
										}

										hbox = {
											layoutpolicy_horizontal = fixed
											spacing = 50
											text_single = {
												text = "ly_perc"
												fontsize = 13
											}
											text_single = {
												text = "ln_perc"
												fontsize = 13
											}
										}
									}
									hbox = {
										visible = "[GetScriptedGui('leg_has_socialist').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										layoutpolicy_horizontal = fixed
										spacing = 227

										text_single = {
											name = "political_party"
											text = "ideology.1.b"
											fontsize = 13
											margin_bottom = 2
										}

										hbox = {
											layoutpolicy_horizontal = fixed
											spacing = 50
											text_single = {
												text = "sy_perc"
												fontsize = 13
											}
											text_single = {
												text = "sn_perc"
												fontsize = 13
											}
										}
									}
									hbox = {
										visible = "[GetScriptedGui('leg_has_communist').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										layoutpolicy_horizontal = fixed
										spacing = 208

										text_single = {
											name = "political_party"
											text = "ideology.1.f"
											fontsize = 13
											margin_bottom = 2
										}

										hbox = {
											layoutpolicy_horizontal = fixed
											spacing = 50
											text_single = {
												text = "cy_perc"
												fontsize = 13
											}
											text_single = {
												text = "cn_perc"
												fontsize = 13
											}
										}
									}
									hbox = {
										visible = "[GetScriptedGui('leg_has_anarchist').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										layoutpolicy_horizontal = fixed
										spacing = 218

										text_single = {
											name = "political_party"
											text = "ideology.1.g"
											fontsize = 13
											margin_bottom = 2
										}

										hbox = {
											layoutpolicy_horizontal = fixed
											spacing = 50
											text_single = {
												text = "ay_perc"
												fontsize = 13
											}
											text_single = {
												text = "an_perc"
												fontsize = 13
											}
										}
									}
									hbox = {
										visible = "[GetScriptedGui('leg_has_conservative').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										layoutpolicy_horizontal = fixed
										spacing = 200

										text_single = {
											name = "political_party"
											text = "ideology.1.e"
											fontsize = 13
											margin_bottom = 2
										}

										hbox = {
											layoutpolicy_horizontal = fixed
											spacing = 50
											text_single = {
												text = "cny_perc"
												fontsize = 13
											}
											text_single = {
												text = "cnn_perc"
												fontsize = 13
											}
										}
									}
									hbox = {
										visible = "[GetScriptedGui('leg_has_reactionary').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										layoutpolicy_horizontal = fixed
										spacing = 206

										text_single = {
											name = "political_party"
											text = "ideology.1.c"
											fontsize = 13
											margin_bottom = 2
										}

										hbox = {
											layoutpolicy_horizontal = fixed
											spacing = 50
											text_single = {
												text = "ry_perc"
												fontsize = 13
											}
											text_single = {
												text = "rn_perc"
												fontsize = 13
											}
										}
									}
									hbox = {
										visible = "[GetScriptedGui('leg_has_fascist').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										layoutpolicy_horizontal = fixed
										spacing = 235

										text_single = {
											name = "political_party"
											text = "ideology.1.d"
											fontsize = 13
											margin_bottom = 2
										}

										hbox = {
											layoutpolicy_horizontal = fixed
											spacing = 50
											text_single = {
												text = "fy_perc"
												fontsize = 13
											}
											text_single = {
												text = "fn_perc"
												fontsize = 13
											}
										}
									}
									hbox = {
										visible = "[GetScriptedGui('leg_has_independent').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										layoutpolicy_horizontal = fixed
										spacing = 202

										text_single = {
											name = "political_party"
											text = "ideology.INDEPENDENT"
											fontsize = 13
											margin_bottom = 2
										}

										hbox = {
											layoutpolicy_horizontal = fixed
											spacing = 50
											text_single = {
												text = "iy_perc"
												fontsize = 13
											}
											text_single = {
												text = "in_perc"
												fontsize = 13
											}
										}
									}
								}

								vbox = {
									visible = "[GetScriptedGui('leg_currently_debating_foreign').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									layoutpolicy_horizontal = growing
									spacing = 5
									text_single = {
										text = "MY_REALM_WINDOW_FOREIGN_DEBATE"
										fontsize = 15
									}

									hbox = {
										layoutpolicy_horizontal = fixed
										spacing = 20
										margin_left = 275
										text_single = {
											text = "debate_favor"
											fontsize = 13
										}
										text_single = {
											text = "debate_opposed"
											fontsize = 13
										}
									}

									hbox = {
										visible = "[GetScriptedGui('leg_has_liberal').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										layoutpolicy_horizontal = fixed
										spacing = 235

										text_single = {
											name = "political_party"
											text = "ideology.1.a"
											fontsize = 13
											margin_bottom = 2
										}

										hbox = {
											layoutpolicy_horizontal = fixed
											spacing = 50
											text_single = {
												text = "ly_cap_perc"
												fontsize = 13
											}
											text_single = {
												text = "ln_cap_perc"
												fontsize = 13
											}
										}
									}
									hbox = {
										visible = "[GetScriptedGui('leg_has_socialist').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										layoutpolicy_horizontal = fixed
										spacing = 227

										text_single = {
											name = "political_party"
											text = "ideology.1.b"
											fontsize = 13
											margin_bottom = 2
										}

										hbox = {
											layoutpolicy_horizontal = fixed
											spacing = 50
											text_single = {
												text = "sy_cap_perc"
												fontsize = 13
											}
											text_single = {
												text = "sn_cap_perc"
												fontsize = 13
											}
										}
									}
									hbox = {
										visible = "[GetScriptedGui('leg_has_communist').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										layoutpolicy_horizontal = fixed
										spacing = 208

										text_single = {
											name = "political_party"
											text = "ideology.1.f"
											fontsize = 13
											margin_bottom = 2
										}

										hbox = {
											layoutpolicy_horizontal = fixed
											spacing = 50
											text_single = {
												text = "cy_cap_perc"
												fontsize = 13
											}
											text_single = {
												text = "cn_cap_perc"
												fontsize = 13
											}
										}
									}
									hbox = {
										visible = "[GetScriptedGui('leg_has_anarchist').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										layoutpolicy_horizontal = fixed
										spacing = 218

										text_single = {
											name = "political_party"
											text = "ideology.1.g"
											fontsize = 13
											margin_bottom = 2
										}

										hbox = {
											layoutpolicy_horizontal = fixed
											spacing = 50
											text_single = {
												text = "ay_cap_perc"
												fontsize = 13
											}
											text_single = {
												text = "an_cap_perc"
												fontsize = 13
											}
										}
									}
									hbox = {
										visible = "[GetScriptedGui('leg_has_conservative').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										layoutpolicy_horizontal = fixed
										spacing = 200

										text_single = {
											name = "political_party"
											text = "ideology.1.e"
											fontsize = 13
											margin_bottom = 2
										}

										hbox = {
											layoutpolicy_horizontal = fixed
											spacing = 50
											text_single = {
												text = "cny_cap_perc"
												fontsize = 13
											}
											text_single = {
												text = "cnn_cap_perc"
												fontsize = 13
											}
										}
									}
									hbox = {
										visible = "[GetScriptedGui('leg_has_reactionary').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										layoutpolicy_horizontal = fixed
										spacing = 206

										text_single = {
											name = "political_party"
											text = "ideology.1.c"
											fontsize = 13
											margin_bottom = 2
										}

										hbox = {
											layoutpolicy_horizontal = fixed
											spacing = 50
											text_single = {
												text = "ry_cap_perc"
												fontsize = 13
											}
											text_single = {
												text = "rn_cap_perc"
												fontsize = 13
											}
										}
									}
									hbox = {
										visible = "[GetScriptedGui('leg_has_fascist').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										layoutpolicy_horizontal = fixed
										spacing = 235

										text_single = {
											name = "political_party"
											text = "ideology.1.d"
											fontsize = 13
											margin_bottom = 2
										}

										hbox = {
											layoutpolicy_horizontal = fixed
											spacing = 50
											text_single = {
												text = "fy_cap_perc"
												fontsize = 13
											}
											text_single = {
												text = "fn_cap_perc"
												fontsize = 13
											}
										}
									}
									hbox = {
										visible = "[GetScriptedGui('leg_has_independent').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										layoutpolicy_horizontal = fixed
										spacing = 202

										text_single = {
											name = "political_party"
											text = "ideology.INDEPENDENT"
											fontsize = 13
											margin_bottom = 2
										}

										hbox = {
											layoutpolicy_horizontal = fixed
											spacing = 50
											text_single = {
												text = "iy_cap_perc"
												fontsize = 13
											}
											text_single = {
												text = "in_cap_perc"
												fontsize = 13
											}
										}
									}
								}
							}

							vbox = {
								spacing = 18
								layoutpolicy_horizontal = expanding
								margin_bottom = 10

								text_label_center = {
									text = "MY_REALM_WINDOW_LEGISLATURE_COMPOSITION"
								}

								widget = {
									name = "legislature_piechart"
									tooltip = "[GetScriptedGui('evaluate_legislature_percentages').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									size = { 300 300 }

									progresspie = {
										name = "slice_8"
										size = { 300 300 }
										texture = "gfx/interface/progressbars/progresspie_7.dds"
										framesize = { 124 124 }
										frame = 2
										value = "[Subtract_float( '(float)100', CurrentAndMaxToProgressbarValueInt32( FixedPointToInt( GetPlayer.GetTopLiege.GetPrimaryTitle.MakeScope.Var('independent_pievalue').GetValue ), FixedPointToInt( GetPlayer.GetTopLiege.GetPrimaryTitle.MakeScope.Var('independent_pievalue').GetValue ) ) )]"
									}

									progresspie = {
										name = "slice_7"
										size = { 300 300 }
										texture = "gfx/interface/progressbars/progresspie_3.dds"
										framesize = { 124 124 }
										frame = 2
										value = "[Subtract_float( '(float)100', CurrentAndMaxToProgressbarValueInt32( FixedPointToInt( GetPlayer.GetTopLiege.GetPrimaryTitle.MakeScope.Var('anarchist_pievalue').GetValue ), FixedPointToInt( GetPlayer.GetTopLiege.GetPrimaryTitle.MakeScope.Var('independent_pievalue').GetValue ) ) )]"
									}

									progresspie = {
										name = "slice_6"
										size = { 300 300 }
										texture = "gfx/interface/progressbars/progresspie_1.dds"
										framesize = { 124 124 }
										frame = 2
										value = "[Subtract_float( '(float)100', CurrentAndMaxToProgressbarValueInt32( FixedPointToInt( GetPlayer.GetTopLiege.GetPrimaryTitle.MakeScope.Var('communist_pievalue').GetValue ), FixedPointToInt( GetPlayer.GetTopLiege.GetPrimaryTitle.MakeScope.Var('independent_pievalue').GetValue ) ) )]"
									}

									progresspie = {
										name = "slice_5"
										size = { 300 300 }
										texture = "gfx/interface/progressbars/progresspie_8.dds"
										framesize = { 124 124 }
										frame = 2
										value = "[Subtract_float( '(float)100', CurrentAndMaxToProgressbarValueInt32( FixedPointToInt( GetPlayer.GetTopLiege.GetPrimaryTitle.MakeScope.Var('conservative_pievalue').GetValue ), FixedPointToInt( GetPlayer.GetTopLiege.GetPrimaryTitle.MakeScope.Var('independent_pievalue').GetValue ) ) )]"
									}

									progresspie = {
										name = "slice_4"
										size = { 300 300 }
										texture = "gfx/interface/progressbars/progresspie_2.dds"
										framesize = { 124 124 }
										frame = 2
										value = "[Subtract_float( '(float)100', CurrentAndMaxToProgressbarValueInt32( FixedPointToInt( GetPlayer.GetTopLiege.GetPrimaryTitle.MakeScope.Var('fascist_pievalue').GetValue ), FixedPointToInt( GetPlayer.GetTopLiege.GetPrimaryTitle.MakeScope.Var('independent_pievalue').GetValue ) ) )]"
									}

									progresspie = {
										name = "slice_3"
										size = { 300 300 }
										texture = "gfx/interface/progressbars/progresspie_10.dds"
										framesize = { 124 124 }
										frame = 2
										value = "[Subtract_float( '(float)100', CurrentAndMaxToProgressbarValueInt32( FixedPointToInt( GetPlayer.GetTopLiege.GetPrimaryTitle.MakeScope.Var('reactionary_pievalue').GetValue ), FixedPointToInt( GetPlayer.GetTopLiege.GetPrimaryTitle.MakeScope.Var('independent_pievalue').GetValue ) ) )]"
									}

									progresspie = {
										name = "slice_2"
										size = { 300 300 }
										texture = "gfx/interface/progressbars/progresspie_12.dds"
										framesize = { 124 124 }
										frame = 2
										value = "[Subtract_float( '(float)100', CurrentAndMaxToProgressbarValueInt32( FixedPointToInt( GetPlayer.GetTopLiege.GetPrimaryTitle.MakeScope.Var('socialist_pievalue').GetValue ), FixedPointToInt( GetPlayer.GetTopLiege.GetPrimaryTitle.MakeScope.Var('independent_pievalue').GetValue ) ) )]"
									}

									progresspie = {
										name = "slice_1"
										size = { 300 300 }
										texture = "gfx/interface/progressbars/progresspie_4.dds"
										framesize = { 124 124 }
										frame = 2
										value = "[Subtract_float( '(float)100', CurrentAndMaxToProgressbarValueInt32( FixedPointToInt( GetPlayer.GetTopLiege.GetPrimaryTitle.MakeScope.Var('liberal_pievalue').GetValue ), FixedPointToInt( GetPlayer.GetTopLiege.GetPrimaryTitle.MakeScope.Var('independent_pievalue').GetValue ) ) )]"
									}
								}

								vbox = {
									layoutpolicy_horizontal = fixed
									spacing = 5
									hbox = {
										layoutpolicy_horizontal = growing
										spacing = 10
										hbox = {
											visible = "[GetScriptedGui('leg_has_liberal').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
											layoutpolicy_horizontal = fixed
											spacing = 5
											icon = {
												name = "party_icon"
												size = { 10 10 }
												texture = "gfx/interface/progressbars/progresspie_4.dds"
											}

											text_single = {
												name = "political_party"
												text = "ideology.1.a"
												default_format = "#high"
												fontsize = 13
												margin_bottom = 2
											}
										}
										hbox = {
											visible = "[GetScriptedGui('leg_has_socialist').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
											layoutpolicy_horizontal = fixed
											spacing = 5
											icon = {
												name = "party_icon"
												size = { 10 10 }
												texture = "gfx/interface/progressbars/progresspie_12.dds"
											}

											text_single = {
												name = "political_party"
												text = "ideology.1.b"
												default_format = "#high"
												fontsize = 13
												margin_bottom = 2
											}
										}
										hbox = {
											visible = "[GetScriptedGui('leg_has_communist').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
											layoutpolicy_horizontal = fixed
											spacing = 5
											icon = {
												name = "party_icon"
												size = { 10 10 }
												texture = "gfx/interface/progressbars/progresspie_1.dds"
											}

											text_single = {
												name = "political_party"
												text = "ideology.1.f"
												default_format = "#high"
												fontsize = 13
												margin_bottom = 2
											}
										}
										hbox = {
											visible = "[GetScriptedGui('leg_has_anarchist').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
											layoutpolicy_horizontal = fixed
											spacing = 5
											icon = {
												name = "party_icon"
												size = { 10 10 }
												texture = "gfx/interface/progressbars/progresspie_3.dds"
											}

											text_single = {
												name = "political_party"
												text = "ideology.1.g"
												default_format = "#high"
												fontsize = 13
												margin_bottom = 2
											}
										}
									}
									hbox = {
										layoutpolicy_horizontal = growing
										spacing = 10
										hbox = {
											visible = "[GetScriptedGui('leg_has_conservative').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
											layoutpolicy_horizontal = fixed
											spacing = 5
											icon = {
												name = "party_icon"
												size = { 10 10 }
												texture = "gfx/interface/progressbars/progresspie_8.dds"
											}

											text_single = {
												name = "political_party"
												text = "ideology.1.e"
												default_format = "#high"
												fontsize = 13
												margin_bottom = 2
											}
										}
										hbox = {
											visible = "[GetScriptedGui('leg_has_reactionary').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
											layoutpolicy_horizontal = fixed
											spacing = 5
											icon = {
												name = "party_icon"
												size = { 10 10 }
												texture = "gfx/interface/progressbars/progresspie_10.dds"
											}

											text_single = {
												name = "political_party"
												text = "ideology.1.c"
												default_format = "#high"
												fontsize = 13
												margin_bottom = 2
											}
										}
										hbox = {
											visible = "[GetScriptedGui('leg_has_fascist').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
											layoutpolicy_horizontal = fixed
											spacing = 5
											icon = {
												name = "party_icon"
												size = { 10 10 }
												texture = "gfx/interface/progressbars/progresspie_2.dds"
											}

											text_single = {
												name = "political_party"
												text = "ideology.1.d"
												default_format = "#high"
												fontsize = 13
												margin_bottom = 2
											}
										}
										hbox = {
											visible = "[GetScriptedGui('leg_has_independent').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
											layoutpolicy_horizontal = fixed
											spacing = 5
											icon = {
												name = "party_icon"
												size = { 10 10 }
												texture = "gfx/interface/progressbars/progresspie_7.dds"
											}

											text_single = {
												name = "political_party"
												text = "ideology.INDEPENDENT"
												default_format = "#high"
												fontsize = 13
												margin_bottom = 2
											}
										}
									}
								}
							}

							vbox = {
								margin = { 30 15 }
								spacing = 18
								layoutpolicy_horizontal = expanding
								margin_bottom = 50
								hbox = {
									layoutpolicy_horizontal = growing
									spacing = 20
									vbox = {
										layoutpolicy_horizontal = growing
										text_single = {
											#layoutpolicy_horizontal = growing
											max_width = 350
											text = "REPUBLIC_TERM_LIMITS"
										}
									}

									vbox = {
										layoutpolicy_horizontal = growing
										spacing = 10
										hbox = {
											layoutpolicy_horizontal = growing
											button_standard = {
												size = { 80 50 }
												tooltip = "[GetScriptedGui('can_pass_leg_two_year_term').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
												enabled = "[GetScriptedGui('can_pass_leg_two_year_term').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
												onclick = "[GetScriptedGui('can_pass_leg_two_year_term').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

												text_multi = {
													text = "term_limit_2"
													size = { 100% 100% }
													align = center
													margin = { 8 5 }
													default_format = "#high"
												}

												icon = {
													name = "victory_glow"
													visible = "[GetScriptedGui('has_leg_two_year_term').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
													size = { 100% 100% }
													texture = "gfx/interface/component_masks/mask_fade_circle.dds"
													using = Color_Orange
													alpha = 0.8
												}
											}
											button_standard = {
												size = { 80 50 }
												tooltip = "[GetScriptedGui('can_pass_leg_three_year_term').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
												enabled = "[GetScriptedGui('can_pass_leg_three_year_term').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
												onclick = "[GetScriptedGui('can_pass_leg_three_year_term').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

												text_multi = {
													text = "term_limit_3"
													size = { 100% 100% }
													align = center
													margin = { 8 5 }
													default_format = "#high"
												}

												icon = {
													name = "victory_glow"
													visible = "[GetScriptedGui('has_leg_three_year_term').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
													size = { 100% 100% }
													texture = "gfx/interface/component_masks/mask_fade_circle.dds"
													using = Color_Orange
													alpha = 0.8
												}
											}
											button_standard = {
												size = { 80 50 }
												tooltip = "[GetScriptedGui('can_pass_leg_four_year_term').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
												enabled = "[GetScriptedGui('can_pass_leg_four_year_term').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
												onclick = "[GetScriptedGui('can_pass_leg_four_year_term').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

												text_multi = {
													text = "term_limit_4"
													size = { 100% 100% }
													align = center
													margin = { 8 5 }
													default_format = "#high"
												}

												icon = {
													name = "victory_glow"
													visible = "[GetScriptedGui('has_leg_four_year_term').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
													size = { 100% 100% }
													texture = "gfx/interface/component_masks/mask_fade_circle.dds"
													using = Color_Orange
													alpha = 0.8
												}
											}
										}
										hbox = {
											layoutpolicy_horizontal = growing
											button_standard = {
												size = { 80 50 }
												tooltip = "[GetScriptedGui('can_pass_leg_five_year_term').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
												enabled = "[GetScriptedGui('can_pass_leg_five_year_term').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
												onclick = "[GetScriptedGui('can_pass_leg_five_year_term').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

												text_multi = {
													text = "term_limit_5"
													size = { 100% 100% }
													align = center
													margin = { 8 5 }
													default_format = "#high"
												}

												icon = {
													name = "victory_glow"
													visible = "[GetScriptedGui('has_leg_five_year_term').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
													size = { 100% 100% }
													texture = "gfx/interface/component_masks/mask_fade_circle.dds"
													using = Color_Orange
													alpha = 0.8
												}
											}
											button_standard = {
												size = { 80 50 }
												tooltip = "[GetScriptedGui('can_pass_leg_six_year_term').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
												enabled = "[GetScriptedGui('can_pass_leg_six_year_term').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
												onclick = "[GetScriptedGui('can_pass_leg_six_year_term').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

												text_multi = {
													text = "term_limit_6"
													size = { 100% 100% }
													align = center
													margin = { 8 5 }
													default_format = "#high"
												}

												icon = {
													name = "victory_glow"
													visible = "[GetScriptedGui('has_leg_six_year_term').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
													size = { 100% 100% }
													texture = "gfx/interface/component_masks/mask_fade_circle.dds"
													using = Color_Orange
													alpha = 0.8
												}
											}
											button_standard = {
												size = { 80 50 }
												tooltip = "[GetScriptedGui('can_pass_leg_limit_off').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
												enabled = "[GetScriptedGui('can_pass_leg_limit_off').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
												onclick = "[GetScriptedGui('can_pass_leg_limit_off').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

												text_multi = {
													text = "term_limit_off"
													size = { 100% 100% }
													align = center
													margin = { 8 5 }
													default_format = "#high"
												}

												icon = {
													name = "victory_glow"
													visible = "[GetScriptedGui('has_leg_limit_off').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
													size = { 100% 100% }
													texture = "gfx/interface/component_masks/mask_fade_circle.dds"
													using = Color_Orange
													alpha = 0.8
												}
											}
										}
									}
								}
							}

							vbox = {
								spacing = 10
								layoutpolicy_horizontal = fixed

								text_label_center = {
									text = "MY_REALM_WINDOW_POLITICAL_PARTIES"
								}

								vbox = {
									visible = "[GetScriptedGui('leg_has_liberal').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									margin_bottom = 10
									hbox = {
										spacing = 5
										icon = {
											name = "party_icon"
											size = { 50 50 }
											texture = "gfx/interface/victorian/liberal.dds"
										}

										text_single = {
											name = "political_party"
											text = "ideology.1.a"
											default_format = "#high"
											fontsize = 18
										}
									}
									ideology_issues_list = {
										blockoverride "visibility_lf" {
											visible = "[GetScriptedGui('liberal_has_lf').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										}
										blockoverride "visibility_re" {
											visible = "[GetScriptedGui('liberal_has_re').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										}
										blockoverride "visibility_sl" {
											visible = "[GetScriptedGui('liberal_has_sl').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										}
										blockoverride "visibility_sh" {
											visible = "[GetScriptedGui('liberal_has_sh').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										}
										blockoverride "visibility_ps" {
											visible = "[GetScriptedGui('liberal_has_ps').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										}
									}
								}
								vbox = {
									visible = "[GetScriptedGui('leg_has_socialist').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									margin_bottom = 10
									hbox = {
										spacing = 5
										icon = {
											name = "party_icon"
											size = { 50 50 }
											texture = "gfx/interface/victorian/socialist.dds"
										}

										text_single = {
											name = "political_party"
											text = "ideology.1.b"
											default_format = "#high"
											fontsize = 18
										}
									}
									ideology_issues_list = {
										blockoverride "visibility_lf" {
											visible = "[GetScriptedGui('socialist_has_lf').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										}
										blockoverride "visibility_re" {
											visible = "[GetScriptedGui('socialist_has_re').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										}
										blockoverride "visibility_sl" {
											visible = "[GetScriptedGui('socialist_has_sl').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										}
										blockoverride "visibility_sh" {
											visible = "[GetScriptedGui('socialist_has_sh').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										}
										blockoverride "visibility_ps" {
											visible = "[GetScriptedGui('socialist_has_ps').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										}
									}
								}
								vbox = {
									visible = "[GetScriptedGui('leg_has_reactionary').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									margin_bottom = 10
									hbox = {
										spacing = 5
										icon = {
											name = "party_icon"
											size = { 50 50 }
											texture = "gfx/interface/victorian/reactionary.dds"
										}

										text_single = {
											name = "political_party"
											text = "ideology.1.c"
											default_format = "#high"
											fontsize = 18
										}
									}
									ideology_issues_list = {
										blockoverride "visibility_lf" {
											visible = "[GetScriptedGui('reactionary_has_lf').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										}
										blockoverride "visibility_re" {
											visible = "[GetScriptedGui('reactionary_has_re').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										}
										blockoverride "visibility_sl" {
											visible = "[GetScriptedGui('reactionary_has_sl').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										}
										blockoverride "visibility_sh" {
											visible = "[GetScriptedGui('reactionary_has_sh').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										}
										blockoverride "visibility_ps" {
											visible = "[GetScriptedGui('reactionary_has_ps').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										}
									}
								}
								vbox = {
									visible = "[GetScriptedGui('leg_has_fascist').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									margin_bottom = 10
									hbox = {
										spacing = 5
										icon = {
											name = "party_icon"
											size = { 50 50 }
											texture = "gfx/interface/victorian/fascist.dds"
										}

										text_single = {
											name = "political_party"
											text = "ideology.1.d"
											default_format = "#high"
											fontsize = 18
										}
									}
									ideology_issues_list = {
										blockoverride "visibility_lf" {
											visible = "[GetScriptedGui('fascist_has_lf').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										}
										blockoverride "visibility_re" {
											visible = "[GetScriptedGui('fascist_has_re').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										}
										blockoverride "visibility_sl" {
											visible = "[GetScriptedGui('fascist_has_sl').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										}
										blockoverride "visibility_sh" {
											visible = "[GetScriptedGui('fascist_has_sh').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										}
										blockoverride "visibility_ps" {
											visible = "[GetScriptedGui('fascist_has_ps').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										}
									}
								}
								vbox = {
									visible = "[GetScriptedGui('leg_has_conservative').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									margin_bottom = 10
									hbox = {
										spacing = 5
										icon = {
											name = "party_icon"
											size = { 50 50 }
											texture = "gfx/interface/victorian/conservatism.dds"
										}

										text_single = {
											name = "political_party"
											text = "ideology.1.e"
											default_format = "#high"
											fontsize = 18
										}
									}
									ideology_issues_list = {
										blockoverride "visibility_lf" {
											visible = "[GetScriptedGui('conservative_has_lf').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										}
										blockoverride "visibility_re" {
											visible = "[GetScriptedGui('conservative_has_re').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										}
										blockoverride "visibility_sl" {
											visible = "[GetScriptedGui('conservative_has_sl').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										}
										blockoverride "visibility_sh" {
											visible = "[GetScriptedGui('conservative_has_sh').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										}
										blockoverride "visibility_ps" {
											visible = "[GetScriptedGui('conservative_has_ps').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										}
									}
								}
								vbox = {
									visible = "[GetScriptedGui('leg_has_communist').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									margin_bottom = 10
									hbox = {
										spacing = 5
										icon = {
											name = "party_icon"
											size = { 50 50 }
											texture = "gfx/interface/victorian/communist.dds"
										}

										text_single = {
											name = "political_party"
											text = "ideology.1.f"
											default_format = "#high"
											fontsize = 18
										}
									}
									ideology_issues_list = {
										blockoverride "visibility_lf" {
											visible = "[GetScriptedGui('communist_has_lf').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										}
										blockoverride "visibility_re" {
											visible = "[GetScriptedGui('communist_has_re').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										}
										blockoverride "visibility_sl" {
											visible = "[GetScriptedGui('communist_has_sl').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										}
										blockoverride "visibility_sh" {
											visible = "[GetScriptedGui('communist_has_sh').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										}
										blockoverride "visibility_ps" {
											visible = "[GetScriptedGui('communist_has_ps').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										}
									}
								}
								vbox = {
									visible = "[GetScriptedGui('leg_has_anarchist').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									margin_bottom = 10
									hbox = {
										spacing = 5
										icon = {
											name = "party_icon"
											size = { 50 50 }
											texture = "gfx/interface/victorian/anarcho_liberal.dds"
										}

										text_single = {
											name = "political_party"
											text = "ideology.1.g"
											default_format = "#high"
											fontsize = 18
										}
									}
									ideology_issues_list = {
										blockoverride "visibility_lf" {
											visible = "[GetScriptedGui('anarchist_has_lf').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										}
										blockoverride "visibility_re" {
											visible = "[GetScriptedGui('anarchist_has_re').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										}
										blockoverride "visibility_sl" {
											visible = "[GetScriptedGui('anarchist_has_sl').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										}
										blockoverride "visibility_sh" {
											visible = "[GetScriptedGui('anarchist_has_sh').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										}
										blockoverride "visibility_ps" {
											visible = "[GetScriptedGui('anarchist_has_ps').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
										}
									}
								}
								vbox = {
									visible = "[GetScriptedGui('leg_has_independent').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
									margin_bottom = 10
									hbox = {
										spacing = 5
										icon = {
											name = "party_icon"
											size = { 50 50 }
											texture = "gfx/interface/victorian/_none.dds"
										}

										text_single = {
											name = "political_party"
											text = "ideology.INDEPENDENT"
											default_format = "#high"
											fontsize = 18
										}
									}
									vbox = {
										layoutpolicy_horizontal = fixed
										tooltip = "PARTY_ISSUE_INDEPENDENT_DESC"
										text_single = {
											layoutpolicy_horizontal = fixed
											max_width = 350
											text = "PARTY_ISSUE_INDEPENDENT"
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

######################################################
################ TYPES AND TEMPLATES #################
######################################################

types MyRealmWindow
{
	type my_realm_window_contribution_tooltip = container {
		alwaystransparent = no
		widget = {
			name = "background"
			using = Background_Tooltip
			size = { 100% 100% }
			alwaystransparent = no
		}

		flowcontainer = {
			margin = { 10 0 }
			margin_top = 10
			spacing = 15
			direction = vertical
			ignoreinvisible = yes

			text_single = {
				margin = { 5 0 }
				block "contribution_tooltip_header" {}
			}

			widget_gold_breakdown_tooltip = {
				layoutpolicy_horizontal = expanding
				blockoverride "income"
				{
					visible = no
				}

				blockoverride "background" {}
			}

			block "contribution_tooltip_content_suffix" {
				text_single = {
					multiline = yes
					maximumsize = { 250 -1 }
					text = "MY_REALM_WINDOW_CONTRIBUTION_TO_THEOCRATIC_LIEGE"
					visible = "[Character.IsTheocraticLessee]"
				}
			}

			flowcontainer = {
				spacing = 15
				direction = vertical
				ignoreinvisible = yes
				block "tax_info_visible" {}
				block "tax_info" {}
			}

			flowcontainer = {
				spacing = 15
				direction = vertical
				ignoreinvisible = yes
				block "levy_info_visible" {}
				block "levy_info" {}
			}
		}
	}

	type vassal_contract_not_default_icon = icon
	{
		texture = "gfx/interface/icons/icon_contract_modification.dds"
		framesize = { 60 60 }
		frame = 1
		name = "vassal_contract_not_default"
		size = { 25 25 }
		visible = "[Not( VassalContract.IsContractDefault )]"
		tooltip = "VASSAL_CONTRACT_NOT_DEFAULT"
	}

	type ideology_issues_list = vbox
	{
		layoutpolicy_horizontal = fixed
		spacing = 5
		vbox = {
			block "visibility_lf"
			{
				visible = "[GetScriptedGui('realm_uses_legislature_tab').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
			}
			tooltip = "PARTY_ISSUE_LAISSEZ_FAIRE_DESC"
			layoutpolicy_horizontal = fixed
			text_single = {
				layoutpolicy_horizontal = fixed
				max_width = 350
				text = "PARTY_ISSUE_LAISSEZ_FAIRE"
			}
		}
		vbox = {
			block "visibility_re"
			{
				visible = "[GetScriptedGui('realm_uses_legislature_tab').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
			}
			tooltip = "PARTY_ISSUE_REGULATED_ECONOMY_DESC"
			layoutpolicy_horizontal = fixed
			text_single = {
				layoutpolicy_horizontal = fixed
				max_width = 350
				text = "PARTY_ISSUE_REGULATED_ECONOMY"
			}
		}
		vbox = {
			block "visibility_sl"
			{
				visible = "[GetScriptedGui('realm_uses_legislature_tab').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
			}
			tooltip = "PARTY_ISSUE_SOCIAL_LIBERTY_DESC"
			layoutpolicy_horizontal = fixed
			text_single = {
				layoutpolicy_horizontal = fixed
				max_width = 350
				text = "PARTY_ISSUE_SOCIAL_LIBERTY"
			}
		}
		vbox = {
			block "visibility_sh"
			{
				visible = "[GetScriptedGui('realm_uses_legislature_tab').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
			}
			tooltip = "PARTY_ISSUE_SOCIAL_HIERARCHY_DESC"
			layoutpolicy_horizontal = fixed
			text_single = {
				layoutpolicy_horizontal = fixed
				max_width = 350
				text = "PARTY_ISSUE_SOCIAL_HIERARCHY"
			}
		}
		vbox = {
			block "visibility_ps"
			{
				visible = "[GetScriptedGui('realm_uses_legislature_tab').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
			}
			tooltip = "PARTY_ISSUE_PRO_SLAVERY_DESC"
			layoutpolicy_horizontal = fixed
			text_single = {
				layoutpolicy_horizontal = fixed
				max_width = 350
				text = "PARTY_ISSUE_PRO_SLAVERY"
			}
		}
	}
}
