unite_the_two_sicilies_decision_effects = {
	#Prestige
	add_prestige = massive_prestige_gain

	#Laws
	if = {
		limit = { has_realm_law = crown_authority_0 }
		add_realm_law_skip_effects = crown_authority_2
	}
	else_if = {
		limit = {
			OR = {
				has_realm_law = crown_authority_1
				has_realm_law = crown_authority_2
			}
		}
		add_realm_law_skip_effects = crown_authority_3
	}

	#Handle other Kingdom titles
	title:k_sicily = { add_to_list = sicilian_kingdoms }
	title:k_naples = { add_to_list = sicilian_kingdoms }
	title:k_trinacria = { add_to_list = sicilian_kingdoms }

	custom_tooltip = unite_the_two_sicilies_decision_titles_tt
	hidden_effect = {
		every_in_list = {
			list = sicilian_kingdoms
			limit = {
				NOT = { this = scope:sicilies_uniter.primary_title }
				#scope:sicilies_uniter = { completely_controls = prev }
			}

			#De jure shift all held spanish titles into your primary title
			every_in_de_jure_hierarchy = {
				limit = { tier = tier_duchy }
				set_de_jure_liege_title = scope:sicilies_uniter.primary_title
			}

			#Destroys them all!
			scope:sicilies_uniter = { destroy_title = prev }
		}
	}
	scope:sicilies_uniter.primary_title = {
		set_title_name = k_tts
	}
}

british_raj_decision_effect = {
	#Create the title
	create_title_and_vassal_change = {
		type = created
		save_scope_as = title_change
		add_claim_on_loss = no
	}
	title:e_india = {
		change_title_holder = {
			holder = root
			change = scope:title_change
		}
	}
	resolve_title_and_vassal_change = scope:title_change

	title:e_rajastan = { add_to_list = indian_empire }
	title:e_deccan = { add_to_list = indian_empire }
	title:e_bengal = { add_to_list = indian_empire }

	every_in_list = {
		list = indian_empire
		every_in_de_jure_hierarchy = {
			limit = {
				tier = tier_kingdom
			}
			set_de_jure_liege_title = title:e_india
		}
	}

	hidden_effect = {
		if = {
			limit = { has_title = title:e_rajastan }
			destroy_title = title:e_rajastan
		}
		if = {
			limit = { has_title = title:e_deccan }
			destroy_title = title:e_deccan
		}
		if = {
			limit = { has_title = title:e_bengal }
			destroy_title = title:e_bengal
		}
	}
}

reset_poland_de_jure_effect = {
	title:c_wielunska = {
		set_de_jure_liege_title = title:d_kuyavia
	}
	title:c_kujawy = {
		set_de_jure_liege_title = title:d_kuyavia
	}
	title:c_dobrzynska = {
		set_de_jure_liege_title = title:d_kuyavia
	}
	title:d_kuyavia = {
		set_capital_county = title:c_kujawy
	}
	title:d_wielkopolska = {
		set_de_jure_liege_title = title:k_poland
	}
	title:d_pomerelia = {
		set_de_jure_liege_title = title:k_poland
	}

	title:c_lubusz = {
		set_de_jure_liege_title = title:d_lower_silesia
	}
	title:c_slupsk = {
		set_de_jure_liege_title = title:d_pommerania
	}
	title:c_miastko = {
		set_de_jure_liege_title = title:d_pommerania
	}
	title:c_belz = {
		set_de_jure_liege_title = title:d_cherven_cities
	}
	title:c_peremyshl = {
		set_de_jure_liege_title = title:d_cherven_cities
	}
	title:c_sacz = {
		set_de_jure_liege_title = title:d_lesser_poland
	}
	title:c_tarnowska = {
		set_de_jure_liege_title = title:d_lesser_poland
	}
	title:c_zaslavl = {
		set_de_jure_liege_title = title:d_halych
	}

	title:d_halych = {
		set_de_jure_liege_title = title:k_galicia-volhynia
	}

	if = {
		limit = { exists = title:k_lodomeria.holder }
		destroy_title = title:k_lodomeria
	}
	add_pressed_claim = title:c_bethen
}

add_ai_national_cb_titles = {
	scope:defender = {
		every_realm_de_jure_duchy = {
			limit = {
				NOT = { is_in_list = target_titles }
				target_is_de_jure_liege_or_above = scope:attacker.primary_title.de_jure_liege
	
				# SPECIAL CASES
				# you cannot conquer Rome through this cb or else the Papacy will be destroyed
				trigger_if = {
					limit = {
						title:c_roma.holder = title:k_papal_state.holder
					}
					NOT = { this = title:d_latium }
				}

				# Friuli will have a single county conquered, not the entire duchy
				NOT = { this = title:d_friuli }

				# you cannot conquer low countries or neutral swiss
				NOT = {
					OR = {
						de_jure_liege = title:k_belgium
						de_jure_liege = title:k_frisia
						de_jure_liege = title:k_switzerland
					}
				}
			}
			add_to_list = target_titles
		}
		every_realm_county = {
			limit = {
				NOT = { is_in_list = target_titles }

				# for historical accuracy
				this = title:c_friuli
				target_is_de_jure_liege_or_above = scope:attacker.primary_title.de_jure_liege
			}
			add_to_list = target_titles
		}
	}
}

form_romania_decision_effects = {
	#Prestige
	add_prestige = massive_prestige_gain

	#Laws
	if = {
		limit = { has_realm_law = crown_authority_0 }
		add_realm_law_skip_effects = crown_authority_2
	}
	else_if = {
		limit = {
			OR = {
				has_realm_law = crown_authority_1
				has_realm_law = crown_authority_2
			}
		}
		add_realm_law_skip_effects = crown_authority_3
	}

	#Create the title and make it primary
	create_title_and_vassal_change = {
		type = created
		save_scope_as = title_change
		add_claim_on_loss = no
	}
	title:k_romania = {
		change_title_holder = {
			holder = root
			change = scope:title_change
		}
	}
	resolve_title_and_vassal_change = scope:title_change

	set_primary_title_to = title:k_romania
	title:k_romania = { save_scope_as = romania } #For localisation

	#Handle other Kingdom titles
	title:k_dacia = { add_to_list = romanian_kingdoms }
	title:k_moldavia = { add_to_list = romanian_kingdoms }

	custom_tooltip = form_romania_decision_titles_tt
	hidden_effect = {
		every_in_list = {
			list = romanian_kingdoms

			#De jure shift all held spanish titles into your primary title
			every_in_de_jure_hierarchy = {
				limit = { tier = tier_duchy }
				set_de_jure_liege_title = scope:vlach_uniter.primary_title
			}

			#Destroys them all!
			scope:vlach_uniter = { destroy_title = prev }
		}
	}
}

start_british_invasion_effect = {
	save_temporary_scope_as = mongol_conqueror
	if = {
		limit = {
			current_date < 1960.1.1
			any_neighboring_top_liege_realm_owner = {
				has_title = title:e_maratha
				NOT = { scope:mongol_conqueror = { has_truce = PREV } }
				scope:mongol_conqueror.max_military_strength > this.max_military_strength
			}
		}
		random_neighboring_top_liege_realm_owner = {
			limit = {
				has_title = title:e_maratha
			}
			save_temporary_scope_as = first_target
		}
		scope:mongol_conqueror = {
			start_war = {
				cb = indian_hegemony_cb
				target = scope:first_target
			}
		}
	}
	else_if = {
		limit = {
			current_date > 1870.1.1
			current_date < 1960.1.1
			any_neighboring_top_liege_realm_owner = {
				any_sub_realm_county = {
					target_is_de_jure_liege_or_above = title:k_pagan
				}
				NOT = { scope:mongol_conqueror = { has_truce = PREV } }
				scope:mongol_conqueror.max_military_strength > this.max_military_strength
			}
		}
		random_neighboring_top_liege_realm_owner = {
			limit = {
				any_sub_realm_county = {
					target_is_de_jure_liege_or_above = title:k_pagan
				}
			}
			save_temporary_scope_as = first_target
		}
		scope:mongol_conqueror = {
			start_war = {
				cb = invasion_war
				target = scope:first_target
				target_title = title:k_pagan
			}
		}
	}
	else_if = {
		limit = {
			current_date > 1824.1.1
			any_neighboring_top_liege_realm_owner = {
				any_sub_realm_county = {
					target_is_de_jure_liege_or_above = title:d_arakan
				}
				NOT = { scope:mongol_conqueror = { has_truce = PREV } }
				NOT = { scope:mongol_conqueror = { is_allied_to = PREV } }
				scope:mongol_conqueror.max_military_strength > this.max_military_strength
			}
		}
		random_neighboring_top_liege_realm_owner = {
			limit = {
				any_sub_realm_county = {
					target_is_de_jure_liege_or_above = title:d_arakan
				}
			}
			save_temporary_scope_as = first_target
		}
		scope:mongol_conqueror = {
			start_war = {
				cb = duchy_conquest_cb
				target = scope:first_target
				target_title = title:d_arakan
			}
		}
	}
	else_if = {
		limit = {
			current_date > 1824.1.1
			any_neighboring_top_liege_realm_owner = {
				any_sub_realm_county = {
					target_is_de_jure_liege_or_above = title:d_tenasserim
				}
				NOT = { scope:mongol_conqueror = { has_truce = PREV } }
				NOT = { scope:mongol_conqueror = { is_allied_to = PREV } }
				scope:mongol_conqueror.max_military_strength > this.max_military_strength
			}
		}
		random_neighboring_top_liege_realm_owner = {
			limit = {
				any_sub_realm_county = {
					target_is_de_jure_liege_or_above = title:d_tenasserim
				}
			}
			save_temporary_scope_as = first_target
		}
		scope:mongol_conqueror = {
			start_war = {
				cb = duchy_conquest_cb
				target = scope:first_target
				target_title = title:d_tenasserim
			}
		}
	}
	else_if = {
		limit = {
			current_date > 1840.1.1
			current_date < 1960.1.1
			any_neighboring_top_liege_realm_owner = {
				any_sub_realm_county = {
					target_is_de_jure_liege_or_above = title:k_maryul
				}
				NOT = { scope:mongol_conqueror = { has_truce = PREV } }
				scope:mongol_conqueror.max_military_strength > this.max_military_strength
			}
		}
		random_neighboring_top_liege_realm_owner = {
			limit = {
				any_sub_realm_county = {
					target_is_de_jure_liege_or_above = title:k_maryul
				}
			}
			save_temporary_scope_as = first_target
		}
		scope:mongol_conqueror = {
			start_war = {
				cb = invasion_war
				target = scope:first_target
				target_title = title:k_maryul
			}
		}
	}
	else_if = {
		limit = {
			current_date > 1840.1.1
			current_date < 1960.1.1
			any_neighboring_top_liege_realm_owner = {
				any_sub_realm_county = {
					target_is_de_jure_liege_or_above = title:k_kashmir
				}
				NOT = { scope:mongol_conqueror = { has_truce = PREV } }
				scope:mongol_conqueror.max_military_strength > this.max_military_strength
			}
		}
		random_neighboring_top_liege_realm_owner = {
			limit = {
				any_sub_realm_county = {
					target_is_de_jure_liege_or_above = title:k_kashmir
				}
			}
			save_temporary_scope_as = first_target
		}
		scope:mongol_conqueror = {
			start_war = {
				cb = invasion_war
				target = scope:first_target
				target_title = title:k_kashmir
			}
		}
	}
	else_if = {
		limit = {
			current_date > 1840.1.1
			current_date < 1960.1.1
			any_neighboring_top_liege_realm_owner = {
				any_sub_realm_county = {
					target_is_de_jure_liege_or_above = title:k_punjab
				}
				NOT = { scope:mongol_conqueror = { has_truce = PREV } }
				NOT = { scope:mongol_conqueror = { is_allied_to = PREV } }
				scope:mongol_conqueror.max_military_strength > this.max_military_strength
			}
		}
		random_neighboring_top_liege_realm_owner = {
			limit = {
				any_sub_realm_county = {
					target_is_de_jure_liege_or_above = title:k_punjab
				}
			}
			save_temporary_scope_as = first_target
		}
		scope:mongol_conqueror = {
			start_war = {
				cb = invasion_war
				target = scope:first_target
				target_title = title:k_punjab
			}
		}
	}
	else_if = {
		limit = {
			current_date > 1850.1.1
			any_neighboring_top_liege_realm_owner = {
				any_sub_realm_county = {
					target_is_de_jure_liege_or_above = title:d_ramannadesa
				}
				NOT = { scope:mongol_conqueror = { has_truce = PREV } }
				NOT = { scope:mongol_conqueror = { is_allied_to = PREV } }
				scope:mongol_conqueror.max_military_strength > this.max_military_strength
			}
		}
		random_neighboring_top_liege_realm_owner = {
			limit = {
				any_sub_realm_county = {
					target_is_de_jure_liege_or_above = title:d_ramannadesa
				}
			}
			save_temporary_scope_as = first_target
		}
		scope:mongol_conqueror = {
			start_war = {
				cb = duchy_conquest_cb
				target = scope:first_target
				target_title = title:d_ramannadesa
			}
		}
	}
	else_if = {
		limit = {
			current_date > 1850.1.1
			any_neighboring_top_liege_realm_owner = {
				any_sub_realm_county = {
					target_is_de_jure_liege_or_above = title:d_karen
				}
				NOT = { scope:mongol_conqueror = { has_truce = PREV } }
				NOT = { scope:mongol_conqueror = { is_allied_to = PREV } }
				scope:mongol_conqueror.max_military_strength > this.max_military_strength
			}
		}
		random_neighboring_top_liege_realm_owner = {
			limit = {
				any_sub_realm_county = {
					target_is_de_jure_liege_or_above = title:d_karen
				}
			}
			save_temporary_scope_as = first_target
		}
		scope:mongol_conqueror = {
			start_war = {
				cb = duchy_conquest_cb
				target = scope:first_target
				target_title = title:d_karen
			}
		}
	}
	else_if = {
		limit = {
			current_date > 1850.1.1
			any_neighboring_top_liege_realm_owner = {
				any_sub_realm_county = {
					target_is_de_jure_liege_or_above = title:d_sriksetra
				}
				NOT = { scope:mongol_conqueror = { has_truce = PREV } }
				NOT = { scope:mongol_conqueror = { is_allied_to = PREV } }
				scope:mongol_conqueror.max_military_strength > this.max_military_strength
			}
		}
		random_neighboring_top_liege_realm_owner = {
			limit = {
				any_sub_realm_county = {
					target_is_de_jure_liege_or_above = title:d_sriksetra
				}
			}
			save_temporary_scope_as = first_target
		}
		scope:mongol_conqueror = {
			start_war = {
				cb = duchy_conquest_cb
				target = scope:first_target
				target_title = title:d_sriksetra
			}
		}
	}
}

start_unification_war_effect = {
	save_temporary_scope_as = mongol_conqueror
	if = {
		limit = {
			any_neighboring_top_liege_realm_owner = {
				NOR = {
					has_title = title:k_france
					has_title = title:e_france
				}
				scope:mongol_conqueror = {
					has_cb_on = {
						target = PREV
						cb = nationalism_cb
					}
				}
				NOT = { scope:mongol_conqueror = { has_truce = PREV } }
				scope:mongol_conqueror.max_military_strength > this.max_military_strength
			}
		}
		random_neighboring_top_liege_realm_owner = {
			limit = {
				NOR = {
					has_title = title:k_france
					has_title = title:e_france
				}
				scope:mongol_conqueror = {
					has_cb_on = {
						target = PREV
						cb = nationalism_cb
					}
				}
			}
			save_temporary_scope_as = first_target
		}
		scope:mongol_conqueror = {
			start_war = {
				cb = nationalism_cb
				target = scope:first_target
			}
		}
	}
	else_if = {
		limit = {
			current_date > 1860.1.1
			has_title = title:k_prussia
			any_neighboring_top_liege_realm_owner = {
				any_sub_realm_county = {
					target_is_de_jure_liege_or_above = title:d_holstein
				}
				NOT = { scope:mongol_conqueror = { has_truce = PREV } }
				scope:mongol_conqueror.max_military_strength > this.max_military_strength
			}
		}
		random_neighboring_top_liege_realm_owner = {
			limit = {
				any_sub_realm_county = {
					target_is_de_jure_liege_or_above = title:d_holstein
				}
			}
			save_temporary_scope_as = first_target
		}
		scope:mongol_conqueror = {
			start_war = {
				cb = duchy_conquest_cb
				target = scope:first_target
				target_title = title:d_holstein
			}
		}
	}
	else_if = {
		limit = {
			current_date > 1860.1.1
			current_date < 1920.1.1
			has_title = title:k_prussia
			any_neighboring_top_liege_realm_owner = {
				any_sub_realm_county = {
					target_is_de_jure_liege_or_above = title:d_slesvig
				}
				NOT = { scope:mongol_conqueror = { has_truce = PREV } }
				scope:mongol_conqueror.max_military_strength > this.max_military_strength
			}
		}
		random_neighboring_top_liege_realm_owner = {
			limit = {
				any_sub_realm_county = {
					target_is_de_jure_liege_or_above = title:d_slesvig
				}
			}
			save_temporary_scope_as = first_target
		}
		scope:mongol_conqueror = {
			start_war = {
				cb = duchy_conquest_cb
				target = scope:first_target
				target_title = title:d_slesvig
			}
		}
	}
	else_if = {
		limit = {
			any_neighboring_top_liege_realm_owner = {
				OR = {
					has_title = title:k_france
					has_title = title:e_france
				}
				scope:mongol_conqueror = {
					has_cb_on = {
						target = PREV
						cb = nationalism_cb
					}
				}
				NOT = { scope:mongol_conqueror = { has_truce = PREV } }
				scope:mongol_conqueror.max_military_strength > this.max_military_strength
			}
		}
		random_neighboring_top_liege_realm_owner = {
			limit = {
				OR = {
					has_title = title:k_france
					has_title = title:e_france
				}
				scope:mongol_conqueror = {
					has_cb_on = {
						target = PREV
						cb = nationalism_cb
					}
				}
			}
			save_temporary_scope_as = first_target
		}
		scope:mongol_conqueror = {
			start_war = {
				cb = nationalism_cb
				target = scope:first_target
			}
		}
	}
	else_if = {
		limit = {
			title:c_metz = {
				target_is_de_jure_liege_or_above = title:d_alsace
			}
			current_date < 1920.1.1
			has_title = title:e_germany
			any_neighboring_top_liege_realm_owner = {
				any_sub_realm_county = {
					target_is_de_jure_liege_or_above = title:d_alsace
				}
				NOT = { scope:mongol_conqueror = { has_truce = PREV } }
				scope:mongol_conqueror.max_military_strength > this.max_military_strength
			}
		}
		random_neighboring_top_liege_realm_owner = {
			limit = {
				any_sub_realm_county = {
					target_is_de_jure_liege_or_above = title:d_alsace
				}
			}
			save_temporary_scope_as = first_target
		}
		scope:mongol_conqueror = {
			start_war = {
				cb = individual_duchy_de_jure_cb
				target = scope:first_target
				target_title = title:d_alsace
			}
		}
	}
}

clear_term_limit_reforms = {
	remove_list_variable = { name = enacted_laws_list target = flag:four_year_term }
	remove_list_variable = { name = enacted_laws_list target = flag:five_year_term }
	remove_list_variable = { name = enacted_laws_list target = flag:six_year_term }
	remove_list_variable = { name = enacted_laws_list target = flag:seven_year_term }
	remove_list_variable = { name = enacted_laws_list target = flag:life_title_term }
}

clear_leg_term_limit_reforms = {
	remove_list_variable = { name = enacted_laws_list target = flag:leg_two_year_term }
	remove_list_variable = { name = enacted_laws_list target = flag:leg_three_year_term }
	remove_list_variable = { name = enacted_laws_list target = flag:leg_four_year_term }
	remove_list_variable = { name = enacted_laws_list target = flag:leg_five_year_term }
	remove_list_variable = { name = enacted_laws_list target = flag:leg_six_year_term }
	remove_list_variable = { name = enacted_laws_list target = flag:leg_life_title_term }
}

clear_all_government_reforms = {
	remove_list_variable = { name = enacted_laws_list target = flag:admin_centralized }
	remove_list_variable = { name = enacted_laws_list target = flag:sovereign_absolute }
	remove_list_variable = { name = enacted_laws_list target = flag:sovereign_semi_constitutional }
	remove_list_variable = { name = enacted_laws_list target = flag:sovereign_constitutional }
	remove_list_variable = { name = enacted_laws_list target = flag:eligibility_default }
	remove_list_variable = { name = enacted_laws_list target = flag:eligibility_one_party }
	remove_list_variable = { name = enacted_laws_list target = flag:eligibility_state }
	remove_list_variable = { name = enacted_laws_list target = flag:eligibility_de_jure }
	remove_list_variable = { name = enacted_laws_list target = flag:eligibility_de_facto }
	remove_list_variable = { name = enacted_laws_list target = flag:apportionment_landed }
	remove_list_variable = { name = enacted_laws_list target = flag:apportionment_equal }
	remove_list_variable = { name = enacted_laws_list target = flag:apportionment_mixed }
	remove_list_variable = { name = enacted_laws_list target = flag:apportionment_population }
	remove_list_variable = { name = enacted_laws_list target = flag:vote_franchise_landed }
	remove_list_variable = { name = enacted_laws_list target = flag:vote_franchise_wealth }
	remove_list_variable = { name = enacted_laws_list target = flag:vote_franchise_universal_manhood }
	remove_list_variable = { name = enacted_laws_list target = flag:vote_franchise_universal }
	remove_list_variable = { name = enacted_laws_list target = flag:vote_system_two_party }
	remove_list_variable = { name = enacted_laws_list target = flag:vote_system_jefferson }
	remove_list_variable = { name = enacted_laws_list target = flag:vote_system_proportional }
}

initialize_global_election_terms = {
	if = {
		limit = { NOT = { exists = global_var:set_up_global_election_terms } }
		set_global_variable = {
			name = set_up_global_election_terms
			value = yes
		}
		trigger_event = {
			on_action = seven_year_elections
			years = 7
		}
		trigger_event = {
			on_action = six_year_elections
			years = 6
		}
		trigger_event = {
			on_action = leg_six_year_elections
			years = 6
		}
		trigger_event = {
			on_action = five_year_elections
			years = 5
		}
		trigger_event = {
			on_action = leg_five_year_elections
			years = 5
		}
		if = {
			limit = {
				OR = {
					game_start_date = 1815.7.8
					game_start_date = 1836.1.1
				}
			}
			trigger_event = {
				on_action = four_year_elections
				years = 1
			}
			trigger_event = {
				on_action = leg_four_year_elections
				years = 1
			}
		}
		else_if = {
			limit = { game_start_date = 1861.7.1 }
			trigger_event = {
				on_action = four_year_elections
				years = 3
			}
			trigger_event = {
				on_action = leg_four_year_elections
				years = 3
			}
		}
		else = {
			trigger_event = {
				on_action = four_year_elections
				years = 4
			}
			trigger_event = {
				on_action = leg_four_year_elections
				years = 4
			}
		}
		trigger_event = {
			on_action = leg_three_year_elections
			years = 3
		}
		if = {
			limit = {
				OR = {
					game_start_date = 1815.7.8
					game_start_date = 1836.1.1
					game_start_date = 1861.7.1
				}
			}
			trigger_event = {
				on_action = leg_two_year_elections
				months = 8
			}
		}
		else = {
			trigger_event = {
				on_action = leg_two_year_elections
				months = 20
			}
		}
	}
}

copy_government_reforms_new_title = {
	if = {
		limit = { exists = primary_title }
		
		# the new primary title copies reforms from the old one
		if = {
			limit = {
				has_character_flag = rank_change_copy_reforms
				NOT = { has_character_flag = ignore_copy_reforms }
			}
			primary_title = { clear_all_government_reforms = yes clear_leg_debate_variables_effect = yes }
			
			if = {
				limit = { scope:title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:admin_centralized } } }
				primary_title = { add_to_variable_list = { name = enacted_laws_list target = flag:admin_centralized } }
			}
			if = {
				limit = { scope:title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:sovereign_absolute } } }
				primary_title = { add_to_variable_list = { name = enacted_laws_list target = flag:sovereign_absolute } }
			}
			if = {
				limit = { scope:title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:sovereign_semi_constitutional } } }
				primary_title = { add_to_variable_list = { name = enacted_laws_list target = flag:sovereign_semi_constitutional } }
			}
			if = {
				limit = { scope:title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:sovereign_constitutional } } }
				primary_title = { add_to_variable_list = { name = enacted_laws_list target = flag:sovereign_constitutional } }
			}
			if = {
				limit = { scope:title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:eligibility_default } } }
				primary_title = { add_to_variable_list = { name = enacted_laws_list target = flag:eligibility_default } }
			}
			if = {
				limit = { scope:title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:eligibility_one_party } } }
				primary_title = { add_to_variable_list = { name = enacted_laws_list target = flag:eligibility_one_party } }
			}
			if = {
				limit = { scope:title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:eligibility_state } } }
				primary_title = { add_to_variable_list = { name = enacted_laws_list target = flag:eligibility_state } }
			}
			if = {
				limit = { scope:title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:eligibility_de_jure } } }
				primary_title = { add_to_variable_list = { name = enacted_laws_list target = flag:eligibility_de_jure } }
			}
			if = {
				limit = { scope:title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:eligibility_de_facto } } }
				primary_title = { add_to_variable_list = { name = enacted_laws_list target = flag:eligibility_de_facto } }
			}
			if = {
				limit = { scope:title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_landed } } }
				primary_title = { add_to_variable_list = { name = enacted_laws_list target = flag:apportionment_landed } }
			}
			if = {
				limit = { scope:title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_equal } } }
				primary_title = { add_to_variable_list = { name = enacted_laws_list target = flag:apportionment_equal } }
			}
			if = {
				limit = { scope:title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_mixed } } }
				primary_title = { add_to_variable_list = { name = enacted_laws_list target = flag:apportionment_mixed } }
			}
			if = {
				limit = { scope:title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_population } } }
				primary_title = { add_to_variable_list = { name = enacted_laws_list target = flag:apportionment_population } }
			}
			if = {
				limit = { scope:title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:vote_franchise_landed } } }
				primary_title = { add_to_variable_list = { name = enacted_laws_list target = flag:vote_franchise_landed } }
			}
			if = {
				limit = { scope:title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:vote_franchise_wealth } } }
				primary_title = { add_to_variable_list = { name = enacted_laws_list target = flag:vote_franchise_wealth } }
			}
			if = {
				limit = { scope:title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:vote_franchise_universal_manhood } } }
				primary_title = { add_to_variable_list = { name = enacted_laws_list target = flag:vote_franchise_universal_manhood } }
			}
			if = {
				limit = { scope:title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:vote_franchise_universal } } }
				primary_title = { add_to_variable_list = { name = enacted_laws_list target = flag:vote_franchise_universal } }
			}
			if = {
				limit = { scope:title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:vote_system_two_party } } }
				primary_title = { add_to_variable_list = { name = enacted_laws_list target = flag:vote_system_two_party } }
			}
			if = {
				limit = { scope:title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:vote_system_jefferson } } }
				primary_title = { add_to_variable_list = { name = enacted_laws_list target = flag:vote_system_jefferson } }
			}
			if = {
				limit = { scope:title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:vote_system_proportional } } }
				primary_title = { add_to_variable_list = { name = enacted_laws_list target = flag:vote_system_proportional } }
			}

			# Copy Legislative debates if we are changing rank
			if = {
				limit = { scope:title = { exists = var:liberal_acceptance } }
				scope:title = {
					save_scope_value_as = { name = accept_copy value = var:liberal_acceptance }
					save_scope_value_as = { name = reject_copy value = var:liberal_rejectance }
					save_scope_value_as = { name = yay_copy value = var:liberal_yay }
					save_scope_value_as = { name = nay_coyp value = var:liberal_nay }
				}
				primary_title = {
					set_variable = { name = liberal_acceptance value = scope:accept_copy }
					set_variable = { name = liberal_rejectance value = scope:reject_copy }
					set_variable = { name = liberal_yay value = scope:yay_copy }
					set_variable = { name = liberal_nay value = scope:nay_copy }
				}
			}
			if = {
				limit = { scope:title = { exists = var:socialist_acceptance } }
				scope:title = {
					save_scope_value_as = { name = accept_copy value = var:socialist_acceptance }
					save_scope_value_as = { name = reject_copy value = var:socialist_rejectance }
					save_scope_value_as = { name = yay_copy value = var:socialist_yay }
					save_scope_value_as = { name = nay_coyp value = var:socialist_nay }
				}
				primary_title = {
					set_variable = { name = socialist_acceptance value = scope:accept_copy }
					set_variable = { name = socialist_rejectance value = scope:reject_copy }
					set_variable = { name = socialist_yay value = scope:yay_copy }
					set_variable = { name = socialist_nay value = scope:nay_copy }
				}
			}
			if = {
				limit = { scope:title = { exists = var:reactionary_acceptance } }
				scope:title = {
					save_scope_value_as = { name = accept_copy value = var:reactionary_acceptance }
					save_scope_value_as = { name = reject_copy value = var:reactionary_rejectance }
					save_scope_value_as = { name = yay_copy value = var:reactionary_yay }
					save_scope_value_as = { name = nay_coyp value = var:reactionary_nay }
				}
				primary_title = {
					set_variable = { name = reactionary_acceptance value = scope:accept_copy }
					set_variable = { name = reactionary_rejectance value = scope:reject_copy }
					set_variable = { name = reactionary_yay value = scope:yay_copy }
					set_variable = { name = reactionary_nay value = scope:nay_copy }
				}
			}
			if = {
				limit = { scope:title = { exists = var:fascist_acceptance } }
				scope:title = {
					save_scope_value_as = { name = accept_copy value = var:fascist_acceptance }
					save_scope_value_as = { name = reject_copy value = var:fascist_rejectance }
					save_scope_value_as = { name = yay_copy value = var:fascist_yay }
					save_scope_value_as = { name = nay_coyp value = var:fascist_nay }
				}
				primary_title = {
					set_variable = { name = fascist_acceptance value = scope:accept_copy }
					set_variable = { name = fascist_rejectance value = scope:reject_copy }
					set_variable = { name = fascist_yay value = scope:yay_copy }
					set_variable = { name = fascist_nay value = scope:nay_copy }
				}
			}
			if = {
				limit = { scope:title = { exists = var:conservative_acceptance } }
				scope:title = {
					save_scope_value_as = { name = accept_copy value = var:conservative_acceptance }
					save_scope_value_as = { name = reject_copy value = var:conservative_rejectance }
					save_scope_value_as = { name = yay_copy value = var:conservative_yay }
					save_scope_value_as = { name = nay_coyp value = var:conservative_nay }
				}
				primary_title = {
					set_variable = { name = conservative_acceptance value = scope:accept_copy }
					set_variable = { name = conservative_rejectance value = scope:reject_copy }
					set_variable = { name = conservative_yay value = scope:yay_copy }
					set_variable = { name = conservative_nay value = scope:nay_copy }
				}
			}
			if = {
				limit = { scope:title = { exists = var:communist_acceptance } }
				scope:title = {
					save_scope_value_as = { name = accept_copy value = var:communist_acceptance }
					save_scope_value_as = { name = reject_copy value = var:communist_rejectance }
					save_scope_value_as = { name = yay_copy value = var:communist_yay }
					save_scope_value_as = { name = nay_coyp value = var:communist_nay }
				}
				primary_title = {
					set_variable = { name = communist_acceptance value = scope:accept_copy }
					set_variable = { name = communist_rejectance value = scope:reject_copy }
					set_variable = { name = communist_yay value = scope:yay_copy }
					set_variable = { name = communist_nay value = scope:nay_copy }
				}
			}
			if = {
				limit = { scope:title = { exists = var:anarchist_acceptance } }
				scope:title = {
					save_scope_value_as = { name = accept_copy value = var:anarchist_acceptance }
					save_scope_value_as = { name = reject_copy value = var:anarchist_rejectance }
					save_scope_value_as = { name = yay_copy value = var:anarchist_yay }
					save_scope_value_as = { name = nay_coyp value = var:anarchist_nay }
				}
				primary_title = {
					set_variable = { name = anarchist_acceptance value = scope:accept_copy }
					set_variable = { name = anarchist_rejectance value = scope:reject_copy }
					set_variable = { name = anarchist_yay value = scope:yay_copy }
					set_variable = { name = anarchist_nay value = scope:nay_copy }
				}
			}
			if = {
				limit = { scope:title = { exists = var:independent_acceptance } }
				scope:title = {
					save_scope_value_as = { name = accept_copy value = var:independent_acceptance }
					save_scope_value_as = { name = reject_copy value = var:independent_rejectance }
					save_scope_value_as = { name = yay_copy value = var:independent_yay }
					save_scope_value_as = { name = nay_coyp value = var:independent_nay }
				}
				primary_title = {
					set_variable = { name = independent_acceptance value = scope:accept_copy }
					set_variable = { name = independent_rejectance value = scope:reject_copy }
					set_variable = { name = independent_yay value = scope:yay_copy }
					set_variable = { name = independent_nay value = scope:nay_copy }
				}
			}
			
			scope:title = { clear_all_government_reforms = yes clear_leg_debate_variables_effect = yes }
		}
		
		# the gained title copies reforms from the primary title (this preserves your reforms if you change the primary title)
		else = {
			scope:title = { clear_all_government_reforms = yes clear_leg_debate_variables_effect = yes }
			
			if = {
				limit = { primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:admin_centralized } } }
				scope:title = { add_to_variable_list = { name = enacted_laws_list target = flag:admin_centralized } }
			}
			if = {
				limit = { primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:sovereign_absolute } } }
				scope:title = { add_to_variable_list = { name = enacted_laws_list target = flag:sovereign_absolute } }
			}
			if = {
				limit = { primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:sovereign_semi_constitutional } } }
				scope:title = { add_to_variable_list = { name = enacted_laws_list target = flag:sovereign_semi_constitutional } }
			}
			if = {
				limit = { primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:sovereign_constitutional } } }
				scope:title = { add_to_variable_list = { name = enacted_laws_list target = flag:sovereign_constitutional } }
			}
			if = {
				limit = { primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:eligibility_default } } }
				scope:title = { add_to_variable_list = { name = enacted_laws_list target = flag:eligibility_default } }
			}
			if = {
				limit = { primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:eligibility_one_party } } }
				scope:title = { add_to_variable_list = { name = enacted_laws_list target = flag:eligibility_one_party } }
			}
			if = {
				limit = { primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:eligibility_state } } }
				scope:title = { add_to_variable_list = { name = enacted_laws_list target = flag:eligibility_state } }
			}
			if = {
				limit = { primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:eligibility_de_jure } } }
				scope:title = { add_to_variable_list = { name = enacted_laws_list target = flag:eligibility_de_jure } }
			}
			if = {
				limit = { primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:eligibility_de_facto } } }
				scope:title = { add_to_variable_list = { name = enacted_laws_list target = flag:eligibility_de_facto } }
			}
			if = {
				limit = { primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_landed } } }
				scope:title = { add_to_variable_list = { name = enacted_laws_list target = flag:apportionment_landed } }
			}
			if = {
				limit = { primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_equal } } }
				scope:title = { add_to_variable_list = { name = enacted_laws_list target = flag:apportionment_equal } }
			}
			if = {
				limit = { primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_mixed } } }
				scope:title = { add_to_variable_list = { name = enacted_laws_list target = flag:apportionment_mixed } }
			}
			if = {
				limit = { primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_population } } }
				scope:title = { add_to_variable_list = { name = enacted_laws_list target = flag:apportionment_population } }
			}
			if = {
				limit = { primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:vote_franchise_landed } } }
				scope:title = { add_to_variable_list = { name = enacted_laws_list target = flag:vote_franchise_landed } }
			}
			if = {
				limit = { primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:vote_franchise_wealth } } }
				scope:title = { add_to_variable_list = { name = enacted_laws_list target = flag:vote_franchise_wealth } }
			}
			if = {
				limit = { primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:vote_franchise_universal_manhood } } }
				scope:title = { add_to_variable_list = { name = enacted_laws_list target = flag:vote_franchise_universal_manhood } }
			}
			if = {
				limit = { primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:vote_franchise_universal } } }
				scope:title = { add_to_variable_list = { name = enacted_laws_list target = flag:vote_franchise_universal } }
			}
			if = {
				limit = { primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:vote_system_two_party } } }
				scope:title = { add_to_variable_list = { name = enacted_laws_list target = flag:vote_system_two_party } }
			}
			if = {
				limit = { primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:vote_system_jefferson } } }
				scope:title = { add_to_variable_list = { name = enacted_laws_list target = flag:vote_system_jefferson } }
			}
			if = {
				limit = { primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:vote_system_proportional } } }
				scope:title = { add_to_variable_list = { name = enacted_laws_list target = flag:vote_system_proportional } }
			}
		}
	}
}

abolish_japanese_shogunate_effect = {
	create_title_and_vassal_change = {
		type = created
		save_scope_as = title_change
		add_claim_on_loss = no
	}
	title:e_japan = {
		change_title_holder = {
			holder = root
			change = scope:title_change
		}
	}
	resolve_title_and_vassal_change = scope:title_change
	title:e_shogunate = {
		every_in_de_jure_hierarchy = {
			limit = { tier = tier_kingdom }
			set_de_jure_liege_title = title:e_japan
		}
	}
	destroy_title = title:e_shogunate
}

create_japanese_prefectures_effect = {
	title:d_matsumae = {
		every_in_de_jure_hierarchy = {
			limit = { tier = tier_county }
			set_de_jure_liege_title = title:d_hokkaido
		}
		if = {
			limit = { exists = holder }
			holder = { get_title = title:d_hokkaido }
			root = { destroy_title = title:d_matsumae }
		}
	}

	if = {
		limit = {
			exists = title:k_ryukyu.holder
			NOT = { title:k_ryukyu.holder = { has_title = title:d_ryukyu } }
		}
		title:k_ryukyu.holder = { get_title = title:d_ryukyu }
		destroy_title = title:k_ryukyu
	}

	title:c_hyuga = {
		set_de_jure_liege_title = title:d_chinzei
	}
	title:c_higo = {
		set_de_jure_liege_title = title:d_chinzei
	}

	title:c_tango = {
		set_de_jure_liege_title = title:d_kinai
	}
	title:c_tanba = {
		set_de_jure_liege_title = title:d_kinai
	}
	title:c_tajima = {
		set_de_jure_liege_title = title:d_kinai
	}
	title:c_harima = {
		set_de_jure_liege_title = title:d_kinai
	}
	title:c_kii = {
		set_de_jure_liege_title = title:d_kinai
	}
	title:c_awaji = {
		set_de_jure_liege_title = title:d_kinai
	}

	title:c_owari = {
		set_de_jure_liege_title = title:d_aichi
	}
	title:c_mikawa = {
		set_de_jure_liege_title = title:d_aichi
	}
	title:c_hitachi = {
		set_de_jure_liege_title = title:d_keno
	}

	title:c_nagato = {
		set_de_jure_liege_title = title:d_yamaguchi
	}
	title:c_suo = {
		set_de_jure_liege_title = title:d_yamaguchi
	}

	title:c_aki = {
		set_de_jure_liege_title = title:d_hiroshima
	}
	title:c_bingo = {
		set_de_jure_liege_title = title:d_hiroshima
	}

	title:c_bitchu = {
		set_de_jure_liege_title = title:d_okayama
	}
	title:c_mimasaka = {
		set_de_jure_liege_title = title:d_okayama
	}
	title:c_bizen = {
		set_de_jure_liege_title = title:d_okayama
	}

	title:c_inaba = {
		set_de_jure_liege_title = title:d_tottori
	}
	title:c_hoki = {
		set_de_jure_liege_title = title:d_tottori
	}

	title:c_izumo = {
		set_de_jure_liege_title = title:d_shimane
	}
	title:c_iwami = {
		set_de_jure_liege_title = title:d_shimane
	}
	title:c_oki = {
		set_de_jure_liege_title = title:d_shimane
	}

	title:c_wakasa = {
		set_de_jure_liege_title = title:d_hokuriku
	}
	title:c_echizen = {
		set_de_jure_liege_title = title:d_hokuriku
	}

	title:c_kaga = {
		set_de_jure_liege_title = title:d_ishikawa
	}
	title:c_noto = {
		set_de_jure_liege_title = title:d_ishikawa
	}

	title:c_etchu = {
		set_de_jure_liege_title = title:d_toyama
	}

	title:c_echigo = {
		set_de_jure_liege_title = title:d_niigata
	}
	title:c_sado = {
		set_de_jure_liege_title = title:d_niigata
	}

	title:c_tsugaru = {
		set_de_jure_liege_title = title:d_aomori
	}
	title:c_rikuo = {
		set_de_jure_liege_title = title:d_aomori
	}

	title:d_mutsu = {
		set_capital_county = title:c_rikutyu
	}
	title:c_iwaki = {
		set_de_jure_liege_title = title:d_fukushima
	}
	title:c_iwashiro = {
		set_de_jure_liege_title = title:d_fukushima
	}

	if = {
		limit = { exists = title:d_sanin.holder }
		destroy_title = title:d_sanin
	}
	if = {
		limit = { exists = title:d_sanyo.holder }
		destroy_title = title:d_sanyo
	}

	# rename prefectures
	title:d_saikai = {
		set_title_name = nagasaki
	}
	title:d_kyushu = {
		set_title_name = kagoshima
	}
	title:d_ryukyu = {
		set_title_name = okinawa
	}
	title:d_hokuriku = {
		set_title_name = fukui
	}
	title:d_owari = {
		set_title_name = mie
	}
	title:d_fusa = {
		set_title_name = chiba
	}
	title:d_edo = {
		set_title_name = tokyo
	}
}

copy_target_political_party_effect = {
	if = {
		limit = { $TARGET$ = { has_character_flag = liberal_party } }
		add_character_flag = liberal_party
		add_character_modifier = liberal_party_modifier
	}
	if = {
		limit = { $TARGET$ = { has_character_flag = socialist_party } }
		add_character_flag = socialist_party
		add_character_modifier = socialist_party_modifier
	}
	if = {
		limit = { $TARGET$ = { has_character_flag = reactionary_party } }
		add_character_flag = reactionary_party
		add_character_modifier = reactionary_party_modifier
	}
	if = {
		limit = { $TARGET$ = { has_character_flag = fascist_party } }
		add_character_flag = fascist_party
		add_character_modifier = fascist_party_modifier
	}
	if = {
		limit = { $TARGET$ = { has_character_flag = conservative_party } }
		add_character_flag = conservative_party
		add_character_modifier = conservative_party_modifier
	}
	if = {
		limit = { $TARGET$ = { has_character_flag = communist_party } }
		add_character_flag = communist_party
		add_character_modifier = communist_party_modifier
	}
	if = {
		limit = { $TARGET$ = { has_character_flag = anarchist_party } }
		add_character_flag = anarchist_party
		add_character_modifier = anarchist_party_modifier
	}
}

vice_president_title_invalidated_effect = {
	scope:liege = { trigger_event = moderntimes.301 }
}

generate_vice_presidential_candidates_effect = {
		ordered_courtier = {
			limit = {
				OR = {
					has_any_political_party = no
					has_same_political_party_as_root_trigger = yes
				}
				trigger_if = {
					limit = { root = { is_ai = yes } }
					reverse_opinion = {
						target = root
						value >= -20
					}
				}
				trigger_if = {
					limit = { current_date < 2012.1.1 }
					is_female = no
				}
				is_adult = yes
				NOR = {
					this = scope:root_election_candidate
					AND = {
						exists = scope:opposing_election_candidate
						this = scope:opposing_election_candidate
					}
				}
				knows_language_of_culture = scope:root_contested_government.capital_province.culture
			}
			order_by = stewardship
			position = 0

			save_scope_as = candidate_1
		}
		if = {
			limit = { scope:candidate_1 = scope:root_election_candidate }
				create_character = {
					location = root.capital_province
					template = pool_repopulate_stewardship
					random_culture = { root.culture = { } scope:elect_culture = { } }
					faith = root.faith
					gender_female_chance = {
						if = {
							limit = { current_date < 1980.1.1 }
							add = 0
						}
						else = {
							add = 50
						}
					}
					after_creation = {
						if = {
							limit = { NOT = { knows_language_of_culture = scope:root_contested_government.capital_province.culture } }
							learn_language_of_culture = scope:root_contested_government.capital_province.culture
						}
					}
					save_scope_as = candidate_1
				}
		}
		ordered_courtier = {
			limit = {
				OR = {
					has_any_political_party = no
					has_same_political_party_as_root_trigger = yes
				}
				trigger_if = {
					limit = { root = { is_ai = yes } }
					reverse_opinion = {
						target = root
						value >= -20
					}
				}
				trigger_if = {
					limit = { current_date < 2012.1.1 }
					is_female = no
				}
				is_adult = yes
				NOT = { this = scope:candidate_1 }
				NOR = {
					this = scope:root_election_candidate
					AND = {
						exists = scope:opposing_election_candidate
						this = scope:opposing_election_candidate
					}
				}
				knows_language_of_culture = scope:root_contested_government.capital_province.culture
			}
			order_by = diplomacy
			position = 0

			save_scope_as = candidate_2
		}
		if = {
			limit = { scope:candidate_2 = scope:root_election_candidate }
				create_character = {
					location = root.capital_province
					template = pool_repopulate_diplomacy
					random_culture = { root.culture = { } scope:elect_culture = { } }
					faith = root.faith
					gender_female_chance = {
						if = {
							limit = { current_date < 1980.1.1 }
							add = 0
						}
						else = {
							add = 50
						}
					}
					after_creation = {
						if = {
							limit = { NOT = { knows_language_of_culture = scope:root_contested_government.capital_province.culture } }
							learn_language_of_culture = scope:root_contested_government.capital_province.culture
						}
					}
					save_scope_as = candidate_2
				}
		}
	if = {
		limit = { employs_court_position = vice_president_court_position }
		random_court_position_holder = {
			limit = {
				NOR = {
					this = scope:candidate_1
					this = scope:candidate_2
					this = scope:root_election_candidate
					AND = {
						exists = scope:opposing_election_candidate
						this = scope:opposing_election_candidate
					}
				}
			}
			type = vice_president_court_position
			save_scope_as = candidate_3
		}
	}
	if = {
		limit = { NOT = { exists = scope:candidate_3 } }
		generate_random_vice_candidate_effect = yes
	}
}

generate_random_vice_candidate_effect = {
	random_realm_province = { culture = { save_scope_as = elect_culture } }
	random_list = {
			50 = {
				create_character = {
					location = root.capital_province
					template = pool_repopulate_diplomacy
					random_culture = { root.culture = { } scope:elect_culture = { } }
					faith = root.faith
					gender_female_chance = {
						if = {
							limit = { current_date < 1980.1.1 }
							add = 0
						}
						else = {
							add = 50
						}
					}
					after_creation = {
						if = {
							limit = { NOT = { knows_language_of_culture = scope:root_contested_government.capital_province.culture } }
							learn_language_of_culture = scope:root_contested_government.capital_province.culture
						}
					}
					save_scope_as = candidate_3
				}
			}
			50 = {
				create_character = {
					location = root.capital_province
					template = pool_repopulate_stewardship
					random_culture = { root.culture = { } scope:elect_culture = { } }
					faith = root.faith
					gender_female_chance = {
						if = {
							limit = { current_date < 1980.1.1 }
							add = 0
						}
						else = {
							add = 50
						}
					}
					after_creation = {
						if = {
							limit = { NOT = { knows_language_of_culture = scope:root_contested_government.capital_province.culture } }
							learn_language_of_culture = scope:root_contested_government.capital_province.culture
						}
					}
					save_scope_as = candidate_3
				}
			}
		}
}

establish_oklahoma_territory_effect = {
		create_title_and_vassal_change = {
			type = granted
			save_scope_as = change
		}
		title:c_kikaoas = {
			change_title_holder = {
				holder = scope:new_governor
				change = scope:change
			}
			random = {
				chance = 50
				set_county_culture = culture:american
				set_county_faith = faith:protestant
			}
			set_de_jure_liege_title = title:d_oklahoma
		}
		title:c_mormylia = {
			change_title_holder = {
				holder = scope:new_governor
				change = scope:change
			}
			random = {
				chance = 50
				set_county_culture = culture:american
				set_county_faith = faith:protestant
			}
			set_de_jure_liege_title = title:d_oklahoma
		}
		title:c_oklahoma = {
			change_title_holder = {
				holder = scope:new_governor
				change = scope:change
			}
			random = {
				chance = 50
				set_county_culture = culture:american
				set_county_faith = faith:protestant
			}
			set_de_jure_liege_title = title:d_oklahoma
		}
		title:c_lefkithanatrea = {
			change_title_holder = {
				holder = scope:new_governor
				change = scope:change
			}
			random = {
				chance = 50
				set_county_culture = culture:american
				set_county_faith = faith:protestant
			}
			set_de_jure_liege_title = title:d_oklahoma
		}
		title:c_edehagthus = {
			change_title_holder = {
				holder = scope:new_governor
				change = scope:change
			}
			random = {
				chance = 50
				set_county_culture = culture:american
				set_county_faith = faith:protestant
			}
			set_de_jure_liege_title = title:d_oklahoma
		}
		title:c_argnicopetra = {
			change_title_holder = {
				holder = scope:new_governor
				change = scope:change
			}
			random = {
				chance = 50
				set_county_culture = culture:american
				set_county_faith = faith:protestant
			}
			set_de_jure_liege_title = title:d_oklahoma
		}
		title:c_cycebdos = {
			change_title_holder = {
				holder = scope:new_governor
				change = scope:change
			}
			random = {
				chance = 50
				set_county_culture = culture:american
				set_county_faith = faith:protestant
			}
			set_de_jure_liege_title = title:d_oklahoma
		}
		title:c_apolldidythus = {
			change_title_holder = {
				holder = scope:new_governor
				change = scope:change
			}
			random = {
				chance = 50
				set_county_culture = culture:american
				set_county_faith = faith:protestant
			}
			set_de_jure_liege_title = title:d_oklahoma
		}
		title:c_eubbhyrtoli = {
			change_title_holder = {
				holder = scope:new_governor
				change = scope:change
			}
			random = {
				chance = 50
				set_county_culture = culture:american
				set_county_faith = faith:protestant
			}
			set_de_jure_liege_title = title:d_oklahoma
		}
		title:c_nysantiium = {
			change_title_holder = {
				holder = scope:new_governor
				change = scope:change
			}
			random = {
				chance = 50
				set_county_culture = culture:american
				set_county_faith = faith:protestant
			}
			set_de_jure_liege_title = title:d_oklahoma
		}
		title:c_miselampllai = {
			change_title_holder = {
				holder = scope:new_governor
				change = scope:change
			}
			random = {
				chance = 50
				set_county_culture = culture:american
				set_county_faith = faith:protestant
			}
			set_de_jure_liege_title = title:d_oklahoma
		}
		title:c_leprhemeine = {
			change_title_holder = {
				holder = scope:new_governor
				change = scope:change
			}
			random = {
				chance = 50
				set_county_culture = culture:american
				set_county_faith = faith:protestant
			}
			set_de_jure_liege_title = title:d_oklahoma
		}
		title:c_mamagcum = {
			change_title_holder = {
				holder = scope:new_governor
				change = scope:change
			}
			random = {
				chance = 50
				set_county_culture = culture:american
				set_county_faith = faith:protestant
			}
			set_de_jure_liege_title = title:d_oklahoma
		}
		title:c_clazmaratatrea = {
			change_title_holder = {
				holder = scope:new_governor
				change = scope:change
			}
			random = {
				chance = 50
				set_county_culture = culture:american
				set_county_faith = faith:protestant
			}
			set_de_jure_liege_title = title:d_oklahoma
		}
		title:c_nysmallai = {
			change_title_holder = {
				holder = scope:new_governor
				change = scope:change
			}
			random = {
				chance = 50
				set_county_culture = culture:american
				set_county_faith = faith:protestant
			}
			set_de_jure_liege_title = title:d_oklahoma
		}
		title:d_oklahoma = {
			change_title_holder = {
				holder = scope:new_governor
				change = scope:change
			}
		}
		resolve_title_and_vassal_change = scope:change
}

update_slavery_modifiers_effect = {
	if = {
		limit = {
			has_variable = slavery_percent
			var:slavery_percent > 0
		}
		if = {
			limit = {
				var:slavery_percent < 0.1
			}
			add_county_modifier = negligible_slavery_modifier
		}
		else_if = {
			limit = {
				var:slavery_percent < 0.3
			}
			add_county_modifier = minority_slavery_modifier
		}
		else_if = {
			limit = {
				var:slavery_percent < 0.75
			}
			add_county_modifier = commonplace_slavery_modifier
		}
		else = {
			add_county_modifier = widespread_slavery_modifier
		}
	}
}

evaluate_vote_count_effect = {
	# Count up everything including the vassal's vote. For Jeffersonian system, save it into a separate set of variables.
	if = {
		limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:vote_system_jefferson } } }
		if = {
			limit = { has_variable = liberal_value }
			set_variable = { name = liberal_jeff value = var:liberal_value }
		}
		if = {
			limit = { has_variable = socialist_value }
			set_variable = { name = socialist_jeff value = var:socialist_value }
		}
		if = {
			limit = { has_variable = reactionary_value }
			set_variable = { name = reactionary_jeff value = var:reactionary_value }
		}
		if = {
			limit = { has_variable = fascist_value }
			set_variable = { name = fascist_jeff value = var:fascist_value }
		}
		if = {
			limit = { has_variable = conservative_value }
			set_variable = { name = conservative_jeff value = var:conservative_value }
		}
		if = {
			limit = { has_variable = communist_value }
			set_variable = { name = communist_jeff value = var:communist_value }
		}
		if = {
			limit = { has_variable = anarchist_value }
			set_variable = { name = anarchist_jeff value = var:anarchist_value }
		}
		if = {
			limit = { has_variable = independent_value }
			set_variable = { name = independent_jeff value = var:independent_value }
		}
	}
	else_if = {
		limit = {
			root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:vote_system_two_party } }
			tier = tier_county
		}
		if = {
			limit = { has_dominant_ideology_trigger = { VAR = var:liberal_value } }
			save_scope_value_as = { name = liberal_copy value = { value = scope:liberal_copy add = var:liberal_value } }
		}
		else_if = {
			limit = { has_dominant_ideology_trigger = { VAR = var:conservative_value } }
			save_scope_value_as = { name = conservative_copy value = { value = scope:conservative_copy add = var:conservative_value } }
		}
		else_if = {
			limit = { has_dominant_ideology_trigger = { VAR = var:socialist_value } }
			save_scope_value_as = { name = socialist_copy value = { value = scope:socialist_copy add = var:socialist_value } }
		}
		else_if = {
			limit = { has_dominant_ideology_trigger = { VAR = var:reactionary_value } }
			save_scope_value_as = { name = reactionary_copy value = { value = scope:reactionary_copy add = var:reactionary_value } }
		}
		else_if = {
			limit = { has_dominant_ideology_trigger = { VAR = var:fascist_value } }
			save_scope_value_as = { name = fascist_copy value = { value = scope:fascist_copy add = var:fascist_value } }
		}
		else_if = {
			limit = { has_dominant_ideology_trigger = { VAR = var:communist_value } }
			save_scope_value_as = { name = communist_copy value = { value = scope:communist_copy add = var:communist_value } }
		}
		else_if = {
			limit = { has_dominant_ideology_trigger = { VAR = var:anarchist_value } }
			save_scope_value_as = { name = anarchist_copy value = { value = scope:anarchist_copy add = var:anarchist_value } }
		}
		else_if = {
			limit = { has_variable = independent_value }
			save_scope_value_as = { name = independent_copy value = { value = scope:independent_copy add = var:independent_value } }
		}
	}
	else = {
		if = {
			limit = { has_variable = liberal_value }
			save_scope_value_as = { name = liberal_copy value = { value = scope:liberal_copy add = var:liberal_value } }
		}
		if = {
			limit = { has_variable = socialist_value }
			save_scope_value_as = { name = socialist_copy value = { value = scope:socialist_copy add = var:socialist_value } }
		}
		if = {
			limit = { has_variable = reactionary_value }
			save_scope_value_as = { name = reactionary_copy value = { value = scope:reactionary_copy add = var:reactionary_value } }
		}
		if = {
			limit = { has_variable = fascist_value }
			save_scope_value_as = { name = fascist_copy value = { value = scope:fascist_copy add = var:fascist_value } }
		}
		if = {
			limit = { has_variable = conservative_value }
			save_scope_value_as = { name = conservative_copy value = { value = scope:conservative_copy add = var:conservative_value } }
		}
		if = {
			limit = { has_variable = communist_value }
			save_scope_value_as = { name = communist_copy value = { value = scope:communist_copy add = var:communist_value } }
		}
		if = {
			limit = { has_variable = anarchist_value }
			save_scope_value_as = { name = anarchist_copy value = { value = scope:anarchist_copy add = var:anarchist_value } }
		}
		if = {
			limit = { has_variable = independent_value }
			save_scope_value_as = { name = independent_copy value = { value = scope:independent_copy add = var:independent_value } }
		}
	}
	
	# Calculate proportional thresholds if applicable
	if = {
		limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:vote_system_jefferson } } }
		set_variable = { name = jeff_factor value = 1 }
		while = {
			limit = {
				OR = {
					has_variable = liberal_jeff
					has_variable = socialist_jeff
					has_variable = reactionary_jeff
					has_variable = fascist_jeff
					has_variable = conservative_jeff
					has_variable = communist_jeff
					has_variable = anarchist_jeff
					has_variable = independent_jeff
				}
			}
			if = {
				limit = { has_dominant_ideology_suffix_trigger = { VAR = var:liberal_jeff SUFFIX = _jeff } }
				change_variable = { name = liberal_jeff divide = var:jeff_factor }
				save_scope_value_as = { name = liberal_copy value = { value = scope:liberal_copy add = var:liberal_jeff } }
				remove_variable = liberal_jeff
			}
			else_if = {
				limit = { has_dominant_ideology_suffix_trigger = { VAR = var:conservative_jeff SUFFIX = _jeff } }
				change_variable = { name = conservative_jeff divide = var:jeff_factor }
				save_scope_value_as = { name = conservative_copy value = { value = scope:conservative_copy add = var:conservative_jeff } }
				remove_variable = conservative_jeff
			}
			else_if = {
				limit = { has_dominant_ideology_suffix_trigger = { VAR = var:socialist_jeff SUFFIX = _jeff } }
				change_variable = { name = socialist_jeff divide = var:jeff_factor }
				save_scope_value_as = { name = socialist_copy value = { value = scope:socialist_copy add = var:socialist_jeff } }
				remove_variable = socialist_jeff
			}
			else_if = {
				limit = { has_dominant_ideology_suffix_trigger = { VAR = var:reactionary_jeff SUFFIX = _jeff } }
				change_variable = { name = reactionary_jeff divide = var:jeff_factor }
				save_scope_value_as = { name = reactionary_copy value = { value = scope:reactionary_copy add = var:reactionary_jeff } }
				remove_variable = reactionary_jeff
			}
			else_if = {
				limit = { has_dominant_ideology_suffix_trigger = { VAR = var:fascist_jeff SUFFIX = _jeff } }
				change_variable = { name = fascist_jeff divide = var:jeff_factor }
				save_scope_value_as = { name = fascist_copy value = { value = scope:fascist_copy add = var:fascist_jeff } }
				remove_variable = fascist_jeff
			}
			else_if = {
				limit = { has_dominant_ideology_suffix_trigger = { VAR = var:communist_jeff SUFFIX = _jeff } }
				change_variable = { name = communist_jeff divide = var:jeff_factor }
				save_scope_value_as = { name = communist_copy value = { value = scope:communist_copy add = var:communist_jeff } }
				remove_variable = communist_jeff
			}
			else_if = {
				limit = { has_dominant_ideology_suffix_trigger = { VAR = var:anarchist_jeff SUFFIX = _jeff } }
				change_variable = { name = anarchist_jeff divide = var:jeff_factor }
				save_scope_value_as = { name = anarchist_copy value = { value = scope:anarchist_copy add = var:anarchist_jeff } }
				remove_variable = anarchist_jeff
			}
			else_if = {
				limit = { has_variable = independent_jeff }
				change_variable = { name = independent_jeff divide = var:jeff_factor }
				save_scope_value_as = { name = independent_copy value = { value = scope:independent_copy add = var:independent_jeff } }
				remove_variable = independent_jeff
			}
			change_variable = { name = jeff_factor add = 1 }
		}
		remove_variable = jeff_factor
	}
}

evaluate_vote_apportionment_effect = {
	set_variable = { name = liberal_value value = scope:liberal_copy }	var:liberal_value = { add_to_list = appcalc_values }
	set_variable = { name = socialist_value value = scope:socialist_copy }	var:socialist_value = { add_to_list = appcalc_values }
	set_variable = { name = reactionary_value value = scope:reactionary_copy }	var:reactionary_value = { add_to_list = appcalc_values }
	set_variable = { name = fascist_value value = scope:fascist_copy }	var:fascist_value = { add_to_list = appcalc_values }
	set_variable = { name = conservative_value value = scope:conservative_copy }	var:conservative_value = { add_to_list = appcalc_values }
	set_variable = { name = communist_value value = scope:communist_copy }	var:communist_value = { add_to_list = appcalc_values }
	set_variable = { name = anarchist_value value = scope:anarchist_copy }	var:anarchist_value = { add_to_list = appcalc_values }
	set_variable = { name = independent_value value = scope:independent_copy }	var:independent_value = { add_to_list = appcalc_values }
	set_variable = {
		name = total_value
		value = {
			value = 0
			add = var:liberal_value
			add = var:socialist_value
			add = var:reactionary_value
			add = var:fascist_value
			add = var:conservative_value
			add = var:communist_value
			add = var:anarchist_value
			add = var:independent_value
		}
	}
	if = {
		limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_mixed } } }
		save_scope_value_as = { name = liberal_uppercopy value = 0 }
		save_scope_value_as = { name = socialist_uppercopy value = 0 }
		save_scope_value_as = { name = reactionary_uppercopy value = 0 }
		save_scope_value_as = { name = fascist_uppercopy value = 0 }
		save_scope_value_as = { name = conservative_uppercopy value = 0 }
		save_scope_value_as = { name = communist_uppercopy value = 0 }
		save_scope_value_as = { name = anarchist_uppercopy value = 0 }
		save_scope_value_as = { name = independent_uppercopy value = 0 }
	}

	if = {
		limit = { var:total_value > 0 }
		if = {
			limit = { has_dominant_ideology_trigger = { VAR = var:liberal_value } }
			if = {
				limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_equal } } }
				root.primary_title = { change_variable = { name = liberal_pievalue add = 100 } change_variable = { name = liberal_absvalue add = 100 } }
			}
			if = {
				limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_mixed } } }
				save_scope_value_as = { name = liberal_uppercopy value = { value = scope:liberal_uppercopy add = 100 } }
			}
			var:liberal_value = { remove_from_list = appcalc_values }
		}
		else_if = {
			limit = { has_dominant_ideology_trigger = { VAR = var:conservative_value } }
			if = {
				limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_equal } } }
				root.primary_title = { change_variable = { name = conservative_pievalue add = 100 } change_variable = { name = conservative_absvalue add = 100 } }
			}
			if = {
				limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_mixed } } }
				save_scope_value_as = { name = conservative_uppercopy value = { value = scope:conservative_uppercopy add = 100 } }
			}
			var:conservative_value = { remove_from_list = appcalc_values }
		}
		else_if = {
			limit = { has_dominant_ideology_trigger = { VAR = var:socialist_value } }
			if = {
				limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_equal } } }
				root.primary_title = { change_variable = { name = socialist_pievalue add = 100 } change_variable = { name = socialist_absvalue add = 100 } }
			}
			if = {
				limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_mixed } } }
				save_scope_value_as = { name = socialist_uppercopy value = { value = scope:socialist_uppercopy add = 100 } }
			}
			var:socialist_value = { remove_from_list = appcalc_values }
		}
		else_if = {
			limit = { has_dominant_ideology_trigger = { VAR = var:reactionary_value } }
			if = {
				limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_equal } } }
				root.primary_title = { change_variable = { name = reactionary_pievalue add = 100 } change_variable = { name = reactionary_absvalue add = 100 } }
			}
			if = {
				limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_mixed } } }
				save_scope_value_as = { name = reactionary_uppercopy value = { value = scope:reactionary_uppercopy add = 100 } }
			}
			var:reactionary_value = { remove_from_list = appcalc_values }
		}
		else_if = {
			limit = { has_dominant_ideology_trigger = { VAR = var:fascist_value } }
			if = {
				limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_equal } } }
				root.primary_title = { change_variable = { name = fascist_pievalue add = 100 } change_variable = { name = fascist_absvalue add = 100 } }
			}
			if = {
				limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_mixed } } }
				save_scope_value_as = { name = fascist_uppercopy value = { value = scope:fascist_uppercopy add = 100 } }
			}
			var:fascist_value = { remove_from_list = appcalc_values }
		}
		else_if = {
			limit = { has_dominant_ideology_trigger = { VAR = var:communist_value } }
			if = {
				limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_equal } } }
				root.primary_title = { change_variable = { name = communist_pievalue add = 100 } change_variable = { name = communist_absvalue add = 100 } }
			}
			if = {
				limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_mixed } } }
				save_scope_value_as = { name = communist_uppercopy value = { value = scope:communist_uppercopy add = 100 } }
			}
			var:communist_value = { remove_from_list = appcalc_values }
		}
		else_if = {
			limit = { has_dominant_ideology_trigger = { VAR = var:anarchist_value } }
			if = {
				limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_equal } } }
				root.primary_title = { change_variable = { name = anarchist_pievalue add = 100 } change_variable = { name = anarchist_absvalue add = 100 } }
			}
			if = {
				limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_mixed } } }
				save_scope_value_as = { name = anarchist_uppercopy value = { value = scope:anarchist_uppercopy add = 100 } }
			}
			var:anarchist_value = { remove_from_list = appcalc_values }
		}
		else_if = {
			limit = { has_variable = independent_value }
			if = {
				limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_equal } } }
				root.primary_title = { change_variable = { name = independent_pievalue add = 100 } change_variable = { name = independent_absvalue add = 100 } }
			}
			if = {
				limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_mixed } } }
				save_scope_value_as = { name = independent_uppercopy value = { value = scope:independent_uppercopy add = 100 } }
			}
			var:independent_value = { remove_from_list = appcalc_values }
		}

		set_variable = { name = liberal_prop value = { value = var:liberal_value divide = var:total_value } }
		set_variable = { name = socialist_prop value = { value = var:socialist_value divide = var:total_value } }
		set_variable = { name = reactionary_prop value = { value = var:reactionary_value divide = var:total_value } }
		set_variable = { name = fascist_prop value = { value = var:fascist_value divide = var:total_value } }
		set_variable = { name = conservative_prop value = { value = var:conservative_value divide = var:total_value } }
		set_variable = { name = communist_prop value = { value = var:communist_value divide = var:total_value } }
		set_variable = { name = anarchist_prop value = { value = var:anarchist_value divide = var:total_value } }
		set_variable = { name = independent_prop value = { value = var:independent_value divide = var:total_value } }

		save_scope_value_as = { name = total_dev value = 0 }
		every_sub_realm_county = {
			if = {
				limit = { exists = var:slavery_percent }
				save_scope_value_as = { name = county_slave_dev value = { value = development_level multiply = var:slavery_percent multiply = 0.6 } }
				save_scope_value_as = { name = county_free_dev value = { value = development_level multiply = { value = 1 subtract = var:slavery_percent } } }
				save_scope_value_as = { name = total_dev value = { value = scope:total_dev add = scope:county_free_dev add = scope:county_slave_dev } }
			}
			else = {
				save_scope_value_as = { name = total_dev value = { value = scope:total_dev add = development_level } }
			}
		}
		if = {	# placeholder dev until I can fill out history
			limit = { scope:total_dev = 0 }
			save_scope_value_as = { name = total_dev value = 1 }
		}
		save_scope_value_as = { name = liberal_copy value = { value = var:liberal_prop multiply = scope:total_dev } }
		save_scope_value_as = { name = socialist_copy value = { value = var:socialist_prop multiply = scope:total_dev } }
		save_scope_value_as = { name = reactionary_copy value = { value = var:reactionary_prop multiply = scope:total_dev } }
		save_scope_value_as = { name = conservative_copy value = { value = var:conservative_prop multiply = scope:total_dev } }
		save_scope_value_as = { name = fascist_copy value = { value = var:fascist_prop multiply = scope:total_dev } }
		save_scope_value_as = { name = communist_copy value = { value = var:communist_prop multiply = scope:total_dev } }
		save_scope_value_as = { name = anarchist_copy value = { value = var:anarchist_prop multiply = scope:total_dev } }
		save_scope_value_as = { name = independent_copy value = { value = var:independent_prop multiply = scope:total_dev } }

		# save the above values separately to evaluate gridlock
		if = {
			limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_mixed } } }
			save_scope_value_as = { name = liberal_lowercopy value = scope:liberal_copy }
			save_scope_value_as = { name = socialist_lowercopy value = scope:socialist_copy }
			save_scope_value_as = { name = reactionary_lowercopy value = scope:reactionary_copy }
			save_scope_value_as = { name = conservative_lowercopy value = scope:conservative_copy }
			save_scope_value_as = { name = fascist_lowercopy value = scope:fascist_copy }
			save_scope_value_as = { name = communist_lowercopy value = scope:communist_copy }
			save_scope_value_as = { name = anarchist_lowercopy value = scope:anarchist_copy }
			save_scope_value_as = { name = independent_lowercopy value = scope:independent_copy }
		}

		if = {
			limit = {
				OR = {
					AND = {
						root = { can_pass_sovereign_power_laws_trigger = no }
						var:liberal_prop > 0.33
					}
					AND = {
						root = { can_pass_sovereign_power_laws_trigger = yes }
						primary_title = { has_variable = liberal_value }
					}
				}
				var:liberal_value = { is_in_list = appcalc_values }
			}
			if = {
				limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_equal } } }
				root.primary_title = { change_variable = { name = liberal_pievalue add = 100 } change_variable = { name = liberal_absvalue add = 100 } }
			}
			else_if = {
				limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_mixed } } }
				save_scope_value_as = { name = liberal_copy value = { value = scope:liberal_copy multiply = 1.3 } }
				save_scope_value_as = { name = liberal_uppercopy value = { value = scope:liberal_uppercopy add = 100 } }
			}
		}
		else_if = {
			limit = {
				OR = {
					AND = {
						root = { can_pass_sovereign_power_laws_trigger = no }
						var:conservative_prop > 0.33
					}
					AND = {
						root = { can_pass_sovereign_power_laws_trigger = yes }
						primary_title = { has_variable = conservative_value }
					}
				}
				var:conservative_value = { is_in_list = appcalc_values }
			}
			if = {
				limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_equal } } }
				root.primary_title = { change_variable = { name = conservative_pievalue add = 100 } change_variable = { name = conservative_absvalue add = 100 } }
			}
			else_if = {
				limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_mixed } } }
				save_scope_value_as = { name = conservative_copy value = { value = scope:conservative_copy multiply = 1.3 } }
				save_scope_value_as = { name = conservative_uppercopy value = { value = scope:conservative_uppercopy add = 100 } }
			}
		}
		else_if = {
			limit = {
				OR = {
					AND = {
						root = { can_pass_sovereign_power_laws_trigger = no }
						var:socialist_prop > 0.33
					}
					AND = {
						root = { can_pass_sovereign_power_laws_trigger = yes }
						primary_title = { has_variable = socialist_value }
					}
				}
				var:socialist_value = { is_in_list = appcalc_values }
			}
			if = {
				limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_equal } } }
				root.primary_title = { change_variable = { name = socialist_pievalue add = 100 } change_variable = { name = socialist_absvalue add = 100 } }
			}
			else_if = {
				limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_mixed } } }
				save_scope_value_as = { name = socialist_copy value = { value = scope:socialist_copy multiply = 1.3 } }
				save_scope_value_as = { name = socialist_uppercopy value = { value = scope:socialist_uppercopy add = 100 } }
			}
		}
		else_if = {
			limit = {
				OR = {
					AND = {
						root = { can_pass_sovereign_power_laws_trigger = no }
						var:reactionary_prop > 0.33
					}
					AND = {
						root = { can_pass_sovereign_power_laws_trigger = yes }
						primary_title = { has_variable = reactionary_value }
					}
				}
				var:reactionary_value = { is_in_list = appcalc_values }
			}
			if = {
				limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_equal } } }
				root.primary_title = { change_variable = { name = reactionary_pievalue add = 100 } change_variable = { name = reactionary_absvalue add = 100 } }
			}
			else_if = {
				limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_mixed } } }
				save_scope_value_as = { name = reactionary_copy value = { value = scope:reactionary_copy multiply = 1.3 } }
				save_scope_value_as = { name = reactionary_uppercopy value = { value = scope:reactionary_uppercopy add = 100 } }
			}
		}
		else_if = {
			limit = {
				OR = {
					AND = {
						root = { can_pass_sovereign_power_laws_trigger = no }
						var:fascist_prop > 0.33
					}
					AND = {
						root = { can_pass_sovereign_power_laws_trigger = yes }
						primary_title = { has_variable = fascist_value }
					}
				}
				var:fascist_value = { is_in_list = appcalc_values }
			}
			if = {
				limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_equal } } }
				root.primary_title = { change_variable = { name = fascist_pievalue add = 100 } change_variable = { name = fascist_absvalue add = 100 } }
			}
			else_if = {
				limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_mixed } } }
				save_scope_value_as = { name = fascist_copy value = { value = scope:fascist_copy multiply = 1.3 } }
				save_scope_value_as = { name = fascist_uppercopy value = { value = scope:fascist_uppercopy add = 100 } }
			}
		}
		else_if = {
			limit = {
				OR = {
					AND = {
						root = { can_pass_sovereign_power_laws_trigger = no }
						var:communist_prop > 0.33
					}
					AND = {
						root = { can_pass_sovereign_power_laws_trigger = yes }
						primary_title = { has_variable = communist_value }
					}
				}
				var:communist_value = { is_in_list = appcalc_values }
			}
			if = {
				limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_equal } } }
				root.primary_title = { change_variable = { name = communist_pievalue add = 100 } change_variable = { name = communist_absvalue add = 100 } }
			}
			else_if = {
				limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_mixed } } }
				save_scope_value_as = { name = communist_copy value = { value = scope:communist_copy multiply = 1.3 } }
				save_scope_value_as = { name = communist_uppercopy value = { value = scope:communist_uppercopy add = 100 } }
			}
		}
		else_if = {
			limit = {
				OR = {
					AND = {
						root = { can_pass_sovereign_power_laws_trigger = no }
						var:anarchist_prop > 0.33
					}
					AND = {
						root = { can_pass_sovereign_power_laws_trigger = yes }
						primary_title = { has_variable = anarchist_value }
					}
				}
				var:anarchist_value = { is_in_list = appcalc_values }
			}
			if = {
				limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_equal } } }
				root.primary_title = { change_variable = { name = anarchist_pievalue add = 100 } change_variable = { name = anarchist_absvalue add = 100 } }
			}
			else_if = {
				limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_mixed } } }
				save_scope_value_as = { name = anarchist_copy value = { value = scope:anarchist_copy multiply = 1.3 } }
				save_scope_value_as = { name = anarchist_uppercopy value = { value = scope:anarchist_uppercopy add = 100 } }
			}
		}
		else_if = {
			limit = {
				OR = {
					AND = {
						root = { can_pass_sovereign_power_laws_trigger = no }
						var:independent_prop > 0.33
					}
					AND = {
						root = { can_pass_sovereign_power_laws_trigger = yes }
						primary_title = { has_variable = independent_value }
					}
				}
				var:independent_value = { is_in_list = appcalc_values }
			}
			if = {
				limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_equal } } }
				root.primary_title = { change_variable = { name = independent_pievalue add = 100 } change_variable = { name = independent_absvalue add = 100 } }
			}
			else_if = {
				limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_mixed } } }
				save_scope_value_as = { name = independent_copy value = { value = scope:independent_copy multiply = 1.3 } }
				save_scope_value_as = { name = independent_uppercopy value = { value = scope:independent_uppercopy add = 100 } }
			}
		}
		else = {
			if = {
				limit = { has_dominant_ideology_trigger = { VAR = var:liberal_value } }
				if = {
					limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_equal } } }
					root.primary_title = { change_variable = { name = liberal_pievalue add = 100 } change_variable = { name = liberal_absvalue add = 100 } }
				}
				if = {
					limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_mixed } } }
					save_scope_value_as = { name = liberal_uppercopy value = { value = scope:liberal_uppercopy add = 100 } }
				}
			}
			else_if = {
				limit = { has_dominant_ideology_trigger = { VAR = var:conservative_value } }
				if = {
					limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_equal } } }
					root.primary_title = { change_variable = { name = conservative_pievalue add = 100 } change_variable = { name = conservative_absvalue add = 100 } }
				}
				if = {
					limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_mixed } } }
					save_scope_value_as = { name = conservative_uppercopy value = { value = scope:conservative_uppercopy add = 100 } }
				}
			}
			else_if = {
				limit = { has_dominant_ideology_trigger = { VAR = var:socialist_value } }
				if = {
					limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_equal } } }
					root.primary_title = { change_variable = { name = socialist_pievalue add = 100 } change_variable = { name = socialist_absvalue add = 100 } }
				}
				if = {
					limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_mixed } } }
					save_scope_value_as = { name = socialist_uppercopy value = { value = scope:socialist_uppercopy add = 100 } }
				}
			}
			else_if = {
				limit = { has_dominant_ideology_trigger = { VAR = var:reactionary_value } }
				if = {
					limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_equal } } }
					root.primary_title = { change_variable = { name = reactionary_pievalue add = 100 } change_variable = { name = reactionary_absvalue add = 100 } }
				}
				if = {
					limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_mixed } } }
					save_scope_value_as = { name = reactionary_uppercopy value = { value = scope:reactionary_uppercopy add = 100 } }
				}
			}
			else_if = {
				limit = { has_dominant_ideology_trigger = { VAR = var:fascist_value } }
				if = {
					limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_equal } } }
					root.primary_title = { change_variable = { name = fascist_pievalue add = 100 } change_variable = { name = fascist_absvalue add = 100 } }
				}
				if = {
					limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_mixed } } }
					save_scope_value_as = { name = fascist_uppercopy value = { value = scope:fascist_uppercopy add = 100 } }
				}
			}
			else_if = {
				limit = { has_dominant_ideology_trigger = { VAR = var:communist_value } }
				if = {
					limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_equal } } }
					root.primary_title = { change_variable = { name = communist_pievalue add = 100 } change_variable = { name = communist_absvalue add = 100 } }
				}
				if = {
					limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_mixed } } }
					save_scope_value_as = { name = communist_uppercopy value = { value = scope:communist_uppercopy add = 100 } }
				}
			}
			else_if = {
				limit = { has_dominant_ideology_trigger = { VAR = var:anarchist_value } }
				if = {
					limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_equal } } }
					root.primary_title = { change_variable = { name = anarchist_pievalue add = 100 } change_variable = { name = anarchist_absvalue add = 100 } }
				}
				if = {
					limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_mixed } } }
					save_scope_value_as = { name = anarchist_uppercopy value = { value = scope:anarchist_uppercopy add = 100 } }
				}
			}
			else_if = {
				limit = { has_variable = independent_value }
				if = {
					limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_equal } } }
					root.primary_title = { change_variable = { name = independent_pievalue add = 100 } change_variable = { name = independent_absvalue add = 100 } }
				}
				if = {
					limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_mixed } } }
					save_scope_value_as = { name = independent_uppercopy value = { value = scope:independent_uppercopy add = 100 } }
				}
			}
		}

		if = {
			limit = { root.primary_title = { is_target_in_variable_list = { name = enacted_laws_list target = flag:apportionment_mixed } } }
			# evaluate conditions for gridlock
			#		first save lower house values into var:liberal_value, etc.
			save_scope_value_as = { name = liberal_lower value = { value = scope:liberal_lower add = scope:liberal_lowercopy } }
			save_scope_value_as = { name = socialist_lower value = { value = scope:socialist_lower add = scope:socialist_lowercopy } }
			save_scope_value_as = { name = reactionary_lower value = { value = scope:reactionary_lower add = scope:reactionary_lowercopy } }
			save_scope_value_as = { name = fascist_lower value = { value = scope:fascist_lower add = scope:fascist_lowercopy } }
			save_scope_value_as = { name = conservative_lower value = { value = scope:conservative_lower add = scope:conservative_lowercopy } }
			save_scope_value_as = { name = communist_lower value = { value = scope:communist_lower add = scope:communist_lowercopy } }
			save_scope_value_as = { name = anarchist_lower value = { value = scope:anarchist_lower add = scope:anarchist_lowercopy } }
			save_scope_value_as = { name = independent_lower value = { value = scope:independent_lower add = scope:independent_lowercopy } }

			#		next save upper house values into var:liberal_value, etc.
			save_scope_value_as = { name = liberal_upper value = { value = scope:liberal_upper add = scope:liberal_uppercopy } }
			save_scope_value_as = { name = socialist_upper value = { value = scope:socialist_upper add = scope:socialist_uppercopy } }
			save_scope_value_as = { name = reactionary_upper value = { value = scope:reactionary_upper add = scope:reactionary_uppercopy } }
			save_scope_value_as = { name = fascist_upper value = { value = scope:fascist_upper add = scope:fascist_uppercopy } }
			save_scope_value_as = { name = conservative_upper value = { value = scope:conservative_upper add = scope:conservative_uppercopy } }
			save_scope_value_as = { name = communist_upper value = { value = scope:communist_upper add = scope:communist_uppercopy } }
			save_scope_value_as = { name = anarchist_upper value = { value = scope:anarchist_upper add = scope:anarchist_uppercopy } }
			save_scope_value_as = { name = independent_upper value = { value = scope:independent_upper add = scope:independent_uppercopy } }
		}
	}
	remove_variable = liberal_value
	remove_variable = socialist_value
	remove_variable = reactionary_value
	remove_variable = fascist_value
	remove_variable = conservative_value
	remove_variable = communist_value
	remove_variable = anarchist_value
	remove_variable = independent_value
	remove_variable = total_value
	remove_variable = liberal_prop
	remove_variable = socialist_prop
	remove_variable = reactionary_prop
	remove_variable = fascist_prop
	remove_variable = conservative_prop
	remove_variable = communist_prop
	remove_variable = anarchist_prop
	remove_variable = independent_prop
}

generate_party_acceptance_values = {
	if = {
		limit = { holder.primary_title = { exists = var:liberal_absvalue var:liberal_absvalue > 0 } }
		set_variable = { name = liberal_acceptance value = 0 }
		party_acceptance_modifier_effect = {
			VAR = liberal_acceptance
			LIST = liberal_issues
			LF = $LAISSEZ_FAIRE$
			RE = $REG_ECONOMY$
			SL = $SOCIAL_LIBERTY$
			SH = $SOCIAL_HIERARCHY$
			PS = $PRO_SLAVERY$
		}
		if = {
			limit = { exists = var:liberal_acceptance var:liberal_acceptance = 0 }
			change_variable = { name = liberal_acceptance add = $UNIVERSAL_ACCEPTANCE_VALUE$ }
		}
	}
	if = {
		limit = { holder.primary_title = { exists = var:socialist_absvalue var:socialist_absvalue > 0 } }
		set_variable = { name = socialist_acceptance value = 0 }
		party_acceptance_modifier_effect = {
			VAR = socialist_acceptance
			LIST = socialist_issues
			LF = $LAISSEZ_FAIRE$
			RE = $REG_ECONOMY$
			SL = $SOCIAL_LIBERTY$
			SH = $SOCIAL_HIERARCHY$
			PS = $PRO_SLAVERY$
		}
		if = {
			limit = { exists = var:socialist_acceptance var:socialist_acceptance = 0 }
			change_variable = { name = socialist_acceptance add = $UNIVERSAL_ACCEPTANCE_VALUE$ }
		}
	}
	if = {
		limit = { holder.primary_title = { exists = var:reactionary_absvalue var:reactionary_absvalue > 0 } }
		set_variable = { name = reactionary_acceptance value = 0 }
		party_acceptance_modifier_effect = {
			VAR = reactionary_acceptance
			LIST = reactionary_issues
			LF = $LAISSEZ_FAIRE$
			RE = $REG_ECONOMY$
			SL = $SOCIAL_LIBERTY$
			SH = $SOCIAL_HIERARCHY$
			PS = $PRO_SLAVERY$
		}
		if = {
			limit = { exists = var:reactionary_acceptance var:reactionary_acceptance = 0 }
			change_variable = { name = reactionary_acceptance add = $UNIVERSAL_ACCEPTANCE_VALUE$ }
		}
	}
	if = {
		limit = { holder.primary_title = { exists = var:fascist_absvalue var:fascist_absvalue > 0 } }
		set_variable = { name = fascist_acceptance value = 0 }
		party_acceptance_modifier_effect = {
			VAR = fascist_acceptance
			LIST = fascist_issues
			LF = $LAISSEZ_FAIRE$
			RE = $REG_ECONOMY$
			SL = $SOCIAL_LIBERTY$
			SH = $SOCIAL_HIERARCHY$
			PS = $PRO_SLAVERY$
		}
		if = {
			limit = { exists = var:fascist_acceptance var:fascist_acceptance = 0 }
			change_variable = { name = fascist_acceptance add = $UNIVERSAL_ACCEPTANCE_VALUE$ }
		}
	}
	if = {
		limit = { holder.primary_title = { exists = var:conservative_absvalue var:conservative_absvalue > 0 } }
		set_variable = { name = conservative_acceptance value = 0 }
		party_acceptance_modifier_effect = {
			VAR = conservative_acceptance
			LIST = conservative_issues
			LF = $LAISSEZ_FAIRE$
			RE = $REG_ECONOMY$
			SL = $SOCIAL_LIBERTY$
			SH = $SOCIAL_HIERARCHY$
			PS = $PRO_SLAVERY$
		}
		if = {
			limit = { exists = var:conservative_acceptance var:conservative_acceptance = 0 }
			change_variable = { name = conservative_acceptance add = $UNIVERSAL_ACCEPTANCE_VALUE$ }
		}
	}
	if = {
		limit = { holder.primary_title = { exists = var:communist_absvalue var:communist_absvalue > 0 } }
		set_variable = { name = communist_acceptance value = 0 }
		party_acceptance_modifier_effect = {
			VAR = communist_acceptance
			LIST = communist_issues
			LF = $LAISSEZ_FAIRE$
			RE = $REG_ECONOMY$
			SL = $SOCIAL_LIBERTY$
			SH = $SOCIAL_HIERARCHY$
			PS = $PRO_SLAVERY$
		}
		if = {
			limit = { exists = var:communist_acceptance var:communist_acceptance = 0 }
			change_variable = { name = communist_acceptance add = $UNIVERSAL_ACCEPTANCE_VALUE$ }
		}
	}
	if = {
		limit = { holder.primary_title = { exists = var:anarchist_absvalue var:anarchist_absvalue > 0 } }
		set_variable = { name = anarchist_acceptance value = 0 }
		party_acceptance_modifier_effect = {
			VAR = anarchist_acceptance
			LIST = anarchist_issues
			LF = $LAISSEZ_FAIRE$
			RE = $REG_ECONOMY$
			SL = $SOCIAL_LIBERTY$
			SH = $SOCIAL_HIERARCHY$
			PS = $PRO_SLAVERY$
		}
		if = {
			limit = { exists = var:anarchist_acceptance var:anarchist_acceptance = 0 }
			change_variable = { name = anarchist_acceptance add = $UNIVERSAL_ACCEPTANCE_VALUE$ }
		}
	}
	if = {
		limit = { holder.primary_title = { exists = var:independent_absvalue var:independent_absvalue > 0 } }
		set_variable = {
			name = independent_acceptance
			value = 0
		}
	}
}

party_acceptance_modifier_effect = {
	if = {
		limit = { holder.primary_title = { is_target_in_variable_list = { name = $LIST$ target = flag:laissez_faire } } }
		change_variable = { name = $VAR$ add = $LF$ }
	}
	if = {
		limit = { holder.primary_title = { is_target_in_variable_list = { name = $LIST$ target = flag:regulated_economy } } }
		change_variable = { name = $VAR$ add = $RE$ }
	}
	if = {
		limit = { holder.primary_title = { is_target_in_variable_list = { name = $LIST$ target = flag:social_liberty } } }
		change_variable = { name = $VAR$ add = $SL$ }
	}
	if = {
		limit = { holder.primary_title = { is_target_in_variable_list = { name = $LIST$ target = flag:social_hierarchy } } }
		change_variable = { name = $VAR$ add = $SH$ }
	}
	if = {
		limit = { holder.primary_title = { is_target_in_variable_list = { name = $LIST$ target = flag:pro_slavery } } }
		change_variable = { name = $VAR$ add = $PS$ }
	}
}

modify_party_acceptance_values = {
	if = {
		limit = { exists = var:liberal_absvalue has_dominant_ideology_suffix_trigger = { VAR = var:liberal_absvalue SUFFIX = _absvalue } }
		change_variable = { name = liberal_acceptance add = $PARTY_DOMINANT_ACCEPTANCE$ }
	}
	if = {
		limit = { exists = var:socialist_absvalue has_dominant_ideology_suffix_trigger = { VAR = var:socialist_absvalue SUFFIX = _absvalue } }
		change_variable = { name = socialist_acceptance add = $PARTY_DOMINANT_ACCEPTANCE$ }
	}
	if = {
		limit = { exists = var:reactionary_absvalue has_dominant_ideology_suffix_trigger = { VAR = var:reactionary_absvalue SUFFIX = _absvalue } }
		change_variable = { name = reactionary_acceptance add = $PARTY_DOMINANT_ACCEPTANCE$ }
	}
	if = {
		limit = { exists = var:fascist_absvalue has_dominant_ideology_suffix_trigger = { VAR = var:fascist_absvalue SUFFIX = _absvalue } }
		change_variable = { name = fascist_acceptance add = $PARTY_DOMINANT_ACCEPTANCE$ }
	}
	if = {
		limit = { exists = var:conservative_absvalue has_dominant_ideology_suffix_trigger = { VAR = var:conservative_absvalue SUFFIX = _absvalue } }
		change_variable = { name = conservative_acceptance add = $PARTY_DOMINANT_ACCEPTANCE$ }
	}
	if = {
		limit = { exists = var:communist_absvalue has_dominant_ideology_suffix_trigger = { VAR = var:communist_absvalue SUFFIX = _absvalue } }
		change_variable = { name = communist_acceptance add = $PARTY_DOMINANT_ACCEPTANCE$ }
	}
	if = {
		limit = { exists = var:anarchist_absvalue has_dominant_ideology_suffix_trigger = { VAR = var:anarchist_absvalue SUFFIX = _absvalue } }
		change_variable = { name = anarchist_acceptance add = $PARTY_DOMINANT_ACCEPTANCE$ }
	}
}

clear_leg_debate_variables_effect = {
	clear_domestic_leg_variables_effect = yes
	clear_foreign_leg_variables_effect = yes
}

clear_domestic_leg_variables_effect = {
	remove_variable = debating_law
	remove_variable = admitting_state
	remove_variable = liberal_acceptance
	remove_variable = socialist_acceptance
	remove_variable = reactionary_acceptance
	remove_variable = fascist_acceptance
	remove_variable = conservative_acceptance
	remove_variable = communist_acceptance
	remove_variable = anarchist_acceptance
	remove_variable = independent_acceptance
	remove_variable = liberal_rejectance
	remove_variable = socialist_rejectance
	remove_variable = reactionary_rejectance
	remove_variable = fascist_rejectance
	remove_variable = conservative_rejectance
	remove_variable = communist_rejectance
	remove_variable = anarchist_rejectance
	remove_variable = independent_rejectance
	remove_variable = liberal_yay
	remove_variable = socialist_yay
	remove_variable = reactionary_yay
	remove_variable = fascist_yay
	remove_variable = conservative_yay
	remove_variable = communist_yay
	remove_variable = anarchist_yay
	remove_variable = independent_yay
	remove_variable = liberal_nay
	remove_variable = socialist_nay
	remove_variable = reactionary_nay
	remove_variable = fascist_nay
	remove_variable = conservative_nay
	remove_variable = communist_nay
	remove_variable = anarchist_nay
	remove_variable = independent_nay
}

clear_foreign_leg_variables_effect = {
	remove_variable = debating_foreign
	remove_variable = proposed_war_target
}

remove_debating_law_category = {
	if = {
		limit = {
			OR = {
				var:debating_law = flag:four_year_term
				var:debating_law = flag:five_year_term
				var:debating_law = flag:six_year_term
				var:debating_law = flag:seven_year_term
				var:debating_law = flag:life_title_term
			}
		}
		clear_term_limit_reforms = yes
	}
	if = {
		limit = {
			OR = {
				var:debating_law = flag:sovereign_semi_constitutional
				var:debating_law = flag:sovereign_constitutional
			}
		}
		remove_list_variable = { name = enacted_laws_list target = flag:sovereign_semi_constitutional }
		remove_list_variable = { name = enacted_laws_list target = flag:sovereign_constitutional }
	}
	if = {
		limit = {
			OR = {
				var:debating_law = flag:eligibility_default
				var:debating_law = flag:eligibility_one_party
			}
		}
		remove_list_variable = { name = enacted_laws_list target = flag:eligibility_default }
		remove_list_variable = { name = enacted_laws_list target = flag:eligibility_one_party }
	}
	if = {
		limit = {
			OR = {
				var:debating_law = flag:eligibility_state
				var:debating_law = flag:eligibility_de_jure
				var:debating_law = flag:eligibility_de_facto
			}
		}
		remove_list_variable = { name = enacted_laws_list target = flag:eligibility_state }
		remove_list_variable = { name = enacted_laws_list target = flag:eligibility_de_jure }
		remove_list_variable = { name = enacted_laws_list target = flag:eligibility_de_facto }
	}
	if = {
		limit = {
			OR = {
				var:debating_law = flag:apportionment_landed
				var:debating_law = flag:apportionment_equal
				var:debating_law = flag:apportionment_mixed
				var:debating_law = flag:apportionment_population
			}
		}
		remove_list_variable = { name = enacted_laws_list target = flag:apportionment_landed }
		remove_list_variable = { name = enacted_laws_list target = flag:apportionment_equal }
		remove_list_variable = { name = enacted_laws_list target = flag:apportionment_mixed }
		remove_list_variable = { name = enacted_laws_list target = flag:apportionment_population }
	}
	if = {
		limit = {
			OR = {
				var:debating_law = flag:vote_franchise_landed
				var:debating_law = flag:vote_franchise_wealth
				var:debating_law = flag:vote_franchise_universal_manhood
				var:debating_law = flag:vote_franchise_universal
			}
		}
		remove_list_variable = { name = enacted_laws_list target = flag:vote_franchise_landed }
		remove_list_variable = { name = enacted_laws_list target = flag:vote_franchise_wealth }
		remove_list_variable = { name = enacted_laws_list target = flag:vote_franchise_universal_manhood }
		remove_list_variable = { name = enacted_laws_list target = flag:vote_franchise_universal }
	}
	if = {
		limit = {
			OR = {
				var:debating_law = flag:vote_system_two_party
				var:debating_law = flag:vote_system_jefferson
				var:debating_law = flag:vote_system_proportional
			}
		}
		remove_list_variable = { name = enacted_laws_list target = flag:vote_system_two_party }
		remove_list_variable = { name = enacted_laws_list target = flag:vote_system_jefferson }
		remove_list_variable = { name = enacted_laws_list target = flag:vote_system_proportional }
	}
	if = {
		limit = {
			OR = {
				var:debating_law = flag:leg_two_year_term
				var:debating_law = flag:leg_three_year_term
				var:debating_law = flag:leg_four_year_term
				var:debating_law = flag:leg_five_year_term
				var:debating_law = flag:leg_six_year_term
				var:debating_law = flag:leg_life_title_term
			}
		}
		clear_leg_term_limit_reforms = yes
	}
}

get_dominant_ideology_effect = {
	if = {
		limit = { has_dominant_ideology_trigger = { VAR = var:liberal_value } }
		save_scope_value_as = { name = $SAVE_SCOPE$ value = flag:liberal }
	}
	else_if = {
		limit = { has_dominant_ideology_trigger = { VAR = var:conservative_value } }
		save_scope_value_as = { name = $SAVE_SCOPE$ value = flag:conservative }
	}
	else_if = {
		limit = { has_dominant_ideology_trigger = { VAR = var:socialist_value } }
		save_scope_value_as = { name = $SAVE_SCOPE$ value = flag:socialist }
	}
	else_if = {
		limit = { has_dominant_ideology_trigger = { VAR = var:reactionary_value } }
		save_scope_value_as = { name = $SAVE_SCOPE$ value = flag:reactionary }
	}
	else_if = {
		limit = { has_dominant_ideology_trigger = { VAR = var:fascist_value } }
		save_scope_value_as = { name = $SAVE_SCOPE$ value = flag:fascist }
	}
	else_if = {
		limit = { has_dominant_ideology_trigger = { VAR = var:communist_value } }
		save_scope_value_as = { name = $SAVE_SCOPE$ value = flag:communist }
	}
	else_if = {
		limit = { has_dominant_ideology_trigger = { VAR = var:anarchist_value } }
		save_scope_value_as = { name = $SAVE_SCOPE$ value = flag:anarchist }
	}
	else_if = {
		limit = { has_variable = independent_value }
		save_scope_value_as = { name = $SAVE_SCOPE$ value = flag:independent }
	}
}