offer_protectorate_interaction_effect = {
	create_title_and_vassal_change = {
		type = swear_fealty
		save_scope_as = change
	}
	scope:recipient = {
		change_liege = {
			liege = scope:actor
			change = scope:change
		}
	}
	resolve_title_and_vassal_change = scope:change

	# Special terms for feudal contracts
	scope:recipient = {
		if = {
			limit = { scope:princely_state = yes }
			hidden_effect = {
				if = {
					limit = { is_independent_ruler = no } # To avoid errors during tooltip generation (prior to the contract being generated)
					vassal_contract_set_obligation_level = {
						type = special_contract
						level = 5	#princely_state
					}
				}	
			}
			custom_tooltip = princely_state_tt
		}
		hidden_effect = {
			if = {
				limit = { is_independent_ruler = no } # To avoid errors during tooltip generation (prior to the contract being generated)
				vassal_contract_set_obligation_level = {
					type = religious_rights
					level = 1	#religious_rights_protected
				}
				vassal_contract_set_obligation_level = {
					type = title_revocation_rights
					level = 1	#title_revocation_rights_protected
				}
			}			
		}
		custom_tooltip = religious_protection_tt
		custom_tooltip = title_protection_tt
	}
}

request_protectorate_interaction_effect = {
	create_title_and_vassal_change = {
		type = swear_fealty
		save_scope_as = change
	}
	scope:actor = {
		change_liege = {
			liege = scope:recipient
			change = scope:change
		}
		
		stress_impact = {
			ambitious = medium_stress_impact_gain
			arrogant = medium_stress_impact_gain
		}
	}
	resolve_title_and_vassal_change = scope:change

	scope:actor = {
		# Special terms for feudal contracts
		if = {
			limit = { scope:princely_state = yes }
			hidden_effect = {
				if = {
					limit = { is_independent_ruler = no } # To avoid errors during tooltip generation (prior to the contract being generated)
					vassal_contract_set_obligation_level = {
						type = special_contract
						level = 5	#princely_state
					}
				}	
			}
			custom_tooltip = princely_state_tt
		}
		hidden_effect = {
			if = {
				limit = { is_independent_ruler = no } # To avoid errors during tooltip generation (prior to the contract being generated)
				vassal_contract_set_obligation_level = {
					type = religious_rights
					level = 1	#religious_rights_protected
				}
				vassal_contract_set_obligation_level = {
					type = title_revocation_rights
					level = 1	#title_revocation_rights_protected
				}
			}		
		}
		custom_tooltip = religious_protection_tt
		custom_tooltip = title_protection_tt
	}
}