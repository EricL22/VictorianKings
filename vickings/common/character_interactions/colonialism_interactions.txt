offer_protectorate_interaction = {
	category = interaction_category_diplomacy
	ai_min_reply_days = 5
	ai_max_reply_days = 10
	

	common_interaction = yes
	desc = offer_protectorate_interaction_desc
	
	greeting = positive
	notification_text = OFFER_PROTECTORATE_NOTIFICATION
	
	is_shown = {
		scope:recipient = {
			NOT = { this = scope:actor }
			is_landed = yes
			is_independent_ruler = yes
			highest_held_title_tier < scope:actor.highest_held_title_tier
			NOT = { government_has_flag = can_not_be_vassal_or_liege }
			is_protectorate = no
			NOT = { culture = { has_cultural_era_or_later = culture_era_industrial } }
			NOT = { faith = scope:actor.faith }
			trigger_if = {
				limit = { has_government = tribal_government }
				highest_held_title_tier = tier_kingdom
			}
		}
		scope:actor = {
			highest_held_title_tier = tier_empire
			culture = { has_innovation = innovation_nationalism_n_imperialism }

			# They are unable to use the title revocation vassal contract
			NOT = {
				faith = {
					has_doctrine_parameter = unlock_jizya_contract
				}
			}
		}
	}
	
	is_valid_showing_failures_only = {
		scope:recipient = {
			is_at_war = no

			custom_description = {
				text = was_recently_granted_independence
				NOT = {
					has_opinion_modifier = {
						modifier = granted_independence_opinion
						target = scope:actor
					}
				}
			}
		}
	}
		
	on_accept = {
		offer_protectorate_interaction_effect = yes
		scope:actor = {
			trigger_event = char_interaction.0001
		}
	}
	
	on_decline = {
		scope:actor = {
			trigger_event = char_interaction.0002
		}
	}
	
	ai_accept = {
		base = -45

		modifier = { #Wide difference in rank
			desc = offer_vassalization_interaction_aibehavior_widetitletier_tt
			trigger = {
				scope:actor = {
					tier_difference = {
						target = scope:recipient
						value > 1
					}
				}
			}
			add = 30
		}
		opinion_modifier = { # More likely to accept if Recipient likes the Actor
			who = scope:recipient
			opinion_target = scope:actor
			multiplier = 0.25
			desc = AI_OPINION_REASON
		}
		# Dynasty Prestige Levels
		modifier = {
			add = -5
			desc = AI_DYNASTY_PRESTIGE_REASON
			scope:actor = { has_dynasty = yes }
			NOT = { scope:actor.dynasty = scope:recipient.dynasty }
			scope:actor.dynasty = { dynasty_prestige_level = 0 }
		}
		modifier = {
			desc = AI_DYNASTY_PRESTIGE_REASON
			scope:actor = { has_dynasty = yes }
			NOT = { scope:actor.dynasty = scope:recipient.dynasty }
			scope:actor.dynasty = { dynasty_prestige_level >= 2 }
			add = {
				value = 10
				if = {
					limit = {
						scope:actor.dynasty = { dynasty_prestige_level >= 3 }
					}
					add = 5
				}
				if = {
					limit = {
						scope:actor.dynasty = { dynasty_prestige_level >= 4 }
					}
					add = 5
				}
				if = {
					limit = {
						scope:actor.dynasty = { dynasty_prestige_level >= 5 }
					}
					add = 5
				}
				if = {
					limit = {
						scope:actor.dynasty = { dynasty_prestige_level >= 6 }
					}
					add = 5
				}
				if = {
					limit = {
						scope:actor.dynasty = { dynasty_prestige_level >= 7 }
					}
					add = 5
				}
				if = {
					limit = {
						scope:actor.dynasty = { dynasty_prestige_level >= 8 }
					}
					add = 5
				}
				if = {
					limit = {
						scope:actor.dynasty = { dynasty_prestige_level >= 9 }
					}
					add = 5
				}
				if = {
					limit = {
						scope:actor.dynasty = { dynasty_prestige_level >= 10 }
					}
					add = 5
				}
			}
		}
		modifier = { #Faith compatibility
			scope:recipient.faith = {
				faith_hostility_level = {
					target = scope:actor.faith
					value > faith_fully_accepted_level
				}
			}
			add = {
				value = -10
				if = {
					limit = {
						scope:recipient.faith = {
							faith_hostility_level = {
								target = scope:actor.faith
								value >= faith_hostile_level
							}
						}
					}
					subtract = 10
				}
				if = {
					limit = {
						scope:recipient.faith = {
							faith_hostility_level = {
								target = scope:actor.faith
								value >= faith_evil_level
							}
						}
					}
					subtract = 20
				}
			}
			desc = MARRY_DIFFERENT_FAITH_REASON
		}
		
		modifier = {
			add = intimidated_reason_value
			scope:recipient = {
				target_is_liege_or_above = scope:actor
				has_dread_level_towards = {
					target = scope:actor
					level = 1
				}
			}
			desc = INTIMIDATED_REASON
		}
		modifier = {
			add = cowed_reason_value
			scope:recipient = {
				target_is_liege_or_above = scope:actor
				has_dread_level_towards = {
					target = scope:actor
					level = 2
				}
			}
			desc = COWED_REASON
		}
		
		modifier = {
			add = intimidated_external_reason_value
			scope:recipient = {
				NOT = { target_is_liege_or_above = scope:actor }
				has_dread_level_towards = {
					target = scope:actor
					level = 1
				}
			}
			desc = INTIMIDATED_REASON
		}
		modifier = {
			add = cowed_external_reason_value
			scope:recipient = {
				NOT = { target_is_liege_or_above = scope:actor }
				has_dread_level_towards = {
					target = scope:actor
					level = 2
				}
			}
			desc = COWED_REASON
		}
		
		modifier = {
	  	  	add = {
				value = 1
				subtract = {
					value = scope:recipient.max_military_strength
					divide = { value = scope:actor.max_military_strength min = 1 }
				}
				multiply = 20
	  		}
			desc = offer_vassalization_interaction_aibehavior_power_tt
		}
		# Recipient is a Claimant to Actor's titles.
		modifier = {
			scope:recipient = {
				any_claim = {
					holder = scope:actor
				}
			}
			add = {
				value = -200
				if = {
					limit = {
						NOT = {
							scope:recipient.house = scope:actor.house
						}
					}
					multiply = 2
				}
				if = {
					limit = {
						NOT = {
							scope:recipient.dynasty = scope:actor.dynasty
						}
					}
					multiply = 2
				}
				if = {
					limit = {
						scope:recipient.dynasty = scope:actor.dynasty
						OR = {
							has_trait = bastard
							has_trait = legitimized_bastard
						}
					}
					multiply = 1.5
				}
				if = { # Primary heir will probably inherit the lands after the rulers death
					limit = {
						scope:recipient = { is_primary_heir_of = scope:actor }
					}
					divide = 4
				}
			}
			desc = IS_CLAIMANT_TO_ACTORS_TITLES
		}
		#Actor has claims on recipient's titles.
		modifier = {
			scope:actor = {
				any_claim = {
					holder = scope:recipient
				}
			}
			add = 25
			desc = IS_CLAIMANT_TO_RECIPIENT_TITLES
		}
		modifier = {
			scope:recipient = {
				NOT = {
					any_claim = {
						holder = scope:actor
					}
				}
			}
			scope:recipient.house = scope:actor.house
			add = 15
			desc = IS_SAME_HOUSE_REASON
		}
		modifier = {
			scope:recipient = {
				has_opinion_modifier = {
					target = scope:actor
					modifier = declared_war
				}
			}
			add = -100
			desc = DECLARED_WAR_REASON
		}
		modifier = {
			scope:recipient = {
				realm_size > 20
			}
			add = -50
			desc = LARGE_REALM_REASON
		}
		modifier = {
			scope:recipient = {
				NOT = {
					any_neighboring_top_liege_realm_owner = {
						count > 1
						NOT = { this = scope:actor }
						max_military_strength > scope:recipient.max_military_strength
					}
				}
				any_neighboring_top_liege_realm_owner = {
					NOT = { this = scope:actor }
					count > 2
				}
			}
			add = -100
			desc = DOMINANT_POWER_REASON
		}

		# CONTRACT OPTIONS
		modifier = {
			add = 60
			scope:recipient.capital_province = { geographical_region = world_india }
			scope:princely_state = yes
			desc = CONTRACT_PRINCELY_STATE_REASON
		}
	}

	# Princely State
	send_option = {
		is_shown = {
			scope:recipient.capital_province = {
				geographical_region = world_india
			}
		}
		flag = princely_state
		localization = princely_state
	}

	send_options_exclusive = no

	ai_potential = {
		is_adult = yes
		is_independent_ruler = yes
		highest_held_title_tier = tier_empire
	}
	
	ai_targets = {
		ai_recipients = neighboring_rulers
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 48
	
	ai_will_do = {
		base = 100
		modifier = {
			add = 5
			scope:princely_state = yes
		}
	}
}

request_protectorate_interaction = {
	category = interaction_category_diplomacy


	desc = request_protectorate_interaction_desc
	
	is_shown = {
		scope:recipient = {
			NOT = { this = scope:actor }
			NOT = { faith = scope:actor.faith }
		}
		scope:actor = {
			NOT = { culture = { has_cultural_era_or_later = culture_era_industrial } }
			trigger_if = {
				limit = { has_government = tribal_government }
				highest_held_title_tier = tier_kingdom
			}
		}
		scope:actor.highest_held_title_tier < scope:recipient.highest_held_title_tier
		scope:actor.liege = scope:actor
		scope:recipient = {
			liege = this
			is_landed = yes
			highest_held_title_tier = tier_empire
			culture = { has_innovation = innovation_nationalism_n_imperialism }

			# They are unable to use the title revocation vassal contract
			NOT = {
				faith = {
					has_doctrine_parameter = unlock_jizya_contract
				}
			}
		}
	}

	is_valid = {
		
	}

	is_valid_showing_failures_only = {
		scope:actor = {
			is_imprisoned = no
			is_at_war = no
		}
		scope:recipient = {
			custom_description = {
				text = "offer_fealty_neighboring_condition"
				subject = scope:recipient
				OR = {
					any_neighboring_and_across_water_top_liege_realm_owner = { this = scope:actor }
					any_held_title = {
						is_de_jure_liege_or_above_target = scope:actor.capital_barony
					}
				}
			}
		}
	}

	greeting = positive
	notification_text = REQUEST_PROTECTORATE_INTERACTION_NOTIFICATION
	
	ai_min_reply_days = 5
	ai_max_reply_days = 10

	ai_accept = {
		base = 50
		#MAIN
		#Heretic/Infidel modifier.
		#Tier difference modifier.
		#Dejure modifier.
		#Distant/Remote Realm modifier.

		#MINOR
		#Rivalry modifier.
		#Same Dynasty modifier.
		#Cultural/Cultural Group modifiers.
		#Claimant modifier.

		#OPINION SCALES
		#Personality modifier.
		#Compare Opinion modifier.
		#MAIN
		modifier = { #Different faith, no pluralism.
			desc = offer_vassalization_interaction_aibehavior_differentfaith_tt
			trigger = {
				scope:actor = {
					NOR = { #Of two different faiths AND the potential vassal's faith is not pluralistic.
						faith = scope:recipient.faith
						faith = { has_doctrine = doctrine_pluralism_pluralistic }
					}
				}
			}
			add = {
				value = -25
				if = {
					limit = {
						scope:actor.faith = {
							faith_hostility_level = {
								target = scope:recipient.faith
								value >= faith_hostile_level
							}
						}
					}
					add = -10
				}
				if = {
					limit = {
						scope:actor.faith = {
							faith_hostility_level = {
								target = scope:recipient.faith
								value >= faith_evil_level
							}
						}
					}
					add = -25
				}
			}
		}

		modifier = { #I am a King!
			desc = offer_fealty_interaction_aibehavior_amkingtier_tt
			trigger = {
				scope:actor = { highest_held_title_tier = tier_kingdom }
			}
			add = -10
		}
		modifier = { #Wide difference in rank
			desc = offer_vassalization_interaction_aibehavior_widetitletier_tt
			trigger = {
				scope:actor = {
					tier_difference = {
						target = scope:recipient
						value > 1
					}
				}
			}
			add = 20
		}
		modifier = { # They are my Rightful Liege
			desc = offer_vassalization_interaction_aibehavior_rightfulvassaltitleholder_tt
			trigger = {
				is_rightful_liege_of_trigger = {
					VASSAL = scope:actor
					LIEGE = scope:recipient
				}
			}
			add = 25
		}
		modifier = { #Distant Realm.
			desc = offer_vassalization_interaction_aibehavior_distantrealm_tt
			trigger = {
				scope:actor = {
					NOT = {
						any_neighboring_top_liege_realm_owner = { this = scope:recipient }
					}
				}
				scope:actor.capital_province = { squared_distance = { target = scope:recipient.capital_province value < 200000 } }
			}
			add = -15
		}
		modifier = { #Remote Realm.
			desc = offer_vassalization_interaction_aibehavior_remoterealm_tt
			trigger = {
				scope:actor = {
					NOT = {
						any_neighboring_top_liege_realm_owner = { this = scope:recipient }
					}
				}
				scope:actor.capital_province = { squared_distance = { target = scope:recipient.capital_province value >= 200000 } }
			}
			add = -25
		}

		#MINOR
		modifier = { #Rivalry modifier.
			desc = offer_vassalization_interaction_aibehavior_rival_tt
			trigger = {
				scope:recipient = {
					has_relation_rival = scope:actor
					NOT = { has_relation_nemesis = scope:actor }
				}
			}
			add = -10
		}
		modifier = { #Nemesis modifier.
			desc = offer_vassalization_interaction_aibehavior_nemesis_tt
			trigger = {
				scope:recipient = {
					has_relation_nemesis = scope:actor
				}
			}
			add = -30
		}
		modifier = { #Same Dynasty modifier.
			desc = offer_vassalization_interaction_aibehavior_dynasty_tt
			trigger = {
				scope:recipient = {
					dynasty = scope:actor.dynasty
				}
			}
			add = 10
		}
		
		modifier = { # Cultural Acceptance
			add = -5
			desc = cultural_acceptance_interaction_reason
			trigger = {
				scope:actor = {
					NOT = { has_same_culture_as = scope:recipient }
					culture = {
						cultural_acceptance = { target = scope:recipient.culture value < 50 }
					}
				}
			}
		}
		
		modifier = { # Same language
			add = 5
			desc = speaks_same_language_interaction_reason
			trigger = {
				scope:actor = {
					knows_language_of_culture = scope:recipient.culture
				}
			}
		}

		modifier = { #Claimant modifier.
			desc = offer_vassalization_interaction_aibehavior_claimant_tt
			trigger = {
				scope:actor.primary_title = {
					scope:recipient = {
						has_claim_on = prev
					}
				}
			}
			add = -15
		}

		#PERSONALITY
		ai_value_modifier = {
			ai_greed = 0.75
			min = 0
		}

		#OPINION INFLUENCE
		opinion_modifier = { #Compare Opinion modifier.
			who = scope:recipient
			opinion_target = scope:actor
			multiplier = 0.5
		}

		# CONTRACT OPTIONS
		modifier = {
			add = -10
			scope:actor.capital_province = { geographical_region = world_india }
			scope:princely_state = yes
			desc = CONTRACT_PRINCELY_STATE_REASON
		}
	}

	# Princely State
	send_option = {
		is_shown = {
			scope:actor.capital_province = {
				geographical_region = world_india
			}
		}
		flag = princely_state
		localization = princely_state
	}

	send_options_exclusive = no

	on_accept = {
		request_protectorate_interaction_effect = yes

		scope:actor = {
			trigger_event = char_interaction.0010
		}
	}

	on_decline = {
		scope:actor = {
			trigger_event = char_interaction.0011
		}
	}
}

initiate_colonization_interaction = {
	category = interaction_category_diplomacy

	common_interaction = yes
	desc = initiate_colonization_interaction_desc
	
	is_shown = {
		scope:recipient = {
			OR = {
				has_government = tribal_government
				AND = {
					has_government = clan_government
					NOT = { culture = { has_cultural_era_or_later = culture_era_renaissance } }
				}
			}
			highest_held_title_tier < tier_kingdom
			is_independent_ruler = yes
			NOR = {
				capital_province = { geographical_region = world_middle_east_arabia }
				capital_province = { geographical_region = world_india }
			}
			any_realm_county = { NOT = { target_conquest_blocked_by_treaty_trigger = { CHARACTER = scope:actor TARGET = this } } }
		}
		scope:actor = {
			NOT = { has_government = tribal_government }
			highest_held_title_tier > tier_duchy
			is_independent_ruler = yes
			culture = { has_innovation = innovation_overseas_exploration }
			NOT = { has_title = title:e_united_states }	# they have removal treaties
			trigger_if = {
				limit = {
					is_ai = yes
					has_title = title:e_britannia
					scope:recipient = { capital_province = { geographical_region = world_north_america } }
				}
				is_target_in_global_variable_list = {
					name = unavailable_unique_decisions
					target = flag:1818_treaty_signed
				}
			}
		}
	}

	is_valid = {
		
	}

	is_valid_showing_failures_only = {
		scope:recipient = {
			custom_description = {
				text = "initiate_colonization_neighboring_condition"
				subject = scope:recipient
				OR = {
					any_neighboring_and_across_water_top_liege_realm_owner = { this = scope:actor }
					scope:actor = {
						realm_to_title_distance_squared = {
							title = scope:recipient.capital_county
							value < 1000000
						}
						realm_to_title_distance_squared = {
							title = scope:recipient.primary_title
							value < 1000000
						}
					}
				}
			}
		}
		custom_description = {
			text = "initiate_colonization_already_colonizing_condition"
			subject = scope:recipient
			NOT = {
				is_target_in_global_variable_list = {
					name = involved_in_colonization
					target = scope:recipient
				}
			}
		}
		scope:recipient = {
			custom_description = {
				text = "initiate_colonization_geographical_region_condition"
				subject = scope:recipient
				NAND = {
					capital_province = { geographical_region = world_africa }
					scope:actor = { NOT = { culture = { has_innovation = innovation_nationalism_n_imperialism } } }
				}
			}
		}
	}

	on_accept = {
		save_scope_value_as = { name = colony_total_time value = 10 }
		if = {
			limit = { scope:actor.culture = { has_innovation = innovation_nationalism_n_imperialism } }
			save_scope_value_as = { name = colony_total_time value = 4 }
		}
		save_scope_value_as = { name = colony_current_progress value = 0 }
		scope:actor.primary_title = {
			save_scope_as = colonizer_title
		}
		scope:recipient = {
			every_realm_county = {
				limit = { NOT = { target_conquest_blocked_by_treaty_trigger = { CHARACTER = scope:actor TARGET = this } } }
				save_scope_value_as = { name = colony_total_time value = { value = scope:colony_total_time add = 2 } }
				add_to_list = conquest_colonies
			}
		}
		add_to_global_variable_list = {
			name = involved_in_colonization
			target = scope:recipient
		}
		scope:actor = {
			custom_tooltip = {
				text = colonization_interaction_effects
			}
		}
		scope:recipient = {
			set_variable = {	# I gave up on localizing the scope. Using a variable for localization instead.
				name = colony_total_time
				value = scope:colony_total_time
			}
			trigger_event = { id = colonization.1 days = 7 delayed = yes }
		}
		trigger_event = { on_action = colonization_monthly_pulse months = 1 }
	}

	auto_accept = yes

	ai_potential = {
		is_adult = yes
		is_independent_ruler = yes
	}
	
	ai_targets = {
		ai_recipients = neighboring_rulers
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 4
	
	ai_will_do = {
		base = 100
		modifier = {	# soft block for now until I can flesh this out more
			factor = 0
			scope:actor.primary_title = title:k_spain
		}
	}
}

end_colonization_interaction = {
	category = interaction_category_diplomacy

	common_interaction = yes
	desc = end_colonization_interaction_desc
	
	is_shown = {
		scope:recipient = {
			has_variable = colonized_by
			var:colonized_by = scope:actor
		}
	}

	is_valid = {
		
	}

	is_valid_showing_failures_only = {
	}

	on_accept = {
		remove_list_global_variable = {
			name = involved_in_colonization
			target = scope:recipient
		}
		scope:actor = {
			custom_tooltip = {
				text = end_colonization_interaction_effects
				set_variable = {
					name = end_colonization
					value = scope:recipient
				}
			}
		}
	}

	auto_accept = yes
}

designate_indian_territory_interaction = {
	category = interaction_category_diplomacy

	target_type = title
	target_filter = actor_de_jure_titles
	interface_priority = 60

	common_interaction = yes
	desc = designate_indian_territory_interaction_desc
	
	is_shown = {
		scope:recipient = {
			OR = {
				has_government = tribal_government
				AND = {
					has_government = clan_government
					NOT = { culture = { has_cultural_era_or_later = culture_era_renaissance } }
				}
			}
			highest_held_title_tier < tier_kingdom
			is_independent_ruler = yes
			capital_province = { geographical_region = world_north_america }
			any_realm_county = { NOT = { target_conquest_blocked_by_treaty_trigger = { CHARACTER = scope:actor TARGET = this } } }
		}
		scope:actor = {
			NOT = { has_government = tribal_government }
			culture = { has_innovation = innovation_overseas_exploration }
			has_title = title:e_united_states
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:indian_removal_signed
			}
		}
		NOT = {
			has_global_variable_list = indian_territory
		}
	}

	is_valid = {
		
	}

	is_valid_showing_failures_only = {

	}
	
	can_be_picked_title = {
		scope:target = {
			tier = tier_duchy
		}
	}

	on_accept = {
		add_to_global_variable_list = {
			name = indian_territory
			target = scope:target
		}
		scope:target = {
			every_in_de_jure_hierarchy = {
				limit = { tier = tier_county }
				set_de_jure_liege_title = title:d_indian_territory
			}
		}
	}

	auto_accept = yes
}

sign_removal_treaty_interaction = {
	category = interaction_category_diplomacy
	ai_min_reply_days = 5
	ai_max_reply_days = 10
	
	#special_interaction = grant_titles_interaction
	#interface = grant_titles
	target_type = title
	target_filter = actor_de_jure_titles
	interface_priority = 60

	cooldown = { months = 1 }

	common_interaction = yes
	desc = sign_removal_treaty_interaction_desc
	
	greeting = positive
	notification_text = OFFER_PROTECTORATE_NOTIFICATION
	
	is_shown = {
		scope:recipient = {
			OR = {
				has_government = tribal_government
				AND = {
					has_government = clan_government
					NOT = { culture = { has_cultural_era_or_later = culture_era_renaissance } }
				}
			}
			highest_held_title_tier < tier_kingdom
			is_independent_ruler = yes
			capital_province = { geographical_region = world_north_america }
			any_realm_county = { NOT = { target_conquest_blocked_by_treaty_trigger = { CHARACTER = scope:actor TARGET = this } } }
		}
		scope:actor = {
			NOT = { has_government = tribal_government }
			culture = { has_innovation = innovation_overseas_exploration }
			has_title = title:e_united_states
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:indian_removal_signed
			}
		}
		has_global_variable_list = indian_territory
	}
	
	is_valid_showing_failures_only = {
		scope:recipient = {
			custom_description = {
				text = "initiate_colonization_neighboring_condition"
				subject = scope:recipient
				any_neighboring_and_across_water_top_liege_realm_owner = { this = scope:actor }
			}
		}
	}
	
	can_be_picked_title = {
		custom_description = {
			text = sign_removal_treaty_interaction_territory_requirement
			subject = scope:recipient
			scope:target = {
				is_leased_out = no
				tier = tier_county
				NOT = { holder = { is_protectorate = yes } }
			}
			title:d_indian_territory = {
				is_de_jure_liege_or_above_target = scope:target
			}
		}

		custom_description = {
			text = grant_titles_interaction_title_being_wagered
			NOT = {
				scope:target = { has_variable = wagered_county }
			}
		}
	}
		
	on_accept = {
		sign_removal_treaty_interaction_effect = yes
		scope:actor = {
			trigger_event = char_interaction.0001
		}
	}
	
	on_decline = {
		scope:actor = {
			trigger_event = char_interaction.0002
		}
	}
	
	ai_accept = {
		base = -45

		modifier = { #Wide difference in rank
			desc = offer_vassalization_interaction_aibehavior_widetitletier_tt
			trigger = {
				scope:actor = {
					tier_difference = {
						target = scope:recipient
						value > 1
					}
				}
			}
			add = 30
		}
		opinion_modifier = { # More likely to accept if Recipient likes the Actor
			who = scope:recipient
			opinion_target = scope:actor
			multiplier = 0.25
			desc = AI_OPINION_REASON
		}
		# Dynasty Prestige Levels
		modifier = {
			add = -5
			desc = AI_DYNASTY_PRESTIGE_REASON
			scope:actor = { has_dynasty = yes }
			NOT = { scope:actor.dynasty = scope:recipient.dynasty }
			scope:actor.dynasty = { dynasty_prestige_level = 0 }
		}
		modifier = {
			desc = AI_DYNASTY_PRESTIGE_REASON
			scope:actor = { has_dynasty = yes }
			NOT = { scope:actor.dynasty = scope:recipient.dynasty }
			scope:actor.dynasty = { dynasty_prestige_level >= 2 }
			add = {
				value = 10
				if = {
					limit = {
						scope:actor.dynasty = { dynasty_prestige_level >= 3 }
					}
					add = 5
				}
				if = {
					limit = {
						scope:actor.dynasty = { dynasty_prestige_level >= 4 }
					}
					add = 5
				}
				if = {
					limit = {
						scope:actor.dynasty = { dynasty_prestige_level >= 5 }
					}
					add = 5
				}
				if = {
					limit = {
						scope:actor.dynasty = { dynasty_prestige_level >= 6 }
					}
					add = 5
				}
				if = {
					limit = {
						scope:actor.dynasty = { dynasty_prestige_level >= 7 }
					}
					add = 5
				}
				if = {
					limit = {
						scope:actor.dynasty = { dynasty_prestige_level >= 8 }
					}
					add = 5
				}
				if = {
					limit = {
						scope:actor.dynasty = { dynasty_prestige_level >= 9 }
					}
					add = 5
				}
				if = {
					limit = {
						scope:actor.dynasty = { dynasty_prestige_level >= 10 }
					}
					add = 5
				}
			}
		}
		modifier = { #Faith compatibility
			scope:recipient.faith = {
				faith_hostility_level = {
					target = scope:actor.faith
					value > faith_fully_accepted_level
				}
			}
			add = {
				value = -10
				if = {
					limit = {
						scope:recipient.faith = {
							faith_hostility_level = {
								target = scope:actor.faith
								value >= faith_hostile_level
							}
						}
					}
					subtract = 10
				}
				if = {
					limit = {
						scope:recipient.faith = {
							faith_hostility_level = {
								target = scope:actor.faith
								value >= faith_evil_level
							}
						}
					}
					subtract = 20
				}
			}
			desc = MARRY_DIFFERENT_FAITH_REASON
		}
		
		modifier = {
			add = intimidated_reason_value
			scope:recipient = {
				target_is_liege_or_above = scope:actor
				has_dread_level_towards = {
					target = scope:actor
					level = 1
				}
			}
			desc = INTIMIDATED_REASON
		}
		modifier = {
			add = cowed_reason_value
			scope:recipient = {
				target_is_liege_or_above = scope:actor
				has_dread_level_towards = {
					target = scope:actor
					level = 2
				}
			}
			desc = COWED_REASON
		}
		
		modifier = {
			add = intimidated_external_reason_value
			scope:recipient = {
				NOT = { target_is_liege_or_above = scope:actor }
				has_dread_level_towards = {
					target = scope:actor
					level = 1
				}
			}
			desc = INTIMIDATED_REASON
		}
		modifier = {
			add = cowed_external_reason_value
			scope:recipient = {
				NOT = { target_is_liege_or_above = scope:actor }
				has_dread_level_towards = {
					target = scope:actor
					level = 2
				}
			}
			desc = COWED_REASON
		}
		
		modifier = {
	  	  	add = {
				value = 1
				subtract = {
					value = scope:recipient.max_military_strength
					divide = { value = scope:actor.max_military_strength min = 1 }
				}
				multiply = 40
	  		}
			desc = sign_removal_treaty_interaction_aibehavior_power_tt
		}
		#Actor has claims on recipient's titles.
		modifier = {
			scope:actor = {
				any_claim = {
					holder = scope:recipient
				}
			}
			add = 25
			desc = IS_CLAIMANT_TO_RECIPIENT_TITLES
		}
		modifier = {
			scope:recipient = {
				NOT = {
					any_claim = {
						holder = scope:actor
					}
				}
			}
			scope:recipient.house = scope:actor.house
			add = 15
			desc = IS_SAME_HOUSE_REASON
		}
		modifier = {
			scope:recipient = {
				has_opinion_modifier = {
					target = scope:actor
					modifier = declared_war
				}
			}
			add = -100
			desc = DECLARED_WAR_REASON
		}
		modifier = {
			scope:recipient = {
				NOT = {
					any_neighboring_top_liege_realm_owner = {
						NOT = { this = scope:actor }
						max_military_strength >= scope:recipient.max_military_strength
					}
				}
				any_neighboring_top_liege_realm_owner = {
					NOT = { this = scope:actor }
					count > 1
				}
			}
			add = -100
			desc = DOMINANT_POWER_REASON
		}
		#Cannot honor treaty
		modifier = {
			desc = sign_removal_treaty_interaction_insufficient_lands_tt
			trigger = {
				OR = {
					scope:actor = {
						NOT = {
							any_realm_county = {
								is_leased_out = no
								NOT = { holder = { is_protectorate = yes } }
								save_temporary_scope_as = county_check
								title:d_indian_territory = {
									is_de_jure_liege_or_above_target = scope:county_check
								}
							}
						}
					}
					AND = {
						scope:low_concessions = yes
						scope:actor = {
							NOT = {
								any_realm_county = {
									count >= 2
									is_leased_out = no
									NOT = { holder = { is_protectorate = yes } }
									save_temporary_scope_as = county_check
									title:d_indian_territory = {
										is_de_jure_liege_or_above_target = scope:county_check
									}
								}
							}
						}
					}
					AND = {
						scope:medium_concessions = yes
						scope:actor = {
							NOT = {
								any_realm_county = {
									count >= 4
									is_leased_out = no
									NOT = { holder = { is_protectorate = yes } }
									save_temporary_scope_as = county_check
									title:d_indian_territory = {
										is_de_jure_liege_or_above_target = scope:county_check
									}
								}
							}
						}
					}
					AND = {
						scope:high_concessions = yes
						scope:actor = {
							NOT = {
								any_realm_county = {
									count >= 7
									is_leased_out = no
									NOT = { holder = { is_protectorate = yes } }
									save_temporary_scope_as = county_check
									title:d_indian_territory = {
										is_de_jure_liege_or_above_target = scope:county_check
									}
								}
							}
						}
					}
				}
			}
			add = -1000
		}

		# CONTRACT OPTIONS
		modifier = {
			add = 20
			scope:low_concessions = yes
			desc = CONTRACT_LOW_CONCESSIONS_REASON
		}
		modifier = {
			add = 40
			scope:medium_concessions = yes
			desc = CONTRACT_MEDIUM_CONCESSIONS_REASON
		}
		modifier = {
			add = 80
			scope:high_concessions = yes
			desc = CONTRACT_HIGH_CONCESSIONS_REASON
		}
	}

	# Concessions as-is
	send_option = {
		flag = none_concessions
		localization = none_concessions
	}

	# Low concessions
	send_option = {
		flag = low_concessions
		localization = low_concessions
	}

	# Medium concessions
	send_option = {
		flag = medium_concessions
		localization = medium_concessions
		starts_enabled = { always = yes	}
	}

	# High concessions
	send_option = {
		flag = high_concessions
		localization = high_concessions
	}

	send_options_exclusive = yes

	ai_potential = {
		is_adult = yes
		is_independent_ruler = yes
		highest_held_title_tier = tier_empire
	}
	
	ai_targets = {
		ai_recipients = neighboring_rulers
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 8
	
	ai_will_do = {
		base = 20
		modifier = {
			factor = 5
			scope:recipient = {
				OR = {
					capital_province = { geographical_region = world_great_lakes }
					capital_province = { geographical_region = world_northeast_america }
					capital_province = { geographical_region = world_southeast_america }
					capital_province = { geographical_region = world_mississippi }
				}
			}
		}
		modifier = {
			factor = 0
			scope:recipient = {
				realm_size < 4
			}
			scope:actor = {
				any_neighboring_top_liege_realm_owner = {
					OR = {
						has_government = tribal_government
						AND = {
							has_government = clan_government
							NOT = { culture = { has_cultural_era_or_later = culture_era_renaissance } }
						}
					}
					highest_held_title_tier < tier_kingdom
					capital_province = { geographical_region = world_north_america }
					any_realm_county = { NOT = { target_conquest_blocked_by_treaty_trigger = { CHARACTER = scope:actor TARGET = this } } }
					realm_size > 3
				}
			}
		}
	}
}

grant_reservation_land_interaction = {
	category = interaction_category_vassal

	target_type = title
	target_filter = actor_de_jure_titles
	interface_priority = 60

	common_interaction = yes
	desc = grant_reservation_land_interaction_desc
	
	is_shown = {
		scope:recipient = {
			is_protectorate = yes
			is_vassal_of = scope:actor
			culture = { has_cultural_pillar = heritage_native_american }
		}
		scope:actor = {
			has_title = title:e_united_states
		}
	}

	is_valid = {
		
	}

	is_valid_showing_failures_only = {

	}
	
	can_be_picked_title = {
		custom_description = {
			text = sign_removal_treaty_interaction_territory_requirement
			subject = scope:recipient
			scope:target = {
				is_leased_out = no
				tier = tier_county
				NOT = { holder = { is_protectorate = yes } }
			}
			scope:recipient.capital_county.duchy = {
				is_de_jure_liege_or_above_target = scope:target
			}
		}

		custom_description = {
			text = grant_titles_interaction_title_being_wagered
			NOT = {
				scope:target = { has_variable = wagered_county }
			}
		}
	}

	on_accept = {
		scope:recipient = {
			if = {
				limit = { has_variable = count_transferred }
				change_variable = { name = count_transferred add = 1 }
			}
			if = {
				limit = { has_variable = low_concessions }
				custom_tooltip = { text = grant_reservation_land_interaction_concession_low }
			}
			if = {
				limit = { has_variable = medium_concessions }
				custom_tooltip = { text = grant_reservation_land_interaction_concession_medium }
			}
			if = {
				limit = { has_variable = high_concessions }
				custom_tooltip = { text = grant_reservation_land_interaction_concession_high }
			}
		}
		create_title_and_vassal_change = {
			type = swear_fealty
			save_scope_as = change
		}
		scope:recipient = {
			scope:target = {
				change_title_holder = {
					holder = scope:recipient
					change = scope:change
				}
			}
		}
		resolve_title_and_vassal_change = scope:change
	}

	auto_accept = yes
}

retract_reservation_land_interaction = {
	category = interaction_category_vassal

	target_type = title
	target_filter = recipient_de_jure_titles
	interface_priority = 60

	common_interaction = yes
	desc = retract_reservation_land_interaction_desc
	
	is_shown = {
		scope:recipient = {
			is_protectorate = yes
			is_vassal_of = scope:actor
			culture = { has_cultural_pillar = heritage_native_american }
			any_sub_realm_county = {
				target_is_de_jure_liege_or_above = title:d_indian_territory
			}
		}
		scope:actor = {
			has_title = title:e_united_states
		}
		current_date > 1890.1.1
	}

	is_valid = {
		
	}

	is_valid_showing_failures_only = {

	}
	
	can_be_picked_title = {
		custom_description = {
			text = sign_removal_treaty_interaction_territory_requirement
			subject = scope:recipient
			scope:target = {
				is_leased_out = no
				tier = tier_county
			}
			title:d_indian_territory = {
				is_de_jure_liege_or_above_target = scope:target
			}
		}

		custom_description = {
			text = grant_titles_interaction_title_being_wagered
			NOT = {
				scope:target = { has_variable = wagered_county }
			}
		}
	}

	on_accept = {
		if = {
			limit = {
				any_in_global_list = {
					variable = indian_territory
					exists = holder
				}
			}
			custom_tooltip = {
				text = retract_reservation_land_interaction_to_territory
				every_in_global_list = {
					variable = indian_territory
					save_scope_as = de_jure_transfer_title
					holder = { save_scope_as = gov_transfer }
				}
				create_title_and_vassal_change = {
					type = granted
					save_scope_as = change
				}
				scope:target = {
					change_title_holder = {
						holder = scope:gov_transfer
						change = scope:change
					}
					random = {
						chance = 50
						set_county_culture = culture:american
						set_county_faith = faith:protestant
					}
					set_de_jure_liege_title = scope:de_jure_transfer_title
				}
				resolve_title_and_vassal_change = scope:change
			}
		}
		else = {
			custom_tooltip = {
				text = retract_reservation_land_interaction_form_territory
				create_character = {
					culture = culture:american
					faith = faith:protestant
					gender = male
					employer = scope:actor
					save_scope_as = new_governor
				}
				create_title_and_vassal_change = {
					type = granted
					save_scope_as = change
				}
				scope:target = {
					change_title_holder = {
						holder = scope:new_governor
						change = scope:change
					}
					random = {
						chance = 50
						set_county_culture = culture:american
						set_county_faith = faith:protestant
					}
				}
				every_in_global_list = {
					variable = indian_territory
					save_scope_as = de_jure_transfer_title
					change_title_holder = {
						holder = scope:new_governor
						change = scope:change
					}
				}
				resolve_title_and_vassal_change = scope:change
				scope:target = {
					set_de_jure_liege_title = scope:de_jure_transfer_title
				}
			}
		}
		every_culture_global = {
			limit = { has_cultural_pillar = heritage_native_american }
			change_cultural_acceptance = {
				target = scope:actor.culture
				value = -2
				desc = cultural_acceptance_gain_retracted_reservation
			}
		}
	}

	auto_accept = yes
}

establish_reservation_interaction = {
	category = interaction_category_diplomacy
	ai_min_reply_days = 5
	ai_max_reply_days = 10

	cooldown = { months = 1 }

	common_interaction = yes
	desc = establish_reservation_interaction_desc
	
	greeting = positive
	notification_text = OFFER_PROTECTORATE_NOTIFICATION
	
	is_shown = {
		scope:recipient = {
			OR = {
				has_government = tribal_government
				AND = {
					has_government = clan_government
					NOT = { culture = { has_cultural_era_or_later = culture_era_renaissance } }
				}
			}
			highest_held_title_tier < tier_kingdom
			is_independent_ruler = yes
			capital_province = { geographical_region = world_north_america }
			any_realm_county = { NOT = { target_conquest_blocked_by_treaty_trigger = { CHARACTER = scope:actor TARGET = this } } }
		}
		scope:actor = {
			NOT = { has_government = tribal_government }
			culture = { has_innovation = innovation_overseas_exploration }
			has_title = title:e_united_states
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:indian_removal_signed
			}
			NOT = {
				any_realm_county = {
					count >= 2
					is_leased_out = no
					NOT = { holder = { is_protectorate = yes } }
					save_temporary_scope_as = county_check
					title:d_indian_territory = {
						is_de_jure_liege_or_above_target = scope:county_check
					}
				}
			}
		}
		has_global_variable_list = indian_territory
	}
	
	is_valid_showing_failures_only = {
		scope:recipient = {
			custom_description = {
				text = "initiate_colonization_neighboring_condition"
				subject = scope:recipient
				any_neighboring_and_across_water_top_liege_realm_owner = { this = scope:actor }
			}
		}
	}
		
	on_accept = {
		establish_reservation_interaction_effect = yes
		scope:actor = {
			trigger_event = char_interaction.0001
		}
	}
	
	on_decline = {
		scope:actor = {
			trigger_event = char_interaction.0002
		}
	}
	
	ai_accept = {
		base = -45

		modifier = { #Wide difference in rank
			desc = offer_vassalization_interaction_aibehavior_widetitletier_tt
			trigger = {
				scope:actor = {
					tier_difference = {
						target = scope:recipient
						value > 1
					}
				}
			}
			add = 30
		}
		opinion_modifier = { # More likely to accept if Recipient likes the Actor
			who = scope:recipient
			opinion_target = scope:actor
			multiplier = 0.25
			desc = AI_OPINION_REASON
		}
		# Dynasty Prestige Levels
		modifier = {
			add = -5
			desc = AI_DYNASTY_PRESTIGE_REASON
			scope:actor = { has_dynasty = yes }
			NOT = { scope:actor.dynasty = scope:recipient.dynasty }
			scope:actor.dynasty = { dynasty_prestige_level = 0 }
		}
		modifier = {
			desc = AI_DYNASTY_PRESTIGE_REASON
			scope:actor = { has_dynasty = yes }
			NOT = { scope:actor.dynasty = scope:recipient.dynasty }
			scope:actor.dynasty = { dynasty_prestige_level >= 2 }
			add = {
				value = 10
				if = {
					limit = {
						scope:actor.dynasty = { dynasty_prestige_level >= 3 }
					}
					add = 5
				}
				if = {
					limit = {
						scope:actor.dynasty = { dynasty_prestige_level >= 4 }
					}
					add = 5
				}
				if = {
					limit = {
						scope:actor.dynasty = { dynasty_prestige_level >= 5 }
					}
					add = 5
				}
				if = {
					limit = {
						scope:actor.dynasty = { dynasty_prestige_level >= 6 }
					}
					add = 5
				}
				if = {
					limit = {
						scope:actor.dynasty = { dynasty_prestige_level >= 7 }
					}
					add = 5
				}
				if = {
					limit = {
						scope:actor.dynasty = { dynasty_prestige_level >= 8 }
					}
					add = 5
				}
				if = {
					limit = {
						scope:actor.dynasty = { dynasty_prestige_level >= 9 }
					}
					add = 5
				}
				if = {
					limit = {
						scope:actor.dynasty = { dynasty_prestige_level >= 10 }
					}
					add = 5
				}
			}
		}
		modifier = { #Faith compatibility
			scope:recipient.faith = {
				faith_hostility_level = {
					target = scope:actor.faith
					value > faith_fully_accepted_level
				}
			}
			add = {
				value = -10
				if = {
					limit = {
						scope:recipient.faith = {
							faith_hostility_level = {
								target = scope:actor.faith
								value >= faith_hostile_level
							}
						}
					}
					subtract = 10
				}
				if = {
					limit = {
						scope:recipient.faith = {
							faith_hostility_level = {
								target = scope:actor.faith
								value >= faith_evil_level
							}
						}
					}
					subtract = 20
				}
			}
			desc = MARRY_DIFFERENT_FAITH_REASON
		}
		
		modifier = {
			add = intimidated_reason_value
			scope:recipient = {
				target_is_liege_or_above = scope:actor
				has_dread_level_towards = {
					target = scope:actor
					level = 1
				}
			}
			desc = INTIMIDATED_REASON
		}
		modifier = {
			add = cowed_reason_value
			scope:recipient = {
				target_is_liege_or_above = scope:actor
				has_dread_level_towards = {
					target = scope:actor
					level = 2
				}
			}
			desc = COWED_REASON
		}
		
		modifier = {
			add = intimidated_external_reason_value
			scope:recipient = {
				NOT = { target_is_liege_or_above = scope:actor }
				has_dread_level_towards = {
					target = scope:actor
					level = 1
				}
			}
			desc = INTIMIDATED_REASON
		}
		modifier = {
			add = cowed_external_reason_value
			scope:recipient = {
				NOT = { target_is_liege_or_above = scope:actor }
				has_dread_level_towards = {
					target = scope:actor
					level = 2
				}
			}
			desc = COWED_REASON
		}
		
		modifier = {
	  	  	add = {
				value = 1
				subtract = {
					value = scope:recipient.max_military_strength
					divide = { value = scope:actor.max_military_strength min = 1 }
				}
				multiply = 20
	  		}
			desc = offer_vassalization_interaction_aibehavior_power_tt
		}
		#Actor has claims on recipient's titles.
		modifier = {
			scope:actor = {
				any_claim = {
					holder = scope:recipient
				}
			}
			add = 25
			desc = IS_CLAIMANT_TO_RECIPIENT_TITLES
		}
		modifier = {
			scope:recipient = {
				NOT = {
					any_claim = {
						holder = scope:actor
					}
				}
			}
			scope:recipient.house = scope:actor.house
			add = 15
			desc = IS_SAME_HOUSE_REASON
		}
		modifier = {
			scope:recipient = {
				has_opinion_modifier = {
					target = scope:actor
					modifier = declared_war
				}
			}
			add = -100
			desc = DECLARED_WAR_REASON
		}
		modifier = {
			scope:recipient = {
				NOT = {
					any_neighboring_top_liege_realm_owner = {
						NOT = { this = scope:actor }
						max_military_strength >= scope:recipient.max_military_strength
					}
				}
				any_neighboring_top_liege_realm_owner = {
					NOT = { this = scope:actor }
					count > 1
				}
			}
			add = -100
			desc = DOMINANT_POWER_REASON
		}
		#Cannot honor treaty
		modifier = {
			desc = sign_removal_treaty_interaction_insufficient_lands_tt
			trigger = {
				scope:low_concessions = yes
				scope:actor = {
					NOR = {
						any_realm_county = {
							count >= 1
							is_leased_out = no
							NOT = { holder = { is_protectorate = yes } }
							save_temporary_scope_as = county_check
							scope:recipient.capital_county.duchy = {
								is_de_jure_liege_or_above_target = scope:county_check
							}
						}
						scope:recipient = {
							any_realm_county = {
								count >= 2
								is_leased_out = no
								NOT = { holder = { is_protectorate = yes } }
								save_temporary_scope_as = county_check
								scope:recipient.capital_county.duchy = {
									is_de_jure_liege_or_above_target = scope:county_check
								}
							}
						}
					}
				}
			}
			add = -1000
		}

		# CONTRACT OPTIONS
		modifier = {
			add = 20
			scope:low_concessions = yes
			desc = CONTRACT_LOW_CONCESSIONS_REASON
		}
		modifier = {
			add = 20
			scope:payment_concessions = yes
			desc = CONTRACT_PAYMENT_CONCESSIONS_REASON
		}
	}

	# Payment Concessions
	send_option = {
		is_valid = {
			scope:actor = { gold >= 1000 }
		}
		flag = payment_concessions
		localization = payment_concessions
	}

	# Low concessions
	send_option = {
		flag = low_concessions
		localization = low_concessions
	}

	send_options_exclusive = no

	ai_potential = {
		is_adult = yes
		is_independent_ruler = yes
		highest_held_title_tier = tier_empire
	}
	
	ai_targets = {
		ai_recipients = neighboring_rulers
	}
	ai_target_quick_trigger = {
		adult = yes
	}
	ai_frequency = 8
	
	ai_will_do = {
		base = 20
		modifier = {
			factor = 5
			scope:recipient = {
				OR = {
					capital_province = { geographical_region = world_great_lakes }
					capital_province = { geographical_region = world_northeast_america }
					capital_province = { geographical_region = world_southeast_america }
					capital_province = { geographical_region = world_mississippi }
				}
			}
		}
		modifier = {
			factor = 0
			scope:recipient = {
				realm_size < 4
			}
			scope:actor = {
				any_neighboring_top_liege_realm_owner = {
					OR = {
						has_government = tribal_government
						AND = {
							has_government = clan_government
							NOT = { culture = { has_cultural_era_or_later = culture_era_renaissance } }
						}
					}
					highest_held_title_tier < tier_kingdom
					capital_province = { geographical_region = world_north_america }
					any_realm_county = { NOT = { target_conquest_blocked_by_treaty_trigger = { CHARACTER = scope:actor TARGET = this } } }
					realm_size > 3
				}
			}
		}
	}
}

create_us_state_interaction = {
	category = interaction_category_diplomacy

	common_interaction = yes
	desc = create_us_state_interaction_desc
	
	is_shown = {
		scope:recipient = {
			is_protectorate = no
			is_vassal_of = scope:actor
			highest_held_title_tier = tier_duchy
		}
		scope:actor = {
			has_title = title:e_united_states
		}
	}

	is_valid = {
		
	}

	is_valid_showing_failures_only = {

	}

	on_accept = {
		# fire the event
	}

	auto_accept = yes
}

apply_for_us_state_interaction = {
	category = interaction_category_diplomacy

	common_interaction = yes
	desc = apply_for_us_state_interaction_desc
	
	is_shown = {
		scope:recipient = {
			has_title = title:e_united_states
		}
		scope:actor = {
			is_protectorate = no
			is_vassal_of = scope:recipient
			highest_held_title_tier = tier_duchy
		}
	}

	is_valid = {
		
	}

	is_valid_showing_failures_only = {

	}

	on_accept = {
		# fire the event for scope:recipient
	}

	auto_accept = yes
}