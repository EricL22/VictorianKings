task_fabricate_claim = {
	position = councillor_court_chaplain

	task_type = task_type_county
	county_target = all
	ai_county_target = neighbor_land
	task_progress = task_progress_percentage
	restart_on_finish = yes

	effect_desc = {
		desc = task_fabricate_claim_effect_desc

		desc = {
			desc = council_task_possible_side_effects
			triggered_desc = {
				trigger = {
					learning > mediocre_skill_rating
				}
				desc = task_fabricate_claim_duchy_claim
			}
			triggered_desc = {
				trigger = {
					learning < high_skill_rating
				}
				desc = task_fabricate_claim_vassal_opinion_loss
			}
			triggered_desc = {
				trigger = {
					learning < high_skill_rating
				}
				desc = task_fabricate_claim_piety_loss
			}
			triggered_desc = {
				trigger = {
					learning < high_skill_rating
				}
				desc = task_fabricate_claim_upset_target
			}
		}
	}

	progress = {
		value = 0
		add = {
			value = court_chaplain_fabricate_claim_base
			desc = COURT_CHAPLAIN_PROGRESS_BASE
		}
		add = {
			value = scope:councillor.court_chaplain_fabricate_claim_monthly_increase_base
			desc = SCALED_COUNCILLOR_LEARNING_VALUE
		}
		# Relation Bonuses/Penalties
		if = { # Friend
			limit = {
				scope:councillor_liege = {
					has_relation_friend = scope:councillor
					NOT = { has_relation_best_friend = scope:councillor }
				}
			}
			add = {
				value = scope:councillor.court_chaplain_fabricate_claim_monthly_increase_friend_bonus
				desc = COUNCILLOR_IS_YOUR_FRIEND
			}
		}
		if = { # Best Friend
			limit = {
				scope:councillor_liege = {
					has_relation_best_friend = scope:councillor
				}
			}
			add = {
				value = scope:councillor.court_chaplain_fabricate_claim_monthly_increase_best_friend_bonus
				desc = COUNCILLOR_IS_YOUR_BEST_FRIEND
			}
		}
		if = { # Rival
			limit = {
				scope:councillor_liege = {
					has_relation_rival = scope:councillor
					NOT = { has_relation_nemesis = scope:councillor }
				}
			}
			add = {
				value = scope:councillor.court_chaplain_fabricate_claim_monthly_increase_rival_bonus
				desc = COUNCILLOR_IS_YOUR_RIVAL
			}
		}
		if = { # Nemesis
			limit = {
				scope:councillor_liege = {
					has_relation_nemesis = scope:councillor
				}
			}
			add = {
				value = scope:councillor.court_chaplain_fabricate_claim_monthly_increase_nemesis_bonus
				desc = COUNCILLOR_IS_YOUR_NEMESIS
			}
		}

		# Perk Bonuses
		if = {
			limit = {
				scope:councillor_liege = { has_perk = accomplished_forger_perk }
			}
			add = {
				value = scope:councillor.court_chaplain_fabricate_claim_perk_bonus_monthly_increase
				desc = FABRICATE_CLAIM_PERK_BONUS_VALUE
			}
		}
		if = {
			limit = {
				councillor_liege_has_erudition_legacy_5_perk = yes
			}
			add = {
				value = scope:councillor.court_chaplain_fabricate_claim_dynasty_perk_bonus
				desc = FABRICATE_CLAIM_DYNASTY_PERK_BONUS_VALUE
			}
		}
		if = {
			limit = {
				councillor_liege_has_family_business_bonus = yes
			}
			add = {
				value = scope:councillor.court_chaplain_fabricate_claim_family_business_bonus
				desc = FAMILY_BUSINESS_BONUS_VALUE
			}
		}

		# Tradition Bonuses
		if = {
			limit = {
				scope:councillor.liege = {
					culture = {
						has_cultural_parameter = languages_speed_up_claims
					}
				}
			}
			add = {
				value = scope:councillor.court_chaplain_fabricate_claim_tradition_language_scholars_bonus
				desc = FABRICATE_CLAIM_LANGUAGE_SCHOLARS_BONUS
			}
		}

		# Innovation Bonuses
		if = {
			limit = {
				scope:councillor.liege = {
					culture = {
						has_innovation = innovation_land_grants
					}
				}
			}
			add = {
				value = scope:councillor.court_chaplain_fabricate_claim_innovation_bonus_land_grants
				desc = COURT_CHAPLAIN_FABRICATE_CLAIM_INNOVATION_BONUS_LAND_GRANTS
			}
		}
		if = {
			limit = {
				exists = scope:county
				NOT = {
					scope:county.holder.faith = scope:councillor.liege.faith
				}
			}
			multiply = {
				value = scope:councillor.court_chaplain_heretic_bonus
				desc = "COURT_CHAPLAIN_FABRICATE_CLAIM_HERETIC_BONUS"
			}
		}
		if = {
			limit = {
				exists = scope:county
				NOT = {
					scope:county = {
						is_neighbor_to_realm = scope:councillor_liege
					}
				}
			}
			multiply = {
				value = scope:councillor.court_chaplain_fabricate_claim_not_adjacent_penalty
				desc = "COURT_CHAPLAIN_FABRICATE_CLAIM_NOT_ADJACENT"
			}
		}
		if = { #Progress penalty when fabricating on vassals
			limit = {
					exists = scope:county
					scope:county.holder = {
						target_is_liege_or_above = scope:councillor.liege 
				}
			}
			multiply = {
				value = scope:councillor.court_chaplain_fabricate_claim_vassal_penalty
				desc = "COURT_CHAPLAIN_FABRICATE_CLAIM_VASSAL_COUNTY"
			}
		}
	}

	potential_county = {
		scope:county.holder.top_liege = {
			in_diplomatic_range = scope:councillor_liege
		}
		scope:county = {
			NOR = {
				holder = scope:councillor_liege
				scope:councillor_liege = {
					has_claim_on = scope:county
				}
				custom_tooltip = {
					text = claim_blocked_by_treaty
					target_conquest_blocked_by_treaty_trigger = { CHARACTER = scope:councillor_liege TARGET = scope:county }
				}
			}
		}
	}

	on_finish_task_county = {
		scope:county = {
			holder = {
				save_scope_as = county_holder
			}
		}
		scope:councillor_liege = {
			trigger_event = {
				on_action = task_fabricate_claim_success_effect
			}
		}
	}

	monthly_on_action = task_fabricate_claim_side_effects

	ai_target_score = {
		value = 1000
		
		if = {
			limit = { # Vassals in the same realm
				scope:councillor_liege = {
					is_independent_ruler = no
				}
				scope:county.holder = {
					is_independent_ruler = no
				}
				scope:county.holder.top_liege = scope:councillor_liege.top_liege
			}
			
			if = {
				limit = {
					exists = scope:county.holder.liege
					scope:councillor_liege = {
						any_liege_or_above = {
							this = scope:county.holder.liege
						}
					}
					scope:county.holder.max_military_strength > {
						value = scope:councillor_liege.max_military_strength
						multiply = 1.2
					}
				}
				subtract = 10000
			}
			else_if = {
				limit = {
					exists = scope:county.holder.liege
					scope:councillor_liege = {
						any_liege_or_above = {
							this = scope:county.holder.liege
						}
					}
				}
				multiply = {
					value = scope:councillor_liege.max_military_strength
					divide = { value = scope:county.holder.max_military_strength min = 1 }
				}
			}
			
			else_if = {
				limit = {
					exists = scope:county.holder.liege.liege
					scope:councillor_liege = {
						any_liege_or_above = {
							this = scope:county.holder.liege.liege
						}
					}
					scope:county.holder.liege.max_military_strength > {
						value = scope:councillor_liege.max_military_strength
						multiply = 1.2
					}
				}
				subtract = 10000
			}
			else_if = {
				limit = {
					exists = scope:county.holder.liege.liege
					scope:councillor_liege = {
						any_liege_or_above = {
							this = scope:county.holder.liege.liege
						}
					}
				}
				multiply = {
					value = scope:councillor_liege.max_military_strength
					divide = { value = scope:county.holder.liege.max_military_strength min = 1 }
				}
			}
			
			else_if = {
				limit = {
					exists = scope:county.holder.liege.liege.liege
					scope:councillor_liege = {
						any_liege_or_above = {
							this = scope:county.holder.liege.liege.liege
						}
					}
					scope:county.holder.liege.liege.max_military_strength > {
						value = scope:councillor_liege.max_military_strength
						multiply = 1.2
					}
				}
				subtract = 10000
			}
			else_if = {
				limit = {
					exists = scope:county.holder.liege.liege.liege
					scope:councillor_liege = {
						any_liege_or_above = {
							this = scope:county.holder.liege.liege.liege
						}
					}
				}
				multiply = {
					value = scope:councillor_liege.max_military_strength
					divide = { value = scope:county.holder.liege.liege.max_military_strength min = 1 }
				}
			}
			
			else_if = {
				limit = {
					exists = scope:county.holder.liege.liege.liege.liege
					scope:councillor_liege = {
						any_liege_or_above = {
							this = scope:county.holder.liege.liege.liege.liege
						}
					}
					scope:county.holder.liege.liege.liege.max_military_strength > {
						value = scope:councillor_liege.max_military_strength
						multiply = 1.2
					}
				}
				subtract = 10000
			}
			else_if = {
				limit = {
					exists = scope:county.holder.liege.liege.liege.liege
					scope:councillor_liege = {
						any_liege_or_above = {
							this = scope:county.holder.liege.liege.liege.liege
						}
					}
				}
				multiply = {
					value = scope:councillor_liege.max_military_strength
					divide = { value = scope:county.holder.liege.liege.liege.max_military_strength min = 1 }
				}
			}
		}
		else_if = {
			limit = {
				scope:county.holder.top_liege.max_military_strength > {
					value = scope:councillor_liege.max_military_strength
					multiply = 1.2
				}
			}
			subtract = 10000
		}
		else = {	
			multiply = {
				value = scope:councillor_liege.max_military_strength
				divide = { value = scope:county.holder.top_liege.max_military_strength min = 1 }
			}
		}
	}

	ai_will_do = {
		value = 0
		if = {
			limit = {
				scope:councillor = {
					is_performing_council_task = task_fabricate_claim
				}
			}
			add = 10000 # Always keep going if this is already chosen
		}
		else_if = {
			limit = {
				OR = {
					ai_greed <= ai_honor
					ai_greed <= 0
					is_at_war = yes
					gold < 100
				}
			}
			subtract = 1000
		}
		else_if = { # If AI has good war, don't fabricate
			limit = {
				any_neighboring_and_across_water_top_liege_realm_owner = {
					scope:councillor_liege = {
						tier_difference = {
							target = prev
							value >= -1
						}
						NOR = {
							is_allied_to = prev
							has_truce = prev
						}
						has_any_cb_on = prev
					}			
				}
			}
			subtract = 1000
		}
		else = {
			add = 100
		}

		# Agenda impact
		if = {
			limit = {
				any_character_struggle = {
					involvement = involved
				}
			}
			add = {
				value = 0
				if = {
					limit = {
						any_character_struggle = {
							phase_has_catalyst = catalyst_gain_claim_on_title
						}
						has_character_flag = agenda_towards_escalation
					}
					add = 200
				}
				else_if = {
					limit = {
						any_character_struggle = {
							phase_has_catalyst = catalyst_gain_claim_on_title
						}
					}
					add = -100
				}
			}
		}
	}
} 
